{
  "version": 3,
  "sources": ["../../../../../../node_modules/boolbase/index.js", "../../../../../../node_modules/cheerio/dist/browser/static.js", "../../../../../../node_modules/domutils/lib/esm/index.js", "../../../../../../node_modules/domelementtype/lib/esm/index.js", "../../../../../../node_modules/domhandler/lib/esm/node.js", "../../../../../../node_modules/domhandler/lib/esm/index.js", "../../../../../../node_modules/entities/lib/esm/generated/decode-data-html.js", "../../../../../../node_modules/entities/lib/esm/generated/decode-data-xml.js", "../../../../../../node_modules/entities/lib/esm/decode_codepoint.js", "../../../../../../node_modules/entities/lib/esm/decode.js", "../../../../../../node_modules/entities/lib/esm/generated/encode-html.js", "../../../../../../node_modules/entities/lib/esm/escape.js", "../../../../../../node_modules/entities/lib/esm/index.js", "../../../../../../node_modules/dom-serializer/lib/esm/foreignNames.js", "../../../../../../node_modules/dom-serializer/lib/esm/index.js", "../../../../../../node_modules/domutils/lib/esm/stringify.js", "../../../../../../node_modules/domutils/lib/esm/traversal.js", "../../../../../../node_modules/domutils/lib/esm/manipulation.js", "../../../../../../node_modules/domutils/lib/esm/querying.js", "../../../../../../node_modules/domutils/lib/esm/legacy.js", "../../../../../../node_modules/domutils/lib/esm/helpers.js", "../../../../../../node_modules/domutils/lib/esm/feeds.js", "../../../../../../node_modules/cheerio/dist/browser/options.js", "../../../../../../node_modules/cheerio/dist/browser/api/attributes.js", "../../../../../../node_modules/cheerio/dist/browser/utils.js", "../../../../../../node_modules/cheerio/dist/browser/api/traversing.js", "../../../../../../node_modules/css-what/lib/es/types.js", "../../../../../../node_modules/css-what/lib/es/parse.js", "../../../../../../node_modules/css-what/lib/es/stringify.js", "../../../../../../node_modules/css-select/lib/esm/index.js", "../../../../../../node_modules/css-select/lib/esm/compile.js", "../../../../../../node_modules/css-select/lib/esm/sort.js", "../../../../../../node_modules/css-select/lib/esm/attributes.js", "../../../../../../node_modules/nth-check/lib/esm/parse.js", "../../../../../../node_modules/nth-check/lib/esm/compile.js", "../../../../../../node_modules/nth-check/lib/esm/index.js", "../../../../../../node_modules/css-select/lib/esm/pseudo-selectors/filters.js", "../../../../../../node_modules/css-select/lib/esm/pseudo-selectors/pseudos.js", "../../../../../../node_modules/css-select/lib/esm/pseudo-selectors/aliases.js", "../../../../../../node_modules/css-select/lib/esm/pseudo-selectors/subselects.js", "../../../../../../node_modules/css-select/lib/esm/pseudo-selectors/index.js", "../../../../../../node_modules/css-select/lib/esm/general.js", "../../../../../../node_modules/cheerio-select/lib/esm/index.js", "../../../../../../node_modules/cheerio-select/lib/esm/positionals.js", "../../../../../../node_modules/cheerio-select/lib/esm/helpers.js", "../../../../../../node_modules/cheerio/dist/browser/api/manipulation.js", "../../../../../../node_modules/cheerio/dist/browser/parse.js", "../../../../../../node_modules/cheerio/dist/browser/api/css.js", "../../../../../../node_modules/cheerio/dist/browser/api/forms.js", "../../../../../../node_modules/cheerio/dist/browser/api/extract.js", "../../../../../../node_modules/cheerio/dist/browser/cheerio.js", "../../../../../../node_modules/cheerio/dist/browser/load.js", "../../../../../../node_modules/parse5/dist/common/unicode.js", "../../../../../../node_modules/parse5/dist/common/error-codes.js", "../../../../../../node_modules/parse5/dist/tokenizer/preprocessor.js", "../../../../../../node_modules/parse5/dist/common/token.js", "../../../../../../node_modules/parse5/dist/common/html.js", "../../../../../../node_modules/parse5/dist/tokenizer/index.js", "../../../../../../node_modules/parse5/dist/parser/open-element-stack.js", "../../../../../../node_modules/parse5/dist/parser/formatting-element-list.js", "../../../../../../node_modules/parse5/dist/tree-adapters/default.js", "../../../../../../node_modules/parse5/dist/common/doctype.js", "../../../../../../node_modules/parse5/dist/common/foreign-content.js", "../../../../../../node_modules/parse5/dist/parser/index.js", "../../../../../../node_modules/parse5/dist/serializer/index.js", "../../../../../../node_modules/parse5/dist/index.js", "../../../../../../node_modules/parse5-htmlparser2-tree-adapter/dist/index.js", "../../../../../../node_modules/cheerio/dist/browser/parsers/parse5-adapter.js", "../../../../../../node_modules/htmlparser2/lib/esm/Tokenizer.js", "../../../../../../node_modules/htmlparser2/lib/esm/Parser.js", "../../../../../../node_modules/htmlparser2/lib/esm/index.js", "../../../../../../node_modules/cheerio/dist/browser/load-parse.js"],
  "sourcesContent": ["module.exports = {\n  trueFunc: function trueFunc() {\n    return true;\n  },\n  falseFunc: function falseFunc() {\n    return false;\n  }\n};", "import { textContent } from 'domutils';\nimport { flattenOptions } from './options.js';\n/**\n * Helper function to render a DOM.\n *\n * @param that - Cheerio instance to render.\n * @param dom - The DOM to render. Defaults to `that`'s root.\n * @param options - Options for rendering.\n * @returns The rendered document.\n */\nfunction render(that, dom, options) {\n  if (!that) return '';\n  return that(dom !== null && dom !== void 0 ? dom : that._root.children, null, undefined, options).toString();\n}\n/**\n * Checks if a passed object is an options object.\n *\n * @param dom - Object to check if it is an options object.\n * @param options - Options object.\n * @returns Whether the object is an options object.\n */\nfunction isOptions(dom, options) {\n  return !options && typeof dom === 'object' && dom != null && !('length' in dom) && !('type' in dom);\n}\nexport function html(dom, options) {\n  /*\n   * Be flexible about parameters, sometimes we call html(),\n   * with options as only parameter\n   * check dom argument for dom element specific properties\n   * assume there is no 'length' or 'type' properties in the options object\n   */\n  const toRender = isOptions(dom) ? (options = dom, undefined) : dom;\n  /*\n   * Sometimes `$.html()` is used without preloading html,\n   * so fallback non-existing options to the default ones.\n   */\n  const opts = {\n    ...(this === null || this === void 0 ? void 0 : this._options),\n    ...flattenOptions(options)\n  };\n  return render(this, toRender, opts);\n}\n/**\n * Render the document as XML.\n *\n * @category Static\n * @param dom - Element to render.\n * @returns THe rendered document.\n */\nexport function xml(dom) {\n  const options = {\n    ...this._options,\n    xmlMode: true\n  };\n  return render(this, dom, options);\n}\n/**\n * Render the document as text.\n *\n * This returns the `textContent` of the passed elements. The result will\n * include the contents of `<script>` and `<style>` elements. To avoid this, use\n * `.prop('innerText')` instead.\n *\n * @category Static\n * @param elements - Elements to render.\n * @returns The rendered document.\n */\nexport function text(elements) {\n  const elems = elements !== null && elements !== void 0 ? elements : this ? this.root() : [];\n  let ret = '';\n  for (let i = 0; i < elems.length; i++) {\n    ret += textContent(elems[i]);\n  }\n  return ret;\n}\nexport function parseHTML(data, context, keepScripts = typeof context === 'boolean' ? context : false) {\n  if (!data || typeof data !== 'string') {\n    return null;\n  }\n  if (typeof context === 'boolean') {\n    keepScripts = context;\n  }\n  const parsed = this.load(data, this._options, false);\n  if (!keepScripts) {\n    parsed('script').remove();\n  }\n  /*\n   * The `children` array is used by Cheerio internally to group elements that\n   * share the same parents. When nodes created through `parseHTML` are\n   * inserted into previously-existing DOM structures, they will be removed\n   * from the `children` array. The results of `parseHTML` should remain\n   * constant across these operations, so a shallow copy should be returned.\n   */\n  return [...parsed.root()[0].children];\n}\n/**\n * Sometimes you need to work with the top-level root element. To query it, you\n * can use `$.root()`.\n *\n * @category Static\n * @example\n *\n * ```js\n * $.root().append('<ul id=\"vegetables\"></ul>').html();\n * //=> <ul id=\"fruits\">...</ul><ul id=\"vegetables\"></ul>\n * ```\n *\n * @returns Cheerio instance wrapping the root node.\n * @alias Cheerio.root\n */\nexport function root() {\n  return this(this._root);\n}\n/**\n * Checks to see if the `contained` DOM element is a descendant of the\n * `container` DOM element.\n *\n * @category Static\n * @param container - Potential parent node.\n * @param contained - Potential child node.\n * @returns Indicates if the nodes contain one another.\n * @alias Cheerio.contains\n * @see {@link https://api.jquery.com/jQuery.contains/}\n */\nexport function contains(container, contained) {\n  // According to the jQuery API, an element does not \"contain\" itself\n  if (contained === container) {\n    return false;\n  }\n  /*\n   * Step up the descendants, stopping when the root element is reached\n   * (signaled by `.parent` returning a reference to the same object)\n   */\n  let next = contained;\n  while (next && next !== next.parent) {\n    next = next.parent;\n    if (next === container) {\n      return true;\n    }\n  }\n  return false;\n}\n/**\n * Extract multiple values from a document, and store them in an object.\n *\n * @category Static\n * @param map - An object containing key-value pairs. The keys are the names of\n *   the properties to be created on the object, and the values are the\n *   selectors to be used to extract the values.\n * @returns An object containing the extracted values.\n */\nexport function extract(map) {\n  return this.root().extract(map);\n}\n/**\n * $.merge().\n *\n * @category Static\n * @param arr1 - First array.\n * @param arr2 - Second array.\n * @returns `arr1`, with elements of `arr2` inserted.\n * @alias Cheerio.merge\n * @see {@link https://api.jquery.com/jQuery.merge/}\n */\nexport function merge(arr1, arr2) {\n  if (!isArrayLike(arr1) || !isArrayLike(arr2)) {\n    return;\n  }\n  let newLength = arr1.length;\n  const len = +arr2.length;\n  for (let i = 0; i < len; i++) {\n    arr1[newLength++] = arr2[i];\n  }\n  arr1.length = newLength;\n  return arr1;\n}\n/**\n * Checks if an object is array-like.\n *\n * @category Static\n * @param item - Item to check.\n * @returns Indicates if the item is array-like.\n */\nfunction isArrayLike(item) {\n  if (Array.isArray(item)) {\n    return true;\n  }\n  if (typeof item !== 'object' || item === null || !('length' in item) || typeof item.length !== 'number' || item.length < 0) {\n    return false;\n  }\n  for (let i = 0; i < item.length; i++) {\n    if (!(i in item)) {\n      return false;\n    }\n  }\n  return true;\n}\n", "export * from \"./stringify.js\";\nexport * from \"./traversal.js\";\nexport * from \"./manipulation.js\";\nexport * from \"./querying.js\";\nexport * from \"./legacy.js\";\nexport * from \"./helpers.js\";\nexport * from \"./feeds.js\";\n/** @deprecated Use these methods from `domhandler` directly. */\nexport { isTag, isCDATA, isText, isComment, isDocument, hasChildren } from \"domhandler\";\n", "/** Types of elements found in htmlparser2's DOM */\nexport var ElementType;\n(function (ElementType) {\n  /** Type for the root element of a document */\n  ElementType[\"Root\"] = \"root\";\n  /** Type for Text */\n  ElementType[\"Text\"] = \"text\";\n  /** Type for <? ... ?> */\n  ElementType[\"Directive\"] = \"directive\";\n  /** Type for <!-- ... --> */\n  ElementType[\"Comment\"] = \"comment\";\n  /** Type for <script> tags */\n  ElementType[\"Script\"] = \"script\";\n  /** Type for <style> tags */\n  ElementType[\"Style\"] = \"style\";\n  /** Type for Any tag */\n  ElementType[\"Tag\"] = \"tag\";\n  /** Type for <![CDATA[ ... ]]> */\n  ElementType[\"CDATA\"] = \"cdata\";\n  /** Type for <!doctype ...> */\n  ElementType[\"Doctype\"] = \"doctype\";\n})(ElementType || (ElementType = {}));\n/**\n * Tests whether an element is a tag or not.\n *\n * @param elem Element to test\n */\nexport function isTag(elem) {\n  return elem.type === ElementType.Tag || elem.type === ElementType.Script || elem.type === ElementType.Style;\n}\n// Exports for backwards compatibility\n/** Type for the root element of a document */\nexport const Root = ElementType.Root;\n/** Type for Text */\nexport const Text = ElementType.Text;\n/** Type for <? ... ?> */\nexport const Directive = ElementType.Directive;\n/** Type for <!-- ... --> */\nexport const Comment = ElementType.Comment;\n/** Type for <script> tags */\nexport const Script = ElementType.Script;\n/** Type for <style> tags */\nexport const Style = ElementType.Style;\n/** Type for Any tag */\nexport const Tag = ElementType.Tag;\n/** Type for <![CDATA[ ... ]]> */\nexport const CDATA = ElementType.CDATA;\n/** Type for <!doctype ...> */\nexport const Doctype = ElementType.Doctype;", "import { ElementType, isTag as isTagRaw } from \"domelementtype\";\n/**\n * This object will be used as the prototype for Nodes when creating a\n * DOM-Level-1-compliant structure.\n */\nexport class Node {\n  constructor() {\n    /** Parent of the node */\n    this.parent = null;\n    /** Previous sibling */\n    this.prev = null;\n    /** Next sibling */\n    this.next = null;\n    /** The start index of the node. Requires `withStartIndices` on the handler to be `true. */\n    this.startIndex = null;\n    /** The end index of the node. Requires `withEndIndices` on the handler to be `true. */\n    this.endIndex = null;\n  }\n  // Read-write aliases for properties\n  /**\n   * Same as {@link parent}.\n   * [DOM spec](https://dom.spec.whatwg.org)-compatible alias.\n   */\n  get parentNode() {\n    return this.parent;\n  }\n  set parentNode(parent) {\n    this.parent = parent;\n  }\n  /**\n   * Same as {@link prev}.\n   * [DOM spec](https://dom.spec.whatwg.org)-compatible alias.\n   */\n  get previousSibling() {\n    return this.prev;\n  }\n  set previousSibling(prev) {\n    this.prev = prev;\n  }\n  /**\n   * Same as {@link next}.\n   * [DOM spec](https://dom.spec.whatwg.org)-compatible alias.\n   */\n  get nextSibling() {\n    return this.next;\n  }\n  set nextSibling(next) {\n    this.next = next;\n  }\n  /**\n   * Clone this node, and optionally its children.\n   *\n   * @param recursive Clone child nodes as well.\n   * @returns A clone of the node.\n   */\n  cloneNode(recursive = false) {\n    return cloneNode(this, recursive);\n  }\n}\n/**\n * A node that contains some data.\n */\nexport class DataNode extends Node {\n  /**\n   * @param data The content of the data node\n   */\n  constructor(data) {\n    super();\n    this.data = data;\n  }\n  /**\n   * Same as {@link data}.\n   * [DOM spec](https://dom.spec.whatwg.org)-compatible alias.\n   */\n  get nodeValue() {\n    return this.data;\n  }\n  set nodeValue(data) {\n    this.data = data;\n  }\n}\n/**\n * Text within the document.\n */\nexport class Text extends DataNode {\n  constructor() {\n    super(...arguments);\n    this.type = ElementType.Text;\n  }\n  get nodeType() {\n    return 3;\n  }\n}\n/**\n * Comments within the document.\n */\nexport class Comment extends DataNode {\n  constructor() {\n    super(...arguments);\n    this.type = ElementType.Comment;\n  }\n  get nodeType() {\n    return 8;\n  }\n}\n/**\n * Processing instructions, including doc types.\n */\nexport class ProcessingInstruction extends DataNode {\n  constructor(name, data) {\n    super(data);\n    this.name = name;\n    this.type = ElementType.Directive;\n  }\n  get nodeType() {\n    return 1;\n  }\n}\n/**\n * A `Node` that can have children.\n */\nexport class NodeWithChildren extends Node {\n  /**\n   * @param children Children of the node. Only certain node types can have children.\n   */\n  constructor(children) {\n    super();\n    this.children = children;\n  }\n  // Aliases\n  /** First child of the node. */\n  get firstChild() {\n    var _a;\n    return (_a = this.children[0]) !== null && _a !== void 0 ? _a : null;\n  }\n  /** Last child of the node. */\n  get lastChild() {\n    return this.children.length > 0 ? this.children[this.children.length - 1] : null;\n  }\n  /**\n   * Same as {@link children}.\n   * [DOM spec](https://dom.spec.whatwg.org)-compatible alias.\n   */\n  get childNodes() {\n    return this.children;\n  }\n  set childNodes(children) {\n    this.children = children;\n  }\n}\nexport class CDATA extends NodeWithChildren {\n  constructor() {\n    super(...arguments);\n    this.type = ElementType.CDATA;\n  }\n  get nodeType() {\n    return 4;\n  }\n}\n/**\n * The root node of the document.\n */\nexport class Document extends NodeWithChildren {\n  constructor() {\n    super(...arguments);\n    this.type = ElementType.Root;\n  }\n  get nodeType() {\n    return 9;\n  }\n}\n/**\n * An element within the DOM.\n */\nexport class Element extends NodeWithChildren {\n  /**\n   * @param name Name of the tag, eg. `div`, `span`.\n   * @param attribs Object mapping attribute names to attribute values.\n   * @param children Children of the node.\n   */\n  constructor(name, attribs, children = [], type = name === \"script\" ? ElementType.Script : name === \"style\" ? ElementType.Style : ElementType.Tag) {\n    super(children);\n    this.name = name;\n    this.attribs = attribs;\n    this.type = type;\n  }\n  get nodeType() {\n    return 1;\n  }\n  // DOM Level 1 aliases\n  /**\n   * Same as {@link name}.\n   * [DOM spec](https://dom.spec.whatwg.org)-compatible alias.\n   */\n  get tagName() {\n    return this.name;\n  }\n  set tagName(name) {\n    this.name = name;\n  }\n  get attributes() {\n    return Object.keys(this.attribs).map(name => {\n      var _a, _b;\n      return {\n        name,\n        value: this.attribs[name],\n        namespace: (_a = this[\"x-attribsNamespace\"]) === null || _a === void 0 ? void 0 : _a[name],\n        prefix: (_b = this[\"x-attribsPrefix\"]) === null || _b === void 0 ? void 0 : _b[name]\n      };\n    });\n  }\n}\n/**\n * @param node Node to check.\n * @returns `true` if the node is a `Element`, `false` otherwise.\n */\nexport function isTag(node) {\n  return isTagRaw(node);\n}\n/**\n * @param node Node to check.\n * @returns `true` if the node has the type `CDATA`, `false` otherwise.\n */\nexport function isCDATA(node) {\n  return node.type === ElementType.CDATA;\n}\n/**\n * @param node Node to check.\n * @returns `true` if the node has the type `Text`, `false` otherwise.\n */\nexport function isText(node) {\n  return node.type === ElementType.Text;\n}\n/**\n * @param node Node to check.\n * @returns `true` if the node has the type `Comment`, `false` otherwise.\n */\nexport function isComment(node) {\n  return node.type === ElementType.Comment;\n}\n/**\n * @param node Node to check.\n * @returns `true` if the node has the type `ProcessingInstruction`, `false` otherwise.\n */\nexport function isDirective(node) {\n  return node.type === ElementType.Directive;\n}\n/**\n * @param node Node to check.\n * @returns `true` if the node has the type `ProcessingInstruction`, `false` otherwise.\n */\nexport function isDocument(node) {\n  return node.type === ElementType.Root;\n}\n/**\n * @param node Node to check.\n * @returns `true` if the node has children, `false` otherwise.\n */\nexport function hasChildren(node) {\n  return Object.prototype.hasOwnProperty.call(node, \"children\");\n}\n/**\n * Clone a node, and optionally its children.\n *\n * @param recursive Clone child nodes as well.\n * @returns A clone of the node.\n */\nexport function cloneNode(node, recursive = false) {\n  let result;\n  if (isText(node)) {\n    result = new Text(node.data);\n  } else if (isComment(node)) {\n    result = new Comment(node.data);\n  } else if (isTag(node)) {\n    const children = recursive ? cloneChildren(node.children) : [];\n    const clone = new Element(node.name, {\n      ...node.attribs\n    }, children);\n    children.forEach(child => child.parent = clone);\n    if (node.namespace != null) {\n      clone.namespace = node.namespace;\n    }\n    if (node[\"x-attribsNamespace\"]) {\n      clone[\"x-attribsNamespace\"] = {\n        ...node[\"x-attribsNamespace\"]\n      };\n    }\n    if (node[\"x-attribsPrefix\"]) {\n      clone[\"x-attribsPrefix\"] = {\n        ...node[\"x-attribsPrefix\"]\n      };\n    }\n    result = clone;\n  } else if (isCDATA(node)) {\n    const children = recursive ? cloneChildren(node.children) : [];\n    const clone = new CDATA(children);\n    children.forEach(child => child.parent = clone);\n    result = clone;\n  } else if (isDocument(node)) {\n    const children = recursive ? cloneChildren(node.children) : [];\n    const clone = new Document(children);\n    children.forEach(child => child.parent = clone);\n    if (node[\"x-mode\"]) {\n      clone[\"x-mode\"] = node[\"x-mode\"];\n    }\n    result = clone;\n  } else if (isDirective(node)) {\n    const instruction = new ProcessingInstruction(node.name, node.data);\n    if (node[\"x-name\"] != null) {\n      instruction[\"x-name\"] = node[\"x-name\"];\n      instruction[\"x-publicId\"] = node[\"x-publicId\"];\n      instruction[\"x-systemId\"] = node[\"x-systemId\"];\n    }\n    result = instruction;\n  } else {\n    throw new Error(`Not implemented yet: ${node.type}`);\n  }\n  result.startIndex = node.startIndex;\n  result.endIndex = node.endIndex;\n  if (node.sourceCodeLocation != null) {\n    result.sourceCodeLocation = node.sourceCodeLocation;\n  }\n  return result;\n}\nfunction cloneChildren(childs) {\n  const children = childs.map(child => cloneNode(child, true));\n  for (let i = 1; i < children.length; i++) {\n    children[i].prev = children[i - 1];\n    children[i - 1].next = children[i];\n  }\n  return children;\n}", "import { ElementType } from \"domelementtype\";\nimport { Element, Text, Comment, CDATA, Document, ProcessingInstruction } from \"./node.js\";\nexport * from \"./node.js\";\n// Default options\nconst defaultOpts = {\n  withStartIndices: false,\n  withEndIndices: false,\n  xmlMode: false\n};\nexport class DomHandler {\n  /**\n   * @param callback Called once parsing has completed.\n   * @param options Settings for the handler.\n   * @param elementCB Callback whenever a tag is closed.\n   */\n  constructor(callback, options, elementCB) {\n    /** The elements of the DOM */\n    this.dom = [];\n    /** The root element for the DOM */\n    this.root = new Document(this.dom);\n    /** Indicated whether parsing has been completed. */\n    this.done = false;\n    /** Stack of open tags. */\n    this.tagStack = [this.root];\n    /** A data node that is still being written to. */\n    this.lastNode = null;\n    /** Reference to the parser instance. Used for location information. */\n    this.parser = null;\n    // Make it possible to skip arguments, for backwards-compatibility\n    if (typeof options === \"function\") {\n      elementCB = options;\n      options = defaultOpts;\n    }\n    if (typeof callback === \"object\") {\n      options = callback;\n      callback = undefined;\n    }\n    this.callback = callback !== null && callback !== void 0 ? callback : null;\n    this.options = options !== null && options !== void 0 ? options : defaultOpts;\n    this.elementCB = elementCB !== null && elementCB !== void 0 ? elementCB : null;\n  }\n  onparserinit(parser) {\n    this.parser = parser;\n  }\n  // Resets the handler back to starting state\n  onreset() {\n    this.dom = [];\n    this.root = new Document(this.dom);\n    this.done = false;\n    this.tagStack = [this.root];\n    this.lastNode = null;\n    this.parser = null;\n  }\n  // Signals the handler that parsing is done\n  onend() {\n    if (this.done) return;\n    this.done = true;\n    this.parser = null;\n    this.handleCallback(null);\n  }\n  onerror(error) {\n    this.handleCallback(error);\n  }\n  onclosetag() {\n    this.lastNode = null;\n    const elem = this.tagStack.pop();\n    if (this.options.withEndIndices) {\n      elem.endIndex = this.parser.endIndex;\n    }\n    if (this.elementCB) this.elementCB(elem);\n  }\n  onopentag(name, attribs) {\n    const type = this.options.xmlMode ? ElementType.Tag : undefined;\n    const element = new Element(name, attribs, undefined, type);\n    this.addNode(element);\n    this.tagStack.push(element);\n  }\n  ontext(data) {\n    const {\n      lastNode\n    } = this;\n    if (lastNode && lastNode.type === ElementType.Text) {\n      lastNode.data += data;\n      if (this.options.withEndIndices) {\n        lastNode.endIndex = this.parser.endIndex;\n      }\n    } else {\n      const node = new Text(data);\n      this.addNode(node);\n      this.lastNode = node;\n    }\n  }\n  oncomment(data) {\n    if (this.lastNode && this.lastNode.type === ElementType.Comment) {\n      this.lastNode.data += data;\n      return;\n    }\n    const node = new Comment(data);\n    this.addNode(node);\n    this.lastNode = node;\n  }\n  oncommentend() {\n    this.lastNode = null;\n  }\n  oncdatastart() {\n    const text = new Text(\"\");\n    const node = new CDATA([text]);\n    this.addNode(node);\n    text.parent = node;\n    this.lastNode = text;\n  }\n  oncdataend() {\n    this.lastNode = null;\n  }\n  onprocessinginstruction(name, data) {\n    const node = new ProcessingInstruction(name, data);\n    this.addNode(node);\n  }\n  handleCallback(error) {\n    if (typeof this.callback === \"function\") {\n      this.callback(error, this.dom);\n    } else if (error) {\n      throw error;\n    }\n  }\n  addNode(node) {\n    const parent = this.tagStack[this.tagStack.length - 1];\n    const previousSibling = parent.children[parent.children.length - 1];\n    if (this.options.withStartIndices) {\n      node.startIndex = this.parser.startIndex;\n    }\n    if (this.options.withEndIndices) {\n      node.endIndex = this.parser.endIndex;\n    }\n    parent.children.push(node);\n    if (previousSibling) {\n      node.prev = previousSibling;\n      previousSibling.next = node;\n    }\n    node.parent = parent;\n    this.lastNode = null;\n  }\n}\nexport default DomHandler;", "// Generated using scripts/write-decode-map.ts\nexport default new Uint16Array(\n// prettier-ignore\n\"\\u1d41<\\xd5\\u0131\\u028a\\u049d\\u057b\\u05d0\\u0675\\u06de\\u07a2\\u07d6\\u080f\\u0a4a\\u0a91\\u0da1\\u0e6d\\u0f09\\u0f26\\u10ca\\u1228\\u12e1\\u1415\\u149d\\u14c3\\u14df\\u1525\\0\\0\\0\\0\\0\\0\\u156b\\u16cd\\u198d\\u1c12\\u1ddd\\u1f7e\\u2060\\u21b0\\u228d\\u23c0\\u23fb\\u2442\\u2824\\u2912\\u2d08\\u2e48\\u2fce\\u3016\\u32ba\\u3639\\u37ac\\u38fe\\u3a28\\u3a71\\u3ae0\\u3b2e\\u0800EMabcfglmnoprstu\\\\bfms\\x7f\\x84\\x8b\\x90\\x95\\x98\\xa6\\xb3\\xb9\\xc8\\xcflig\\u803b\\xc6\\u40c6P\\u803b&\\u4026cute\\u803b\\xc1\\u40c1reve;\\u4102\\u0100iyx}rc\\u803b\\xc2\\u40c2;\\u4410r;\\uc000\\ud835\\udd04rave\\u803b\\xc0\\u40c0pha;\\u4391acr;\\u4100d;\\u6a53\\u0100gp\\x9d\\xa1on;\\u4104f;\\uc000\\ud835\\udd38plyFunction;\\u6061ing\\u803b\\xc5\\u40c5\\u0100cs\\xbe\\xc3r;\\uc000\\ud835\\udc9cign;\\u6254ilde\\u803b\\xc3\\u40c3ml\\u803b\\xc4\\u40c4\\u0400aceforsu\\xe5\\xfb\\xfe\\u0117\\u011c\\u0122\\u0127\\u012a\\u0100cr\\xea\\xf2kslash;\\u6216\\u0176\\xf6\\xf8;\\u6ae7ed;\\u6306y;\\u4411\\u0180crt\\u0105\\u010b\\u0114ause;\\u6235noullis;\\u612ca;\\u4392r;\\uc000\\ud835\\udd05pf;\\uc000\\ud835\\udd39eve;\\u42d8c\\xf2\\u0113mpeq;\\u624e\\u0700HOacdefhilorsu\\u014d\\u0151\\u0156\\u0180\\u019e\\u01a2\\u01b5\\u01b7\\u01ba\\u01dc\\u0215\\u0273\\u0278\\u027ecy;\\u4427PY\\u803b\\xa9\\u40a9\\u0180cpy\\u015d\\u0162\\u017aute;\\u4106\\u0100;i\\u0167\\u0168\\u62d2talDifferentialD;\\u6145leys;\\u612d\\u0200aeio\\u0189\\u018e\\u0194\\u0198ron;\\u410cdil\\u803b\\xc7\\u40c7rc;\\u4108nint;\\u6230ot;\\u410a\\u0100dn\\u01a7\\u01adilla;\\u40b8terDot;\\u40b7\\xf2\\u017fi;\\u43a7rcle\\u0200DMPT\\u01c7\\u01cb\\u01d1\\u01d6ot;\\u6299inus;\\u6296lus;\\u6295imes;\\u6297o\\u0100cs\\u01e2\\u01f8kwiseContourIntegral;\\u6232eCurly\\u0100DQ\\u0203\\u020foubleQuote;\\u601duote;\\u6019\\u0200lnpu\\u021e\\u0228\\u0247\\u0255on\\u0100;e\\u0225\\u0226\\u6237;\\u6a74\\u0180git\\u022f\\u0236\\u023aruent;\\u6261nt;\\u622fourIntegral;\\u622e\\u0100fr\\u024c\\u024e;\\u6102oduct;\\u6210nterClockwiseContourIntegral;\\u6233oss;\\u6a2fcr;\\uc000\\ud835\\udc9ep\\u0100;C\\u0284\\u0285\\u62d3ap;\\u624d\\u0580DJSZacefios\\u02a0\\u02ac\\u02b0\\u02b4\\u02b8\\u02cb\\u02d7\\u02e1\\u02e6\\u0333\\u048d\\u0100;o\\u0179\\u02a5trahd;\\u6911cy;\\u4402cy;\\u4405cy;\\u440f\\u0180grs\\u02bf\\u02c4\\u02c7ger;\\u6021r;\\u61a1hv;\\u6ae4\\u0100ay\\u02d0\\u02d5ron;\\u410e;\\u4414l\\u0100;t\\u02dd\\u02de\\u6207a;\\u4394r;\\uc000\\ud835\\udd07\\u0100af\\u02eb\\u0327\\u0100cm\\u02f0\\u0322ritical\\u0200ADGT\\u0300\\u0306\\u0316\\u031ccute;\\u40b4o\\u0174\\u030b\\u030d;\\u42d9bleAcute;\\u42ddrave;\\u4060ilde;\\u42dcond;\\u62c4ferentialD;\\u6146\\u0470\\u033d\\0\\0\\0\\u0342\\u0354\\0\\u0405f;\\uc000\\ud835\\udd3b\\u0180;DE\\u0348\\u0349\\u034d\\u40a8ot;\\u60dcqual;\\u6250ble\\u0300CDLRUV\\u0363\\u0372\\u0382\\u03cf\\u03e2\\u03f8ontourIntegra\\xec\\u0239o\\u0274\\u0379\\0\\0\\u037b\\xbb\\u0349nArrow;\\u61d3\\u0100eo\\u0387\\u03a4ft\\u0180ART\\u0390\\u0396\\u03a1rrow;\\u61d0ightArrow;\\u61d4e\\xe5\\u02cang\\u0100LR\\u03ab\\u03c4eft\\u0100AR\\u03b3\\u03b9rrow;\\u67f8ightArrow;\\u67faightArrow;\\u67f9ight\\u0100AT\\u03d8\\u03derrow;\\u61d2ee;\\u62a8p\\u0241\\u03e9\\0\\0\\u03efrrow;\\u61d1ownArrow;\\u61d5erticalBar;\\u6225n\\u0300ABLRTa\\u0412\\u042a\\u0430\\u045e\\u047f\\u037crrow\\u0180;BU\\u041d\\u041e\\u0422\\u6193ar;\\u6913pArrow;\\u61f5reve;\\u4311eft\\u02d2\\u043a\\0\\u0446\\0\\u0450ightVector;\\u6950eeVector;\\u695eector\\u0100;B\\u0459\\u045a\\u61bdar;\\u6956ight\\u01d4\\u0467\\0\\u0471eeVector;\\u695fector\\u0100;B\\u047a\\u047b\\u61c1ar;\\u6957ee\\u0100;A\\u0486\\u0487\\u62a4rrow;\\u61a7\\u0100ct\\u0492\\u0497r;\\uc000\\ud835\\udc9frok;\\u4110\\u0800NTacdfglmopqstux\\u04bd\\u04c0\\u04c4\\u04cb\\u04de\\u04e2\\u04e7\\u04ee\\u04f5\\u0521\\u052f\\u0536\\u0552\\u055d\\u0560\\u0565G;\\u414aH\\u803b\\xd0\\u40d0cute\\u803b\\xc9\\u40c9\\u0180aiy\\u04d2\\u04d7\\u04dcron;\\u411arc\\u803b\\xca\\u40ca;\\u442dot;\\u4116r;\\uc000\\ud835\\udd08rave\\u803b\\xc8\\u40c8ement;\\u6208\\u0100ap\\u04fa\\u04fecr;\\u4112ty\\u0253\\u0506\\0\\0\\u0512mallSquare;\\u65fberySmallSquare;\\u65ab\\u0100gp\\u0526\\u052aon;\\u4118f;\\uc000\\ud835\\udd3csilon;\\u4395u\\u0100ai\\u053c\\u0549l\\u0100;T\\u0542\\u0543\\u6a75ilde;\\u6242librium;\\u61cc\\u0100ci\\u0557\\u055ar;\\u6130m;\\u6a73a;\\u4397ml\\u803b\\xcb\\u40cb\\u0100ip\\u056a\\u056fsts;\\u6203onentialE;\\u6147\\u0280cfios\\u0585\\u0588\\u058d\\u05b2\\u05ccy;\\u4424r;\\uc000\\ud835\\udd09lled\\u0253\\u0597\\0\\0\\u05a3mallSquare;\\u65fcerySmallSquare;\\u65aa\\u0370\\u05ba\\0\\u05bf\\0\\0\\u05c4f;\\uc000\\ud835\\udd3dAll;\\u6200riertrf;\\u6131c\\xf2\\u05cb\\u0600JTabcdfgorst\\u05e8\\u05ec\\u05ef\\u05fa\\u0600\\u0612\\u0616\\u061b\\u061d\\u0623\\u066c\\u0672cy;\\u4403\\u803b>\\u403emma\\u0100;d\\u05f7\\u05f8\\u4393;\\u43dcreve;\\u411e\\u0180eiy\\u0607\\u060c\\u0610dil;\\u4122rc;\\u411c;\\u4413ot;\\u4120r;\\uc000\\ud835\\udd0a;\\u62d9pf;\\uc000\\ud835\\udd3eeater\\u0300EFGLST\\u0635\\u0644\\u064e\\u0656\\u065b\\u0666qual\\u0100;L\\u063e\\u063f\\u6265ess;\\u62dbullEqual;\\u6267reater;\\u6aa2ess;\\u6277lantEqual;\\u6a7eilde;\\u6273cr;\\uc000\\ud835\\udca2;\\u626b\\u0400Aacfiosu\\u0685\\u068b\\u0696\\u069b\\u069e\\u06aa\\u06be\\u06caRDcy;\\u442a\\u0100ct\\u0690\\u0694ek;\\u42c7;\\u405eirc;\\u4124r;\\u610clbertSpace;\\u610b\\u01f0\\u06af\\0\\u06b2f;\\u610dizontalLine;\\u6500\\u0100ct\\u06c3\\u06c5\\xf2\\u06a9rok;\\u4126mp\\u0144\\u06d0\\u06d8ownHum\\xf0\\u012fqual;\\u624f\\u0700EJOacdfgmnostu\\u06fa\\u06fe\\u0703\\u0707\\u070e\\u071a\\u071e\\u0721\\u0728\\u0744\\u0778\\u078b\\u078f\\u0795cy;\\u4415lig;\\u4132cy;\\u4401cute\\u803b\\xcd\\u40cd\\u0100iy\\u0713\\u0718rc\\u803b\\xce\\u40ce;\\u4418ot;\\u4130r;\\u6111rave\\u803b\\xcc\\u40cc\\u0180;ap\\u0720\\u072f\\u073f\\u0100cg\\u0734\\u0737r;\\u412ainaryI;\\u6148lie\\xf3\\u03dd\\u01f4\\u0749\\0\\u0762\\u0100;e\\u074d\\u074e\\u622c\\u0100gr\\u0753\\u0758ral;\\u622bsection;\\u62c2isible\\u0100CT\\u076c\\u0772omma;\\u6063imes;\\u6062\\u0180gpt\\u077f\\u0783\\u0788on;\\u412ef;\\uc000\\ud835\\udd40a;\\u4399cr;\\u6110ilde;\\u4128\\u01eb\\u079a\\0\\u079ecy;\\u4406l\\u803b\\xcf\\u40cf\\u0280cfosu\\u07ac\\u07b7\\u07bc\\u07c2\\u07d0\\u0100iy\\u07b1\\u07b5rc;\\u4134;\\u4419r;\\uc000\\ud835\\udd0dpf;\\uc000\\ud835\\udd41\\u01e3\\u07c7\\0\\u07ccr;\\uc000\\ud835\\udca5rcy;\\u4408kcy;\\u4404\\u0380HJacfos\\u07e4\\u07e8\\u07ec\\u07f1\\u07fd\\u0802\\u0808cy;\\u4425cy;\\u440cppa;\\u439a\\u0100ey\\u07f6\\u07fbdil;\\u4136;\\u441ar;\\uc000\\ud835\\udd0epf;\\uc000\\ud835\\udd42cr;\\uc000\\ud835\\udca6\\u0580JTaceflmost\\u0825\\u0829\\u082c\\u0850\\u0863\\u09b3\\u09b8\\u09c7\\u09cd\\u0a37\\u0a47cy;\\u4409\\u803b<\\u403c\\u0280cmnpr\\u0837\\u083c\\u0841\\u0844\\u084dute;\\u4139bda;\\u439bg;\\u67ealacetrf;\\u6112r;\\u619e\\u0180aey\\u0857\\u085c\\u0861ron;\\u413ddil;\\u413b;\\u441b\\u0100fs\\u0868\\u0970t\\u0500ACDFRTUVar\\u087e\\u08a9\\u08b1\\u08e0\\u08e6\\u08fc\\u092f\\u095b\\u0390\\u096a\\u0100nr\\u0883\\u088fgleBracket;\\u67e8row\\u0180;BR\\u0899\\u089a\\u089e\\u6190ar;\\u61e4ightArrow;\\u61c6eiling;\\u6308o\\u01f5\\u08b7\\0\\u08c3bleBracket;\\u67e6n\\u01d4\\u08c8\\0\\u08d2eeVector;\\u6961ector\\u0100;B\\u08db\\u08dc\\u61c3ar;\\u6959loor;\\u630aight\\u0100AV\\u08ef\\u08f5rrow;\\u6194ector;\\u694e\\u0100er\\u0901\\u0917e\\u0180;AV\\u0909\\u090a\\u0910\\u62a3rrow;\\u61a4ector;\\u695aiangle\\u0180;BE\\u0924\\u0925\\u0929\\u62b2ar;\\u69cfqual;\\u62b4p\\u0180DTV\\u0937\\u0942\\u094cownVector;\\u6951eeVector;\\u6960ector\\u0100;B\\u0956\\u0957\\u61bfar;\\u6958ector\\u0100;B\\u0965\\u0966\\u61bcar;\\u6952ight\\xe1\\u039cs\\u0300EFGLST\\u097e\\u098b\\u0995\\u099d\\u09a2\\u09adqualGreater;\\u62daullEqual;\\u6266reater;\\u6276ess;\\u6aa1lantEqual;\\u6a7dilde;\\u6272r;\\uc000\\ud835\\udd0f\\u0100;e\\u09bd\\u09be\\u62d8ftarrow;\\u61daidot;\\u413f\\u0180npw\\u09d4\\u0a16\\u0a1bg\\u0200LRlr\\u09de\\u09f7\\u0a02\\u0a10eft\\u0100AR\\u09e6\\u09ecrrow;\\u67f5ightArrow;\\u67f7ightArrow;\\u67f6eft\\u0100ar\\u03b3\\u0a0aight\\xe1\\u03bfight\\xe1\\u03caf;\\uc000\\ud835\\udd43er\\u0100LR\\u0a22\\u0a2ceftArrow;\\u6199ightArrow;\\u6198\\u0180cht\\u0a3e\\u0a40\\u0a42\\xf2\\u084c;\\u61b0rok;\\u4141;\\u626a\\u0400acefiosu\\u0a5a\\u0a5d\\u0a60\\u0a77\\u0a7c\\u0a85\\u0a8b\\u0a8ep;\\u6905y;\\u441c\\u0100dl\\u0a65\\u0a6fiumSpace;\\u605flintrf;\\u6133r;\\uc000\\ud835\\udd10nusPlus;\\u6213pf;\\uc000\\ud835\\udd44c\\xf2\\u0a76;\\u439c\\u0480Jacefostu\\u0aa3\\u0aa7\\u0aad\\u0ac0\\u0b14\\u0b19\\u0d91\\u0d97\\u0d9ecy;\\u440acute;\\u4143\\u0180aey\\u0ab4\\u0ab9\\u0aberon;\\u4147dil;\\u4145;\\u441d\\u0180gsw\\u0ac7\\u0af0\\u0b0eative\\u0180MTV\\u0ad3\\u0adf\\u0ae8ediumSpace;\\u600bhi\\u0100cn\\u0ae6\\u0ad8\\xeb\\u0ad9eryThi\\xee\\u0ad9ted\\u0100GL\\u0af8\\u0b06reaterGreate\\xf2\\u0673essLes\\xf3\\u0a48Line;\\u400ar;\\uc000\\ud835\\udd11\\u0200Bnpt\\u0b22\\u0b28\\u0b37\\u0b3areak;\\u6060BreakingSpace;\\u40a0f;\\u6115\\u0680;CDEGHLNPRSTV\\u0b55\\u0b56\\u0b6a\\u0b7c\\u0ba1\\u0beb\\u0c04\\u0c5e\\u0c84\\u0ca6\\u0cd8\\u0d61\\u0d85\\u6aec\\u0100ou\\u0b5b\\u0b64ngruent;\\u6262pCap;\\u626doubleVerticalBar;\\u6226\\u0180lqx\\u0b83\\u0b8a\\u0b9bement;\\u6209ual\\u0100;T\\u0b92\\u0b93\\u6260ilde;\\uc000\\u2242\\u0338ists;\\u6204reater\\u0380;EFGLST\\u0bb6\\u0bb7\\u0bbd\\u0bc9\\u0bd3\\u0bd8\\u0be5\\u626fqual;\\u6271ullEqual;\\uc000\\u2267\\u0338reater;\\uc000\\u226b\\u0338ess;\\u6279lantEqual;\\uc000\\u2a7e\\u0338ilde;\\u6275ump\\u0144\\u0bf2\\u0bfdownHump;\\uc000\\u224e\\u0338qual;\\uc000\\u224f\\u0338e\\u0100fs\\u0c0a\\u0c27tTriangle\\u0180;BE\\u0c1a\\u0c1b\\u0c21\\u62eaar;\\uc000\\u29cf\\u0338qual;\\u62ecs\\u0300;EGLST\\u0c35\\u0c36\\u0c3c\\u0c44\\u0c4b\\u0c58\\u626equal;\\u6270reater;\\u6278ess;\\uc000\\u226a\\u0338lantEqual;\\uc000\\u2a7d\\u0338ilde;\\u6274ested\\u0100GL\\u0c68\\u0c79reaterGreater;\\uc000\\u2aa2\\u0338essLess;\\uc000\\u2aa1\\u0338recedes\\u0180;ES\\u0c92\\u0c93\\u0c9b\\u6280qual;\\uc000\\u2aaf\\u0338lantEqual;\\u62e0\\u0100ei\\u0cab\\u0cb9verseElement;\\u620cghtTriangle\\u0180;BE\\u0ccb\\u0ccc\\u0cd2\\u62ebar;\\uc000\\u29d0\\u0338qual;\\u62ed\\u0100qu\\u0cdd\\u0d0cuareSu\\u0100bp\\u0ce8\\u0cf9set\\u0100;E\\u0cf0\\u0cf3\\uc000\\u228f\\u0338qual;\\u62e2erset\\u0100;E\\u0d03\\u0d06\\uc000\\u2290\\u0338qual;\\u62e3\\u0180bcp\\u0d13\\u0d24\\u0d4eset\\u0100;E\\u0d1b\\u0d1e\\uc000\\u2282\\u20d2qual;\\u6288ceeds\\u0200;EST\\u0d32\\u0d33\\u0d3b\\u0d46\\u6281qual;\\uc000\\u2ab0\\u0338lantEqual;\\u62e1ilde;\\uc000\\u227f\\u0338erset\\u0100;E\\u0d58\\u0d5b\\uc000\\u2283\\u20d2qual;\\u6289ilde\\u0200;EFT\\u0d6e\\u0d6f\\u0d75\\u0d7f\\u6241qual;\\u6244ullEqual;\\u6247ilde;\\u6249erticalBar;\\u6224cr;\\uc000\\ud835\\udca9ilde\\u803b\\xd1\\u40d1;\\u439d\\u0700Eacdfgmoprstuv\\u0dbd\\u0dc2\\u0dc9\\u0dd5\\u0ddb\\u0de0\\u0de7\\u0dfc\\u0e02\\u0e20\\u0e22\\u0e32\\u0e3f\\u0e44lig;\\u4152cute\\u803b\\xd3\\u40d3\\u0100iy\\u0dce\\u0dd3rc\\u803b\\xd4\\u40d4;\\u441eblac;\\u4150r;\\uc000\\ud835\\udd12rave\\u803b\\xd2\\u40d2\\u0180aei\\u0dee\\u0df2\\u0df6cr;\\u414cga;\\u43a9cron;\\u439fpf;\\uc000\\ud835\\udd46enCurly\\u0100DQ\\u0e0e\\u0e1aoubleQuote;\\u601cuote;\\u6018;\\u6a54\\u0100cl\\u0e27\\u0e2cr;\\uc000\\ud835\\udcaaash\\u803b\\xd8\\u40d8i\\u016c\\u0e37\\u0e3cde\\u803b\\xd5\\u40d5es;\\u6a37ml\\u803b\\xd6\\u40d6er\\u0100BP\\u0e4b\\u0e60\\u0100ar\\u0e50\\u0e53r;\\u603eac\\u0100ek\\u0e5a\\u0e5c;\\u63deet;\\u63b4arenthesis;\\u63dc\\u0480acfhilors\\u0e7f\\u0e87\\u0e8a\\u0e8f\\u0e92\\u0e94\\u0e9d\\u0eb0\\u0efcrtialD;\\u6202y;\\u441fr;\\uc000\\ud835\\udd13i;\\u43a6;\\u43a0usMinus;\\u40b1\\u0100ip\\u0ea2\\u0eadncareplan\\xe5\\u069df;\\u6119\\u0200;eio\\u0eb9\\u0eba\\u0ee0\\u0ee4\\u6abbcedes\\u0200;EST\\u0ec8\\u0ec9\\u0ecf\\u0eda\\u627aqual;\\u6aaflantEqual;\\u627cilde;\\u627eme;\\u6033\\u0100dp\\u0ee9\\u0eeeuct;\\u620fortion\\u0100;a\\u0225\\u0ef9l;\\u621d\\u0100ci\\u0f01\\u0f06r;\\uc000\\ud835\\udcab;\\u43a8\\u0200Ufos\\u0f11\\u0f16\\u0f1b\\u0f1fOT\\u803b\\\"\\u4022r;\\uc000\\ud835\\udd14pf;\\u611acr;\\uc000\\ud835\\udcac\\u0600BEacefhiorsu\\u0f3e\\u0f43\\u0f47\\u0f60\\u0f73\\u0fa7\\u0faa\\u0fad\\u1096\\u10a9\\u10b4\\u10bearr;\\u6910G\\u803b\\xae\\u40ae\\u0180cnr\\u0f4e\\u0f53\\u0f56ute;\\u4154g;\\u67ebr\\u0100;t\\u0f5c\\u0f5d\\u61a0l;\\u6916\\u0180aey\\u0f67\\u0f6c\\u0f71ron;\\u4158dil;\\u4156;\\u4420\\u0100;v\\u0f78\\u0f79\\u611cerse\\u0100EU\\u0f82\\u0f99\\u0100lq\\u0f87\\u0f8eement;\\u620builibrium;\\u61cbpEquilibrium;\\u696fr\\xbb\\u0f79o;\\u43a1ght\\u0400ACDFTUVa\\u0fc1\\u0feb\\u0ff3\\u1022\\u1028\\u105b\\u1087\\u03d8\\u0100nr\\u0fc6\\u0fd2gleBracket;\\u67e9row\\u0180;BL\\u0fdc\\u0fdd\\u0fe1\\u6192ar;\\u61e5eftArrow;\\u61c4eiling;\\u6309o\\u01f5\\u0ff9\\0\\u1005bleBracket;\\u67e7n\\u01d4\\u100a\\0\\u1014eeVector;\\u695dector\\u0100;B\\u101d\\u101e\\u61c2ar;\\u6955loor;\\u630b\\u0100er\\u102d\\u1043e\\u0180;AV\\u1035\\u1036\\u103c\\u62a2rrow;\\u61a6ector;\\u695biangle\\u0180;BE\\u1050\\u1051\\u1055\\u62b3ar;\\u69d0qual;\\u62b5p\\u0180DTV\\u1063\\u106e\\u1078ownVector;\\u694feeVector;\\u695cector\\u0100;B\\u1082\\u1083\\u61bear;\\u6954ector\\u0100;B\\u1091\\u1092\\u61c0ar;\\u6953\\u0100pu\\u109b\\u109ef;\\u611dndImplies;\\u6970ightarrow;\\u61db\\u0100ch\\u10b9\\u10bcr;\\u611b;\\u61b1leDelayed;\\u69f4\\u0680HOacfhimoqstu\\u10e4\\u10f1\\u10f7\\u10fd\\u1119\\u111e\\u1151\\u1156\\u1161\\u1167\\u11b5\\u11bb\\u11bf\\u0100Cc\\u10e9\\u10eeHcy;\\u4429y;\\u4428FTcy;\\u442ccute;\\u415a\\u0280;aeiy\\u1108\\u1109\\u110e\\u1113\\u1117\\u6abcron;\\u4160dil;\\u415erc;\\u415c;\\u4421r;\\uc000\\ud835\\udd16ort\\u0200DLRU\\u112a\\u1134\\u113e\\u1149ownArrow\\xbb\\u041eeftArrow\\xbb\\u089aightArrow\\xbb\\u0fddpArrow;\\u6191gma;\\u43a3allCircle;\\u6218pf;\\uc000\\ud835\\udd4a\\u0272\\u116d\\0\\0\\u1170t;\\u621aare\\u0200;ISU\\u117b\\u117c\\u1189\\u11af\\u65a1ntersection;\\u6293u\\u0100bp\\u118f\\u119eset\\u0100;E\\u1197\\u1198\\u628fqual;\\u6291erset\\u0100;E\\u11a8\\u11a9\\u6290qual;\\u6292nion;\\u6294cr;\\uc000\\ud835\\udcaear;\\u62c6\\u0200bcmp\\u11c8\\u11db\\u1209\\u120b\\u0100;s\\u11cd\\u11ce\\u62d0et\\u0100;E\\u11cd\\u11d5qual;\\u6286\\u0100ch\\u11e0\\u1205eeds\\u0200;EST\\u11ed\\u11ee\\u11f4\\u11ff\\u627bqual;\\u6ab0lantEqual;\\u627dilde;\\u627fTh\\xe1\\u0f8c;\\u6211\\u0180;es\\u1212\\u1213\\u1223\\u62d1rset\\u0100;E\\u121c\\u121d\\u6283qual;\\u6287et\\xbb\\u1213\\u0580HRSacfhiors\\u123e\\u1244\\u1249\\u1255\\u125e\\u1271\\u1276\\u129f\\u12c2\\u12c8\\u12d1ORN\\u803b\\xde\\u40deADE;\\u6122\\u0100Hc\\u124e\\u1252cy;\\u440by;\\u4426\\u0100bu\\u125a\\u125c;\\u4009;\\u43a4\\u0180aey\\u1265\\u126a\\u126fron;\\u4164dil;\\u4162;\\u4422r;\\uc000\\ud835\\udd17\\u0100ei\\u127b\\u1289\\u01f2\\u1280\\0\\u1287efore;\\u6234a;\\u4398\\u0100cn\\u128e\\u1298kSpace;\\uc000\\u205f\\u200aSpace;\\u6009lde\\u0200;EFT\\u12ab\\u12ac\\u12b2\\u12bc\\u623cqual;\\u6243ullEqual;\\u6245ilde;\\u6248pf;\\uc000\\ud835\\udd4bipleDot;\\u60db\\u0100ct\\u12d6\\u12dbr;\\uc000\\ud835\\udcafrok;\\u4166\\u0ae1\\u12f7\\u130e\\u131a\\u1326\\0\\u132c\\u1331\\0\\0\\0\\0\\0\\u1338\\u133d\\u1377\\u1385\\0\\u13ff\\u1404\\u140a\\u1410\\u0100cr\\u12fb\\u1301ute\\u803b\\xda\\u40dar\\u0100;o\\u1307\\u1308\\u619fcir;\\u6949r\\u01e3\\u1313\\0\\u1316y;\\u440eve;\\u416c\\u0100iy\\u131e\\u1323rc\\u803b\\xdb\\u40db;\\u4423blac;\\u4170r;\\uc000\\ud835\\udd18rave\\u803b\\xd9\\u40d9acr;\\u416a\\u0100di\\u1341\\u1369er\\u0100BP\\u1348\\u135d\\u0100ar\\u134d\\u1350r;\\u405fac\\u0100ek\\u1357\\u1359;\\u63dfet;\\u63b5arenthesis;\\u63ddon\\u0100;P\\u1370\\u1371\\u62c3lus;\\u628e\\u0100gp\\u137b\\u137fon;\\u4172f;\\uc000\\ud835\\udd4c\\u0400ADETadps\\u1395\\u13ae\\u13b8\\u13c4\\u03e8\\u13d2\\u13d7\\u13f3rrow\\u0180;BD\\u1150\\u13a0\\u13a4ar;\\u6912ownArrow;\\u61c5ownArrow;\\u6195quilibrium;\\u696eee\\u0100;A\\u13cb\\u13cc\\u62a5rrow;\\u61a5own\\xe1\\u03f3er\\u0100LR\\u13de\\u13e8eftArrow;\\u6196ightArrow;\\u6197i\\u0100;l\\u13f9\\u13fa\\u43d2on;\\u43a5ing;\\u416ecr;\\uc000\\ud835\\udcb0ilde;\\u4168ml\\u803b\\xdc\\u40dc\\u0480Dbcdefosv\\u1427\\u142c\\u1430\\u1433\\u143e\\u1485\\u148a\\u1490\\u1496ash;\\u62abar;\\u6aeby;\\u4412ash\\u0100;l\\u143b\\u143c\\u62a9;\\u6ae6\\u0100er\\u1443\\u1445;\\u62c1\\u0180bty\\u144c\\u1450\\u147aar;\\u6016\\u0100;i\\u144f\\u1455cal\\u0200BLST\\u1461\\u1465\\u146a\\u1474ar;\\u6223ine;\\u407ceparator;\\u6758ilde;\\u6240ThinSpace;\\u600ar;\\uc000\\ud835\\udd19pf;\\uc000\\ud835\\udd4dcr;\\uc000\\ud835\\udcb1dash;\\u62aa\\u0280cefos\\u14a7\\u14ac\\u14b1\\u14b6\\u14bcirc;\\u4174dge;\\u62c0r;\\uc000\\ud835\\udd1apf;\\uc000\\ud835\\udd4ecr;\\uc000\\ud835\\udcb2\\u0200fios\\u14cb\\u14d0\\u14d2\\u14d8r;\\uc000\\ud835\\udd1b;\\u439epf;\\uc000\\ud835\\udd4fcr;\\uc000\\ud835\\udcb3\\u0480AIUacfosu\\u14f1\\u14f5\\u14f9\\u14fd\\u1504\\u150f\\u1514\\u151a\\u1520cy;\\u442fcy;\\u4407cy;\\u442ecute\\u803b\\xdd\\u40dd\\u0100iy\\u1509\\u150drc;\\u4176;\\u442br;\\uc000\\ud835\\udd1cpf;\\uc000\\ud835\\udd50cr;\\uc000\\ud835\\udcb4ml;\\u4178\\u0400Hacdefos\\u1535\\u1539\\u153f\\u154b\\u154f\\u155d\\u1560\\u1564cy;\\u4416cute;\\u4179\\u0100ay\\u1544\\u1549ron;\\u417d;\\u4417ot;\\u417b\\u01f2\\u1554\\0\\u155boWidt\\xe8\\u0ad9a;\\u4396r;\\u6128pf;\\u6124cr;\\uc000\\ud835\\udcb5\\u0be1\\u1583\\u158a\\u1590\\0\\u15b0\\u15b6\\u15bf\\0\\0\\0\\0\\u15c6\\u15db\\u15eb\\u165f\\u166d\\0\\u1695\\u169b\\u16b2\\u16b9\\0\\u16becute\\u803b\\xe1\\u40e1reve;\\u4103\\u0300;Ediuy\\u159c\\u159d\\u15a1\\u15a3\\u15a8\\u15ad\\u623e;\\uc000\\u223e\\u0333;\\u623frc\\u803b\\xe2\\u40e2te\\u80bb\\xb4\\u0306;\\u4430lig\\u803b\\xe6\\u40e6\\u0100;r\\xb2\\u15ba;\\uc000\\ud835\\udd1erave\\u803b\\xe0\\u40e0\\u0100ep\\u15ca\\u15d6\\u0100fp\\u15cf\\u15d4sym;\\u6135\\xe8\\u15d3ha;\\u43b1\\u0100ap\\u15dfc\\u0100cl\\u15e4\\u15e7r;\\u4101g;\\u6a3f\\u0264\\u15f0\\0\\0\\u160a\\u0280;adsv\\u15fa\\u15fb\\u15ff\\u1601\\u1607\\u6227nd;\\u6a55;\\u6a5clope;\\u6a58;\\u6a5a\\u0380;elmrsz\\u1618\\u1619\\u161b\\u161e\\u163f\\u164f\\u1659\\u6220;\\u69a4e\\xbb\\u1619sd\\u0100;a\\u1625\\u1626\\u6221\\u0461\\u1630\\u1632\\u1634\\u1636\\u1638\\u163a\\u163c\\u163e;\\u69a8;\\u69a9;\\u69aa;\\u69ab;\\u69ac;\\u69ad;\\u69ae;\\u69aft\\u0100;v\\u1645\\u1646\\u621fb\\u0100;d\\u164c\\u164d\\u62be;\\u699d\\u0100pt\\u1654\\u1657h;\\u6222\\xbb\\xb9arr;\\u637c\\u0100gp\\u1663\\u1667on;\\u4105f;\\uc000\\ud835\\udd52\\u0380;Eaeiop\\u12c1\\u167b\\u167d\\u1682\\u1684\\u1687\\u168a;\\u6a70cir;\\u6a6f;\\u624ad;\\u624bs;\\u4027rox\\u0100;e\\u12c1\\u1692\\xf1\\u1683ing\\u803b\\xe5\\u40e5\\u0180cty\\u16a1\\u16a6\\u16a8r;\\uc000\\ud835\\udcb6;\\u402amp\\u0100;e\\u12c1\\u16af\\xf1\\u0288ilde\\u803b\\xe3\\u40e3ml\\u803b\\xe4\\u40e4\\u0100ci\\u16c2\\u16c8onin\\xf4\\u0272nt;\\u6a11\\u0800Nabcdefiklnoprsu\\u16ed\\u16f1\\u1730\\u173c\\u1743\\u1748\\u1778\\u177d\\u17e0\\u17e6\\u1839\\u1850\\u170d\\u193d\\u1948\\u1970ot;\\u6aed\\u0100cr\\u16f6\\u171ek\\u0200ceps\\u1700\\u1705\\u170d\\u1713ong;\\u624cpsilon;\\u43f6rime;\\u6035im\\u0100;e\\u171a\\u171b\\u623dq;\\u62cd\\u0176\\u1722\\u1726ee;\\u62bded\\u0100;g\\u172c\\u172d\\u6305e\\xbb\\u172drk\\u0100;t\\u135c\\u1737brk;\\u63b6\\u0100oy\\u1701\\u1741;\\u4431quo;\\u601e\\u0280cmprt\\u1753\\u175b\\u1761\\u1764\\u1768aus\\u0100;e\\u010a\\u0109ptyv;\\u69b0s\\xe9\\u170cno\\xf5\\u0113\\u0180ahw\\u176f\\u1771\\u1773;\\u43b2;\\u6136een;\\u626cr;\\uc000\\ud835\\udd1fg\\u0380costuvw\\u178d\\u179d\\u17b3\\u17c1\\u17d5\\u17db\\u17de\\u0180aiu\\u1794\\u1796\\u179a\\xf0\\u0760rc;\\u65efp\\xbb\\u1371\\u0180dpt\\u17a4\\u17a8\\u17adot;\\u6a00lus;\\u6a01imes;\\u6a02\\u0271\\u17b9\\0\\0\\u17becup;\\u6a06ar;\\u6605riangle\\u0100du\\u17cd\\u17d2own;\\u65bdp;\\u65b3plus;\\u6a04e\\xe5\\u1444\\xe5\\u14adarow;\\u690d\\u0180ako\\u17ed\\u1826\\u1835\\u0100cn\\u17f2\\u1823k\\u0180lst\\u17fa\\u05ab\\u1802ozenge;\\u69ebriangle\\u0200;dlr\\u1812\\u1813\\u1818\\u181d\\u65b4own;\\u65beeft;\\u65c2ight;\\u65b8k;\\u6423\\u01b1\\u182b\\0\\u1833\\u01b2\\u182f\\0\\u1831;\\u6592;\\u65914;\\u6593ck;\\u6588\\u0100eo\\u183e\\u184d\\u0100;q\\u1843\\u1846\\uc000=\\u20e5uiv;\\uc000\\u2261\\u20e5t;\\u6310\\u0200ptwx\\u1859\\u185e\\u1867\\u186cf;\\uc000\\ud835\\udd53\\u0100;t\\u13cb\\u1863om\\xbb\\u13cctie;\\u62c8\\u0600DHUVbdhmptuv\\u1885\\u1896\\u18aa\\u18bb\\u18d7\\u18db\\u18ec\\u18ff\\u1905\\u190a\\u1910\\u1921\\u0200LRlr\\u188e\\u1890\\u1892\\u1894;\\u6557;\\u6554;\\u6556;\\u6553\\u0280;DUdu\\u18a1\\u18a2\\u18a4\\u18a6\\u18a8\\u6550;\\u6566;\\u6569;\\u6564;\\u6567\\u0200LRlr\\u18b3\\u18b5\\u18b7\\u18b9;\\u655d;\\u655a;\\u655c;\\u6559\\u0380;HLRhlr\\u18ca\\u18cb\\u18cd\\u18cf\\u18d1\\u18d3\\u18d5\\u6551;\\u656c;\\u6563;\\u6560;\\u656b;\\u6562;\\u655fox;\\u69c9\\u0200LRlr\\u18e4\\u18e6\\u18e8\\u18ea;\\u6555;\\u6552;\\u6510;\\u650c\\u0280;DUdu\\u06bd\\u18f7\\u18f9\\u18fb\\u18fd;\\u6565;\\u6568;\\u652c;\\u6534inus;\\u629flus;\\u629eimes;\\u62a0\\u0200LRlr\\u1919\\u191b\\u191d\\u191f;\\u655b;\\u6558;\\u6518;\\u6514\\u0380;HLRhlr\\u1930\\u1931\\u1933\\u1935\\u1937\\u1939\\u193b\\u6502;\\u656a;\\u6561;\\u655e;\\u653c;\\u6524;\\u651c\\u0100ev\\u0123\\u1942bar\\u803b\\xa6\\u40a6\\u0200ceio\\u1951\\u1956\\u195a\\u1960r;\\uc000\\ud835\\udcb7mi;\\u604fm\\u0100;e\\u171a\\u171cl\\u0180;bh\\u1968\\u1969\\u196b\\u405c;\\u69c5sub;\\u67c8\\u016c\\u1974\\u197el\\u0100;e\\u1979\\u197a\\u6022t\\xbb\\u197ap\\u0180;Ee\\u012f\\u1985\\u1987;\\u6aae\\u0100;q\\u06dc\\u06db\\u0ce1\\u19a7\\0\\u19e8\\u1a11\\u1a15\\u1a32\\0\\u1a37\\u1a50\\0\\0\\u1ab4\\0\\0\\u1ac1\\0\\0\\u1b21\\u1b2e\\u1b4d\\u1b52\\0\\u1bfd\\0\\u1c0c\\u0180cpr\\u19ad\\u19b2\\u19ddute;\\u4107\\u0300;abcds\\u19bf\\u19c0\\u19c4\\u19ca\\u19d5\\u19d9\\u6229nd;\\u6a44rcup;\\u6a49\\u0100au\\u19cf\\u19d2p;\\u6a4bp;\\u6a47ot;\\u6a40;\\uc000\\u2229\\ufe00\\u0100eo\\u19e2\\u19e5t;\\u6041\\xee\\u0693\\u0200aeiu\\u19f0\\u19fb\\u1a01\\u1a05\\u01f0\\u19f5\\0\\u19f8s;\\u6a4don;\\u410ddil\\u803b\\xe7\\u40e7rc;\\u4109ps\\u0100;s\\u1a0c\\u1a0d\\u6a4cm;\\u6a50ot;\\u410b\\u0180dmn\\u1a1b\\u1a20\\u1a26il\\u80bb\\xb8\\u01adptyv;\\u69b2t\\u8100\\xa2;e\\u1a2d\\u1a2e\\u40a2r\\xe4\\u01b2r;\\uc000\\ud835\\udd20\\u0180cei\\u1a3d\\u1a40\\u1a4dy;\\u4447ck\\u0100;m\\u1a47\\u1a48\\u6713ark\\xbb\\u1a48;\\u43c7r\\u0380;Ecefms\\u1a5f\\u1a60\\u1a62\\u1a6b\\u1aa4\\u1aaa\\u1aae\\u65cb;\\u69c3\\u0180;el\\u1a69\\u1a6a\\u1a6d\\u42c6q;\\u6257e\\u0261\\u1a74\\0\\0\\u1a88rrow\\u0100lr\\u1a7c\\u1a81eft;\\u61baight;\\u61bb\\u0280RSacd\\u1a92\\u1a94\\u1a96\\u1a9a\\u1a9f\\xbb\\u0f47;\\u64c8st;\\u629birc;\\u629aash;\\u629dnint;\\u6a10id;\\u6aefcir;\\u69c2ubs\\u0100;u\\u1abb\\u1abc\\u6663it\\xbb\\u1abc\\u02ec\\u1ac7\\u1ad4\\u1afa\\0\\u1b0aon\\u0100;e\\u1acd\\u1ace\\u403a\\u0100;q\\xc7\\xc6\\u026d\\u1ad9\\0\\0\\u1ae2a\\u0100;t\\u1ade\\u1adf\\u402c;\\u4040\\u0180;fl\\u1ae8\\u1ae9\\u1aeb\\u6201\\xee\\u1160e\\u0100mx\\u1af1\\u1af6ent\\xbb\\u1ae9e\\xf3\\u024d\\u01e7\\u1afe\\0\\u1b07\\u0100;d\\u12bb\\u1b02ot;\\u6a6dn\\xf4\\u0246\\u0180fry\\u1b10\\u1b14\\u1b17;\\uc000\\ud835\\udd54o\\xe4\\u0254\\u8100\\xa9;s\\u0155\\u1b1dr;\\u6117\\u0100ao\\u1b25\\u1b29rr;\\u61b5ss;\\u6717\\u0100cu\\u1b32\\u1b37r;\\uc000\\ud835\\udcb8\\u0100bp\\u1b3c\\u1b44\\u0100;e\\u1b41\\u1b42\\u6acf;\\u6ad1\\u0100;e\\u1b49\\u1b4a\\u6ad0;\\u6ad2dot;\\u62ef\\u0380delprvw\\u1b60\\u1b6c\\u1b77\\u1b82\\u1bac\\u1bd4\\u1bf9arr\\u0100lr\\u1b68\\u1b6a;\\u6938;\\u6935\\u0270\\u1b72\\0\\0\\u1b75r;\\u62dec;\\u62dfarr\\u0100;p\\u1b7f\\u1b80\\u61b6;\\u693d\\u0300;bcdos\\u1b8f\\u1b90\\u1b96\\u1ba1\\u1ba5\\u1ba8\\u622arcap;\\u6a48\\u0100au\\u1b9b\\u1b9ep;\\u6a46p;\\u6a4aot;\\u628dr;\\u6a45;\\uc000\\u222a\\ufe00\\u0200alrv\\u1bb5\\u1bbf\\u1bde\\u1be3rr\\u0100;m\\u1bbc\\u1bbd\\u61b7;\\u693cy\\u0180evw\\u1bc7\\u1bd4\\u1bd8q\\u0270\\u1bce\\0\\0\\u1bd2re\\xe3\\u1b73u\\xe3\\u1b75ee;\\u62ceedge;\\u62cfen\\u803b\\xa4\\u40a4earrow\\u0100lr\\u1bee\\u1bf3eft\\xbb\\u1b80ight\\xbb\\u1bbde\\xe4\\u1bdd\\u0100ci\\u1c01\\u1c07onin\\xf4\\u01f7nt;\\u6231lcty;\\u632d\\u0980AHabcdefhijlorstuwz\\u1c38\\u1c3b\\u1c3f\\u1c5d\\u1c69\\u1c75\\u1c8a\\u1c9e\\u1cac\\u1cb7\\u1cfb\\u1cff\\u1d0d\\u1d7b\\u1d91\\u1dab\\u1dbb\\u1dc6\\u1dcdr\\xf2\\u0381ar;\\u6965\\u0200glrs\\u1c48\\u1c4d\\u1c52\\u1c54ger;\\u6020eth;\\u6138\\xf2\\u1133h\\u0100;v\\u1c5a\\u1c5b\\u6010\\xbb\\u090a\\u016b\\u1c61\\u1c67arow;\\u690fa\\xe3\\u0315\\u0100ay\\u1c6e\\u1c73ron;\\u410f;\\u4434\\u0180;ao\\u0332\\u1c7c\\u1c84\\u0100gr\\u02bf\\u1c81r;\\u61catseq;\\u6a77\\u0180glm\\u1c91\\u1c94\\u1c98\\u803b\\xb0\\u40b0ta;\\u43b4ptyv;\\u69b1\\u0100ir\\u1ca3\\u1ca8sht;\\u697f;\\uc000\\ud835\\udd21ar\\u0100lr\\u1cb3\\u1cb5\\xbb\\u08dc\\xbb\\u101e\\u0280aegsv\\u1cc2\\u0378\\u1cd6\\u1cdc\\u1ce0m\\u0180;os\\u0326\\u1cca\\u1cd4nd\\u0100;s\\u0326\\u1cd1uit;\\u6666amma;\\u43ddin;\\u62f2\\u0180;io\\u1ce7\\u1ce8\\u1cf8\\u40f7de\\u8100\\xf7;o\\u1ce7\\u1cf0ntimes;\\u62c7n\\xf8\\u1cf7cy;\\u4452c\\u026f\\u1d06\\0\\0\\u1d0arn;\\u631eop;\\u630d\\u0280lptuw\\u1d18\\u1d1d\\u1d22\\u1d49\\u1d55lar;\\u4024f;\\uc000\\ud835\\udd55\\u0280;emps\\u030b\\u1d2d\\u1d37\\u1d3d\\u1d42q\\u0100;d\\u0352\\u1d33ot;\\u6251inus;\\u6238lus;\\u6214quare;\\u62a1blebarwedg\\xe5\\xfan\\u0180adh\\u112e\\u1d5d\\u1d67ownarrow\\xf3\\u1c83arpoon\\u0100lr\\u1d72\\u1d76ef\\xf4\\u1cb4igh\\xf4\\u1cb6\\u0162\\u1d7f\\u1d85karo\\xf7\\u0f42\\u026f\\u1d8a\\0\\0\\u1d8ern;\\u631fop;\\u630c\\u0180cot\\u1d98\\u1da3\\u1da6\\u0100ry\\u1d9d\\u1da1;\\uc000\\ud835\\udcb9;\\u4455l;\\u69f6rok;\\u4111\\u0100dr\\u1db0\\u1db4ot;\\u62f1i\\u0100;f\\u1dba\\u1816\\u65bf\\u0100ah\\u1dc0\\u1dc3r\\xf2\\u0429a\\xf2\\u0fa6angle;\\u69a6\\u0100ci\\u1dd2\\u1dd5y;\\u445fgrarr;\\u67ff\\u0900Dacdefglmnopqrstux\\u1e01\\u1e09\\u1e19\\u1e38\\u0578\\u1e3c\\u1e49\\u1e61\\u1e7e\\u1ea5\\u1eaf\\u1ebd\\u1ee1\\u1f2a\\u1f37\\u1f44\\u1f4e\\u1f5a\\u0100Do\\u1e06\\u1d34o\\xf4\\u1c89\\u0100cs\\u1e0e\\u1e14ute\\u803b\\xe9\\u40e9ter;\\u6a6e\\u0200aioy\\u1e22\\u1e27\\u1e31\\u1e36ron;\\u411br\\u0100;c\\u1e2d\\u1e2e\\u6256\\u803b\\xea\\u40ealon;\\u6255;\\u444dot;\\u4117\\u0100Dr\\u1e41\\u1e45ot;\\u6252;\\uc000\\ud835\\udd22\\u0180;rs\\u1e50\\u1e51\\u1e57\\u6a9aave\\u803b\\xe8\\u40e8\\u0100;d\\u1e5c\\u1e5d\\u6a96ot;\\u6a98\\u0200;ils\\u1e6a\\u1e6b\\u1e72\\u1e74\\u6a99nters;\\u63e7;\\u6113\\u0100;d\\u1e79\\u1e7a\\u6a95ot;\\u6a97\\u0180aps\\u1e85\\u1e89\\u1e97cr;\\u4113ty\\u0180;sv\\u1e92\\u1e93\\u1e95\\u6205et\\xbb\\u1e93p\\u01001;\\u1e9d\\u1ea4\\u0133\\u1ea1\\u1ea3;\\u6004;\\u6005\\u6003\\u0100gs\\u1eaa\\u1eac;\\u414bp;\\u6002\\u0100gp\\u1eb4\\u1eb8on;\\u4119f;\\uc000\\ud835\\udd56\\u0180als\\u1ec4\\u1ece\\u1ed2r\\u0100;s\\u1eca\\u1ecb\\u62d5l;\\u69e3us;\\u6a71i\\u0180;lv\\u1eda\\u1edb\\u1edf\\u43b5on\\xbb\\u1edb;\\u43f5\\u0200csuv\\u1eea\\u1ef3\\u1f0b\\u1f23\\u0100io\\u1eef\\u1e31rc\\xbb\\u1e2e\\u0269\\u1ef9\\0\\0\\u1efb\\xed\\u0548ant\\u0100gl\\u1f02\\u1f06tr\\xbb\\u1e5dess\\xbb\\u1e7a\\u0180aei\\u1f12\\u1f16\\u1f1als;\\u403dst;\\u625fv\\u0100;D\\u0235\\u1f20D;\\u6a78parsl;\\u69e5\\u0100Da\\u1f2f\\u1f33ot;\\u6253rr;\\u6971\\u0180cdi\\u1f3e\\u1f41\\u1ef8r;\\u612fo\\xf4\\u0352\\u0100ah\\u1f49\\u1f4b;\\u43b7\\u803b\\xf0\\u40f0\\u0100mr\\u1f53\\u1f57l\\u803b\\xeb\\u40ebo;\\u60ac\\u0180cip\\u1f61\\u1f64\\u1f67l;\\u4021s\\xf4\\u056e\\u0100eo\\u1f6c\\u1f74ctatio\\xee\\u0559nential\\xe5\\u0579\\u09e1\\u1f92\\0\\u1f9e\\0\\u1fa1\\u1fa7\\0\\0\\u1fc6\\u1fcc\\0\\u1fd3\\0\\u1fe6\\u1fea\\u2000\\0\\u2008\\u205allingdotse\\xf1\\u1e44y;\\u4444male;\\u6640\\u0180ilr\\u1fad\\u1fb3\\u1fc1lig;\\u8000\\ufb03\\u0269\\u1fb9\\0\\0\\u1fbdg;\\u8000\\ufb00ig;\\u8000\\ufb04;\\uc000\\ud835\\udd23lig;\\u8000\\ufb01lig;\\uc000fj\\u0180alt\\u1fd9\\u1fdc\\u1fe1t;\\u666dig;\\u8000\\ufb02ns;\\u65b1of;\\u4192\\u01f0\\u1fee\\0\\u1ff3f;\\uc000\\ud835\\udd57\\u0100ak\\u05bf\\u1ff7\\u0100;v\\u1ffc\\u1ffd\\u62d4;\\u6ad9artint;\\u6a0d\\u0100ao\\u200c\\u2055\\u0100cs\\u2011\\u2052\\u03b1\\u201a\\u2030\\u2038\\u2045\\u2048\\0\\u2050\\u03b2\\u2022\\u2025\\u2027\\u202a\\u202c\\0\\u202e\\u803b\\xbd\\u40bd;\\u6153\\u803b\\xbc\\u40bc;\\u6155;\\u6159;\\u615b\\u01b3\\u2034\\0\\u2036;\\u6154;\\u6156\\u02b4\\u203e\\u2041\\0\\0\\u2043\\u803b\\xbe\\u40be;\\u6157;\\u615c5;\\u6158\\u01b6\\u204c\\0\\u204e;\\u615a;\\u615d8;\\u615el;\\u6044wn;\\u6322cr;\\uc000\\ud835\\udcbb\\u0880Eabcdefgijlnorstv\\u2082\\u2089\\u209f\\u20a5\\u20b0\\u20b4\\u20f0\\u20f5\\u20fa\\u20ff\\u2103\\u2112\\u2138\\u0317\\u213e\\u2152\\u219e\\u0100;l\\u064d\\u2087;\\u6a8c\\u0180cmp\\u2090\\u2095\\u209dute;\\u41f5ma\\u0100;d\\u209c\\u1cda\\u43b3;\\u6a86reve;\\u411f\\u0100iy\\u20aa\\u20aerc;\\u411d;\\u4433ot;\\u4121\\u0200;lqs\\u063e\\u0642\\u20bd\\u20c9\\u0180;qs\\u063e\\u064c\\u20c4lan\\xf4\\u0665\\u0200;cdl\\u0665\\u20d2\\u20d5\\u20e5c;\\u6aa9ot\\u0100;o\\u20dc\\u20dd\\u6a80\\u0100;l\\u20e2\\u20e3\\u6a82;\\u6a84\\u0100;e\\u20ea\\u20ed\\uc000\\u22db\\ufe00s;\\u6a94r;\\uc000\\ud835\\udd24\\u0100;g\\u0673\\u061bmel;\\u6137cy;\\u4453\\u0200;Eaj\\u065a\\u210c\\u210e\\u2110;\\u6a92;\\u6aa5;\\u6aa4\\u0200Eaes\\u211b\\u211d\\u2129\\u2134;\\u6269p\\u0100;p\\u2123\\u2124\\u6a8arox\\xbb\\u2124\\u0100;q\\u212e\\u212f\\u6a88\\u0100;q\\u212e\\u211bim;\\u62e7pf;\\uc000\\ud835\\udd58\\u0100ci\\u2143\\u2146r;\\u610am\\u0180;el\\u066b\\u214e\\u2150;\\u6a8e;\\u6a90\\u8300>;cdlqr\\u05ee\\u2160\\u216a\\u216e\\u2173\\u2179\\u0100ci\\u2165\\u2167;\\u6aa7r;\\u6a7aot;\\u62d7Par;\\u6995uest;\\u6a7c\\u0280adels\\u2184\\u216a\\u2190\\u0656\\u219b\\u01f0\\u2189\\0\\u218epro\\xf8\\u209er;\\u6978q\\u0100lq\\u063f\\u2196les\\xf3\\u2088i\\xed\\u066b\\u0100en\\u21a3\\u21adrtneqq;\\uc000\\u2269\\ufe00\\xc5\\u21aa\\u0500Aabcefkosy\\u21c4\\u21c7\\u21f1\\u21f5\\u21fa\\u2218\\u221d\\u222f\\u2268\\u227dr\\xf2\\u03a0\\u0200ilmr\\u21d0\\u21d4\\u21d7\\u21dbrs\\xf0\\u1484f\\xbb\\u2024il\\xf4\\u06a9\\u0100dr\\u21e0\\u21e4cy;\\u444a\\u0180;cw\\u08f4\\u21eb\\u21efir;\\u6948;\\u61adar;\\u610firc;\\u4125\\u0180alr\\u2201\\u220e\\u2213rts\\u0100;u\\u2209\\u220a\\u6665it\\xbb\\u220alip;\\u6026con;\\u62b9r;\\uc000\\ud835\\udd25s\\u0100ew\\u2223\\u2229arow;\\u6925arow;\\u6926\\u0280amopr\\u223a\\u223e\\u2243\\u225e\\u2263rr;\\u61fftht;\\u623bk\\u0100lr\\u2249\\u2253eftarrow;\\u61a9ightarrow;\\u61aaf;\\uc000\\ud835\\udd59bar;\\u6015\\u0180clt\\u226f\\u2274\\u2278r;\\uc000\\ud835\\udcbdas\\xe8\\u21f4rok;\\u4127\\u0100bp\\u2282\\u2287ull;\\u6043hen\\xbb\\u1c5b\\u0ae1\\u22a3\\0\\u22aa\\0\\u22b8\\u22c5\\u22ce\\0\\u22d5\\u22f3\\0\\0\\u22f8\\u2322\\u2367\\u2362\\u237f\\0\\u2386\\u23aa\\u23b4cute\\u803b\\xed\\u40ed\\u0180;iy\\u0771\\u22b0\\u22b5rc\\u803b\\xee\\u40ee;\\u4438\\u0100cx\\u22bc\\u22bfy;\\u4435cl\\u803b\\xa1\\u40a1\\u0100fr\\u039f\\u22c9;\\uc000\\ud835\\udd26rave\\u803b\\xec\\u40ec\\u0200;ino\\u073e\\u22dd\\u22e9\\u22ee\\u0100in\\u22e2\\u22e6nt;\\u6a0ct;\\u622dfin;\\u69dcta;\\u6129lig;\\u4133\\u0180aop\\u22fe\\u231a\\u231d\\u0180cgt\\u2305\\u2308\\u2317r;\\u412b\\u0180elp\\u071f\\u230f\\u2313in\\xe5\\u078ear\\xf4\\u0720h;\\u4131f;\\u62b7ed;\\u41b5\\u0280;cfot\\u04f4\\u232c\\u2331\\u233d\\u2341are;\\u6105in\\u0100;t\\u2338\\u2339\\u621eie;\\u69dddo\\xf4\\u2319\\u0280;celp\\u0757\\u234c\\u2350\\u235b\\u2361al;\\u62ba\\u0100gr\\u2355\\u2359er\\xf3\\u1563\\xe3\\u234darhk;\\u6a17rod;\\u6a3c\\u0200cgpt\\u236f\\u2372\\u2376\\u237by;\\u4451on;\\u412ff;\\uc000\\ud835\\udd5aa;\\u43b9uest\\u803b\\xbf\\u40bf\\u0100ci\\u238a\\u238fr;\\uc000\\ud835\\udcben\\u0280;Edsv\\u04f4\\u239b\\u239d\\u23a1\\u04f3;\\u62f9ot;\\u62f5\\u0100;v\\u23a6\\u23a7\\u62f4;\\u62f3\\u0100;i\\u0777\\u23aelde;\\u4129\\u01eb\\u23b8\\0\\u23bccy;\\u4456l\\u803b\\xef\\u40ef\\u0300cfmosu\\u23cc\\u23d7\\u23dc\\u23e1\\u23e7\\u23f5\\u0100iy\\u23d1\\u23d5rc;\\u4135;\\u4439r;\\uc000\\ud835\\udd27ath;\\u4237pf;\\uc000\\ud835\\udd5b\\u01e3\\u23ec\\0\\u23f1r;\\uc000\\ud835\\udcbfrcy;\\u4458kcy;\\u4454\\u0400acfghjos\\u240b\\u2416\\u2422\\u2427\\u242d\\u2431\\u2435\\u243bppa\\u0100;v\\u2413\\u2414\\u43ba;\\u43f0\\u0100ey\\u241b\\u2420dil;\\u4137;\\u443ar;\\uc000\\ud835\\udd28reen;\\u4138cy;\\u4445cy;\\u445cpf;\\uc000\\ud835\\udd5ccr;\\uc000\\ud835\\udcc0\\u0b80ABEHabcdefghjlmnoprstuv\\u2470\\u2481\\u2486\\u248d\\u2491\\u250e\\u253d\\u255a\\u2580\\u264e\\u265e\\u2665\\u2679\\u267d\\u269a\\u26b2\\u26d8\\u275d\\u2768\\u278b\\u27c0\\u2801\\u2812\\u0180art\\u2477\\u247a\\u247cr\\xf2\\u09c6\\xf2\\u0395ail;\\u691barr;\\u690e\\u0100;g\\u0994\\u248b;\\u6a8bar;\\u6962\\u0963\\u24a5\\0\\u24aa\\0\\u24b1\\0\\0\\0\\0\\0\\u24b5\\u24ba\\0\\u24c6\\u24c8\\u24cd\\0\\u24f9ute;\\u413amptyv;\\u69b4ra\\xee\\u084cbda;\\u43bbg\\u0180;dl\\u088e\\u24c1\\u24c3;\\u6991\\xe5\\u088e;\\u6a85uo\\u803b\\xab\\u40abr\\u0400;bfhlpst\\u0899\\u24de\\u24e6\\u24e9\\u24eb\\u24ee\\u24f1\\u24f5\\u0100;f\\u089d\\u24e3s;\\u691fs;\\u691d\\xeb\\u2252p;\\u61abl;\\u6939im;\\u6973l;\\u61a2\\u0180;ae\\u24ff\\u2500\\u2504\\u6aabil;\\u6919\\u0100;s\\u2509\\u250a\\u6aad;\\uc000\\u2aad\\ufe00\\u0180abr\\u2515\\u2519\\u251drr;\\u690crk;\\u6772\\u0100ak\\u2522\\u252cc\\u0100ek\\u2528\\u252a;\\u407b;\\u405b\\u0100es\\u2531\\u2533;\\u698bl\\u0100du\\u2539\\u253b;\\u698f;\\u698d\\u0200aeuy\\u2546\\u254b\\u2556\\u2558ron;\\u413e\\u0100di\\u2550\\u2554il;\\u413c\\xec\\u08b0\\xe2\\u2529;\\u443b\\u0200cqrs\\u2563\\u2566\\u256d\\u257da;\\u6936uo\\u0100;r\\u0e19\\u1746\\u0100du\\u2572\\u2577har;\\u6967shar;\\u694bh;\\u61b2\\u0280;fgqs\\u258b\\u258c\\u0989\\u25f3\\u25ff\\u6264t\\u0280ahlrt\\u2598\\u25a4\\u25b7\\u25c2\\u25e8rrow\\u0100;t\\u0899\\u25a1a\\xe9\\u24f6arpoon\\u0100du\\u25af\\u25b4own\\xbb\\u045ap\\xbb\\u0966eftarrows;\\u61c7ight\\u0180ahs\\u25cd\\u25d6\\u25derrow\\u0100;s\\u08f4\\u08a7arpoon\\xf3\\u0f98quigarro\\xf7\\u21f0hreetimes;\\u62cb\\u0180;qs\\u258b\\u0993\\u25falan\\xf4\\u09ac\\u0280;cdgs\\u09ac\\u260a\\u260d\\u261d\\u2628c;\\u6aa8ot\\u0100;o\\u2614\\u2615\\u6a7f\\u0100;r\\u261a\\u261b\\u6a81;\\u6a83\\u0100;e\\u2622\\u2625\\uc000\\u22da\\ufe00s;\\u6a93\\u0280adegs\\u2633\\u2639\\u263d\\u2649\\u264bppro\\xf8\\u24c6ot;\\u62d6q\\u0100gq\\u2643\\u2645\\xf4\\u0989gt\\xf2\\u248c\\xf4\\u099bi\\xed\\u09b2\\u0180ilr\\u2655\\u08e1\\u265asht;\\u697c;\\uc000\\ud835\\udd29\\u0100;E\\u099c\\u2663;\\u6a91\\u0161\\u2669\\u2676r\\u0100du\\u25b2\\u266e\\u0100;l\\u0965\\u2673;\\u696alk;\\u6584cy;\\u4459\\u0280;acht\\u0a48\\u2688\\u268b\\u2691\\u2696r\\xf2\\u25c1orne\\xf2\\u1d08ard;\\u696bri;\\u65fa\\u0100io\\u269f\\u26a4dot;\\u4140ust\\u0100;a\\u26ac\\u26ad\\u63b0che\\xbb\\u26ad\\u0200Eaes\\u26bb\\u26bd\\u26c9\\u26d4;\\u6268p\\u0100;p\\u26c3\\u26c4\\u6a89rox\\xbb\\u26c4\\u0100;q\\u26ce\\u26cf\\u6a87\\u0100;q\\u26ce\\u26bbim;\\u62e6\\u0400abnoptwz\\u26e9\\u26f4\\u26f7\\u271a\\u272f\\u2741\\u2747\\u2750\\u0100nr\\u26ee\\u26f1g;\\u67ecr;\\u61fdr\\xeb\\u08c1g\\u0180lmr\\u26ff\\u270d\\u2714eft\\u0100ar\\u09e6\\u2707ight\\xe1\\u09f2apsto;\\u67fcight\\xe1\\u09fdparrow\\u0100lr\\u2725\\u2729ef\\xf4\\u24edight;\\u61ac\\u0180afl\\u2736\\u2739\\u273dr;\\u6985;\\uc000\\ud835\\udd5dus;\\u6a2dimes;\\u6a34\\u0161\\u274b\\u274fst;\\u6217\\xe1\\u134e\\u0180;ef\\u2757\\u2758\\u1800\\u65cange\\xbb\\u2758ar\\u0100;l\\u2764\\u2765\\u4028t;\\u6993\\u0280achmt\\u2773\\u2776\\u277c\\u2785\\u2787r\\xf2\\u08a8orne\\xf2\\u1d8car\\u0100;d\\u0f98\\u2783;\\u696d;\\u600eri;\\u62bf\\u0300achiqt\\u2798\\u279d\\u0a40\\u27a2\\u27ae\\u27bbquo;\\u6039r;\\uc000\\ud835\\udcc1m\\u0180;eg\\u09b2\\u27aa\\u27ac;\\u6a8d;\\u6a8f\\u0100bu\\u252a\\u27b3o\\u0100;r\\u0e1f\\u27b9;\\u601arok;\\u4142\\u8400<;cdhilqr\\u082b\\u27d2\\u2639\\u27dc\\u27e0\\u27e5\\u27ea\\u27f0\\u0100ci\\u27d7\\u27d9;\\u6aa6r;\\u6a79re\\xe5\\u25f2mes;\\u62c9arr;\\u6976uest;\\u6a7b\\u0100Pi\\u27f5\\u27f9ar;\\u6996\\u0180;ef\\u2800\\u092d\\u181b\\u65c3r\\u0100du\\u2807\\u280dshar;\\u694ahar;\\u6966\\u0100en\\u2817\\u2821rtneqq;\\uc000\\u2268\\ufe00\\xc5\\u281e\\u0700Dacdefhilnopsu\\u2840\\u2845\\u2882\\u288e\\u2893\\u28a0\\u28a5\\u28a8\\u28da\\u28e2\\u28e4\\u0a83\\u28f3\\u2902Dot;\\u623a\\u0200clpr\\u284e\\u2852\\u2863\\u287dr\\u803b\\xaf\\u40af\\u0100et\\u2857\\u2859;\\u6642\\u0100;e\\u285e\\u285f\\u6720se\\xbb\\u285f\\u0100;s\\u103b\\u2868to\\u0200;dlu\\u103b\\u2873\\u2877\\u287bow\\xee\\u048cef\\xf4\\u090f\\xf0\\u13d1ker;\\u65ae\\u0100oy\\u2887\\u288cmma;\\u6a29;\\u443cash;\\u6014asuredangle\\xbb\\u1626r;\\uc000\\ud835\\udd2ao;\\u6127\\u0180cdn\\u28af\\u28b4\\u28c9ro\\u803b\\xb5\\u40b5\\u0200;acd\\u1464\\u28bd\\u28c0\\u28c4s\\xf4\\u16a7ir;\\u6af0ot\\u80bb\\xb7\\u01b5us\\u0180;bd\\u28d2\\u1903\\u28d3\\u6212\\u0100;u\\u1d3c\\u28d8;\\u6a2a\\u0163\\u28de\\u28e1p;\\u6adb\\xf2\\u2212\\xf0\\u0a81\\u0100dp\\u28e9\\u28eeels;\\u62a7f;\\uc000\\ud835\\udd5e\\u0100ct\\u28f8\\u28fdr;\\uc000\\ud835\\udcc2pos\\xbb\\u159d\\u0180;lm\\u2909\\u290a\\u290d\\u43bctimap;\\u62b8\\u0c00GLRVabcdefghijlmoprstuvw\\u2942\\u2953\\u297e\\u2989\\u2998\\u29da\\u29e9\\u2a15\\u2a1a\\u2a58\\u2a5d\\u2a83\\u2a95\\u2aa4\\u2aa8\\u2b04\\u2b07\\u2b44\\u2b7f\\u2bae\\u2c34\\u2c67\\u2c7c\\u2ce9\\u0100gt\\u2947\\u294b;\\uc000\\u22d9\\u0338\\u0100;v\\u2950\\u0bcf\\uc000\\u226b\\u20d2\\u0180elt\\u295a\\u2972\\u2976ft\\u0100ar\\u2961\\u2967rrow;\\u61cdightarrow;\\u61ce;\\uc000\\u22d8\\u0338\\u0100;v\\u297b\\u0c47\\uc000\\u226a\\u20d2ightarrow;\\u61cf\\u0100Dd\\u298e\\u2993ash;\\u62afash;\\u62ae\\u0280bcnpt\\u29a3\\u29a7\\u29ac\\u29b1\\u29ccla\\xbb\\u02deute;\\u4144g;\\uc000\\u2220\\u20d2\\u0280;Eiop\\u0d84\\u29bc\\u29c0\\u29c5\\u29c8;\\uc000\\u2a70\\u0338d;\\uc000\\u224b\\u0338s;\\u4149ro\\xf8\\u0d84ur\\u0100;a\\u29d3\\u29d4\\u666el\\u0100;s\\u29d3\\u0b38\\u01f3\\u29df\\0\\u29e3p\\u80bb\\xa0\\u0b37mp\\u0100;e\\u0bf9\\u0c00\\u0280aeouy\\u29f4\\u29fe\\u2a03\\u2a10\\u2a13\\u01f0\\u29f9\\0\\u29fb;\\u6a43on;\\u4148dil;\\u4146ng\\u0100;d\\u0d7e\\u2a0aot;\\uc000\\u2a6d\\u0338p;\\u6a42;\\u443dash;\\u6013\\u0380;Aadqsx\\u0b92\\u2a29\\u2a2d\\u2a3b\\u2a41\\u2a45\\u2a50rr;\\u61d7r\\u0100hr\\u2a33\\u2a36k;\\u6924\\u0100;o\\u13f2\\u13f0ot;\\uc000\\u2250\\u0338ui\\xf6\\u0b63\\u0100ei\\u2a4a\\u2a4ear;\\u6928\\xed\\u0b98ist\\u0100;s\\u0ba0\\u0b9fr;\\uc000\\ud835\\udd2b\\u0200Eest\\u0bc5\\u2a66\\u2a79\\u2a7c\\u0180;qs\\u0bbc\\u2a6d\\u0be1\\u0180;qs\\u0bbc\\u0bc5\\u2a74lan\\xf4\\u0be2i\\xed\\u0bea\\u0100;r\\u0bb6\\u2a81\\xbb\\u0bb7\\u0180Aap\\u2a8a\\u2a8d\\u2a91r\\xf2\\u2971rr;\\u61aear;\\u6af2\\u0180;sv\\u0f8d\\u2a9c\\u0f8c\\u0100;d\\u2aa1\\u2aa2\\u62fc;\\u62facy;\\u445a\\u0380AEadest\\u2ab7\\u2aba\\u2abe\\u2ac2\\u2ac5\\u2af6\\u2af9r\\xf2\\u2966;\\uc000\\u2266\\u0338rr;\\u619ar;\\u6025\\u0200;fqs\\u0c3b\\u2ace\\u2ae3\\u2aeft\\u0100ar\\u2ad4\\u2ad9rro\\xf7\\u2ac1ightarro\\xf7\\u2a90\\u0180;qs\\u0c3b\\u2aba\\u2aealan\\xf4\\u0c55\\u0100;s\\u0c55\\u2af4\\xbb\\u0c36i\\xed\\u0c5d\\u0100;r\\u0c35\\u2afei\\u0100;e\\u0c1a\\u0c25i\\xe4\\u0d90\\u0100pt\\u2b0c\\u2b11f;\\uc000\\ud835\\udd5f\\u8180\\xac;in\\u2b19\\u2b1a\\u2b36\\u40acn\\u0200;Edv\\u0b89\\u2b24\\u2b28\\u2b2e;\\uc000\\u22f9\\u0338ot;\\uc000\\u22f5\\u0338\\u01e1\\u0b89\\u2b33\\u2b35;\\u62f7;\\u62f6i\\u0100;v\\u0cb8\\u2b3c\\u01e1\\u0cb8\\u2b41\\u2b43;\\u62fe;\\u62fd\\u0180aor\\u2b4b\\u2b63\\u2b69r\\u0200;ast\\u0b7b\\u2b55\\u2b5a\\u2b5flle\\xec\\u0b7bl;\\uc000\\u2afd\\u20e5;\\uc000\\u2202\\u0338lint;\\u6a14\\u0180;ce\\u0c92\\u2b70\\u2b73u\\xe5\\u0ca5\\u0100;c\\u0c98\\u2b78\\u0100;e\\u0c92\\u2b7d\\xf1\\u0c98\\u0200Aait\\u2b88\\u2b8b\\u2b9d\\u2ba7r\\xf2\\u2988rr\\u0180;cw\\u2b94\\u2b95\\u2b99\\u619b;\\uc000\\u2933\\u0338;\\uc000\\u219d\\u0338ghtarrow\\xbb\\u2b95ri\\u0100;e\\u0ccb\\u0cd6\\u0380chimpqu\\u2bbd\\u2bcd\\u2bd9\\u2b04\\u0b78\\u2be4\\u2bef\\u0200;cer\\u0d32\\u2bc6\\u0d37\\u2bc9u\\xe5\\u0d45;\\uc000\\ud835\\udcc3ort\\u026d\\u2b05\\0\\0\\u2bd6ar\\xe1\\u2b56m\\u0100;e\\u0d6e\\u2bdf\\u0100;q\\u0d74\\u0d73su\\u0100bp\\u2beb\\u2bed\\xe5\\u0cf8\\xe5\\u0d0b\\u0180bcp\\u2bf6\\u2c11\\u2c19\\u0200;Ees\\u2bff\\u2c00\\u0d22\\u2c04\\u6284;\\uc000\\u2ac5\\u0338et\\u0100;e\\u0d1b\\u2c0bq\\u0100;q\\u0d23\\u2c00c\\u0100;e\\u0d32\\u2c17\\xf1\\u0d38\\u0200;Ees\\u2c22\\u2c23\\u0d5f\\u2c27\\u6285;\\uc000\\u2ac6\\u0338et\\u0100;e\\u0d58\\u2c2eq\\u0100;q\\u0d60\\u2c23\\u0200gilr\\u2c3d\\u2c3f\\u2c45\\u2c47\\xec\\u0bd7lde\\u803b\\xf1\\u40f1\\xe7\\u0c43iangle\\u0100lr\\u2c52\\u2c5ceft\\u0100;e\\u0c1a\\u2c5a\\xf1\\u0c26ight\\u0100;e\\u0ccb\\u2c65\\xf1\\u0cd7\\u0100;m\\u2c6c\\u2c6d\\u43bd\\u0180;es\\u2c74\\u2c75\\u2c79\\u4023ro;\\u6116p;\\u6007\\u0480DHadgilrs\\u2c8f\\u2c94\\u2c99\\u2c9e\\u2ca3\\u2cb0\\u2cb6\\u2cd3\\u2ce3ash;\\u62adarr;\\u6904p;\\uc000\\u224d\\u20d2ash;\\u62ac\\u0100et\\u2ca8\\u2cac;\\uc000\\u2265\\u20d2;\\uc000>\\u20d2nfin;\\u69de\\u0180Aet\\u2cbd\\u2cc1\\u2cc5rr;\\u6902;\\uc000\\u2264\\u20d2\\u0100;r\\u2cca\\u2ccd\\uc000<\\u20d2ie;\\uc000\\u22b4\\u20d2\\u0100At\\u2cd8\\u2cdcrr;\\u6903rie;\\uc000\\u22b5\\u20d2im;\\uc000\\u223c\\u20d2\\u0180Aan\\u2cf0\\u2cf4\\u2d02rr;\\u61d6r\\u0100hr\\u2cfa\\u2cfdk;\\u6923\\u0100;o\\u13e7\\u13e5ear;\\u6927\\u1253\\u1a95\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\u2d2d\\0\\u2d38\\u2d48\\u2d60\\u2d65\\u2d72\\u2d84\\u1b07\\0\\0\\u2d8d\\u2dab\\0\\u2dc8\\u2dce\\0\\u2ddc\\u2e19\\u2e2b\\u2e3e\\u2e43\\u0100cs\\u2d31\\u1a97ute\\u803b\\xf3\\u40f3\\u0100iy\\u2d3c\\u2d45r\\u0100;c\\u1a9e\\u2d42\\u803b\\xf4\\u40f4;\\u443e\\u0280abios\\u1aa0\\u2d52\\u2d57\\u01c8\\u2d5alac;\\u4151v;\\u6a38old;\\u69bclig;\\u4153\\u0100cr\\u2d69\\u2d6dir;\\u69bf;\\uc000\\ud835\\udd2c\\u036f\\u2d79\\0\\0\\u2d7c\\0\\u2d82n;\\u42dbave\\u803b\\xf2\\u40f2;\\u69c1\\u0100bm\\u2d88\\u0df4ar;\\u69b5\\u0200acit\\u2d95\\u2d98\\u2da5\\u2da8r\\xf2\\u1a80\\u0100ir\\u2d9d\\u2da0r;\\u69beoss;\\u69bbn\\xe5\\u0e52;\\u69c0\\u0180aei\\u2db1\\u2db5\\u2db9cr;\\u414dga;\\u43c9\\u0180cdn\\u2dc0\\u2dc5\\u01cdron;\\u43bf;\\u69b6pf;\\uc000\\ud835\\udd60\\u0180ael\\u2dd4\\u2dd7\\u01d2r;\\u69b7rp;\\u69b9\\u0380;adiosv\\u2dea\\u2deb\\u2dee\\u2e08\\u2e0d\\u2e10\\u2e16\\u6228r\\xf2\\u1a86\\u0200;efm\\u2df7\\u2df8\\u2e02\\u2e05\\u6a5dr\\u0100;o\\u2dfe\\u2dff\\u6134f\\xbb\\u2dff\\u803b\\xaa\\u40aa\\u803b\\xba\\u40bagof;\\u62b6r;\\u6a56lope;\\u6a57;\\u6a5b\\u0180clo\\u2e1f\\u2e21\\u2e27\\xf2\\u2e01ash\\u803b\\xf8\\u40f8l;\\u6298i\\u016c\\u2e2f\\u2e34de\\u803b\\xf5\\u40f5es\\u0100;a\\u01db\\u2e3as;\\u6a36ml\\u803b\\xf6\\u40f6bar;\\u633d\\u0ae1\\u2e5e\\0\\u2e7d\\0\\u2e80\\u2e9d\\0\\u2ea2\\u2eb9\\0\\0\\u2ecb\\u0e9c\\0\\u2f13\\0\\0\\u2f2b\\u2fbc\\0\\u2fc8r\\u0200;ast\\u0403\\u2e67\\u2e72\\u0e85\\u8100\\xb6;l\\u2e6d\\u2e6e\\u40b6le\\xec\\u0403\\u0269\\u2e78\\0\\0\\u2e7bm;\\u6af3;\\u6afdy;\\u443fr\\u0280cimpt\\u2e8b\\u2e8f\\u2e93\\u1865\\u2e97nt;\\u4025od;\\u402eil;\\u6030enk;\\u6031r;\\uc000\\ud835\\udd2d\\u0180imo\\u2ea8\\u2eb0\\u2eb4\\u0100;v\\u2ead\\u2eae\\u43c6;\\u43d5ma\\xf4\\u0a76ne;\\u660e\\u0180;tv\\u2ebf\\u2ec0\\u2ec8\\u43c0chfork\\xbb\\u1ffd;\\u43d6\\u0100au\\u2ecf\\u2edfn\\u0100ck\\u2ed5\\u2eddk\\u0100;h\\u21f4\\u2edb;\\u610e\\xf6\\u21f4s\\u0480;abcdemst\\u2ef3\\u2ef4\\u1908\\u2ef9\\u2efd\\u2f04\\u2f06\\u2f0a\\u2f0e\\u402bcir;\\u6a23ir;\\u6a22\\u0100ou\\u1d40\\u2f02;\\u6a25;\\u6a72n\\u80bb\\xb1\\u0e9dim;\\u6a26wo;\\u6a27\\u0180ipu\\u2f19\\u2f20\\u2f25ntint;\\u6a15f;\\uc000\\ud835\\udd61nd\\u803b\\xa3\\u40a3\\u0500;Eaceinosu\\u0ec8\\u2f3f\\u2f41\\u2f44\\u2f47\\u2f81\\u2f89\\u2f92\\u2f7e\\u2fb6;\\u6ab3p;\\u6ab7u\\xe5\\u0ed9\\u0100;c\\u0ece\\u2f4c\\u0300;acens\\u0ec8\\u2f59\\u2f5f\\u2f66\\u2f68\\u2f7eppro\\xf8\\u2f43urlye\\xf1\\u0ed9\\xf1\\u0ece\\u0180aes\\u2f6f\\u2f76\\u2f7approx;\\u6ab9qq;\\u6ab5im;\\u62e8i\\xed\\u0edfme\\u0100;s\\u2f88\\u0eae\\u6032\\u0180Eas\\u2f78\\u2f90\\u2f7a\\xf0\\u2f75\\u0180dfp\\u0eec\\u2f99\\u2faf\\u0180als\\u2fa0\\u2fa5\\u2faalar;\\u632eine;\\u6312urf;\\u6313\\u0100;t\\u0efb\\u2fb4\\xef\\u0efbrel;\\u62b0\\u0100ci\\u2fc0\\u2fc5r;\\uc000\\ud835\\udcc5;\\u43c8ncsp;\\u6008\\u0300fiopsu\\u2fda\\u22e2\\u2fdf\\u2fe5\\u2feb\\u2ff1r;\\uc000\\ud835\\udd2epf;\\uc000\\ud835\\udd62rime;\\u6057cr;\\uc000\\ud835\\udcc6\\u0180aeo\\u2ff8\\u3009\\u3013t\\u0100ei\\u2ffe\\u3005rnion\\xf3\\u06b0nt;\\u6a16st\\u0100;e\\u3010\\u3011\\u403f\\xf1\\u1f19\\xf4\\u0f14\\u0a80ABHabcdefhilmnoprstux\\u3040\\u3051\\u3055\\u3059\\u30e0\\u310e\\u312b\\u3147\\u3162\\u3172\\u318e\\u3206\\u3215\\u3224\\u3229\\u3258\\u326e\\u3272\\u3290\\u32b0\\u32b7\\u0180art\\u3047\\u304a\\u304cr\\xf2\\u10b3\\xf2\\u03ddail;\\u691car\\xf2\\u1c65ar;\\u6964\\u0380cdenqrt\\u3068\\u3075\\u3078\\u307f\\u308f\\u3094\\u30cc\\u0100eu\\u306d\\u3071;\\uc000\\u223d\\u0331te;\\u4155i\\xe3\\u116emptyv;\\u69b3g\\u0200;del\\u0fd1\\u3089\\u308b\\u308d;\\u6992;\\u69a5\\xe5\\u0fd1uo\\u803b\\xbb\\u40bbr\\u0580;abcfhlpstw\\u0fdc\\u30ac\\u30af\\u30b7\\u30b9\\u30bc\\u30be\\u30c0\\u30c3\\u30c7\\u30cap;\\u6975\\u0100;f\\u0fe0\\u30b4s;\\u6920;\\u6933s;\\u691e\\xeb\\u225d\\xf0\\u272el;\\u6945im;\\u6974l;\\u61a3;\\u619d\\u0100ai\\u30d1\\u30d5il;\\u691ao\\u0100;n\\u30db\\u30dc\\u6236al\\xf3\\u0f1e\\u0180abr\\u30e7\\u30ea\\u30eer\\xf2\\u17e5rk;\\u6773\\u0100ak\\u30f3\\u30fdc\\u0100ek\\u30f9\\u30fb;\\u407d;\\u405d\\u0100es\\u3102\\u3104;\\u698cl\\u0100du\\u310a\\u310c;\\u698e;\\u6990\\u0200aeuy\\u3117\\u311c\\u3127\\u3129ron;\\u4159\\u0100di\\u3121\\u3125il;\\u4157\\xec\\u0ff2\\xe2\\u30fa;\\u4440\\u0200clqs\\u3134\\u3137\\u313d\\u3144a;\\u6937dhar;\\u6969uo\\u0100;r\\u020e\\u020dh;\\u61b3\\u0180acg\\u314e\\u315f\\u0f44l\\u0200;ips\\u0f78\\u3158\\u315b\\u109cn\\xe5\\u10bbar\\xf4\\u0fa9t;\\u65ad\\u0180ilr\\u3169\\u1023\\u316esht;\\u697d;\\uc000\\ud835\\udd2f\\u0100ao\\u3177\\u3186r\\u0100du\\u317d\\u317f\\xbb\\u047b\\u0100;l\\u1091\\u3184;\\u696c\\u0100;v\\u318b\\u318c\\u43c1;\\u43f1\\u0180gns\\u3195\\u31f9\\u31fcht\\u0300ahlrst\\u31a4\\u31b0\\u31c2\\u31d8\\u31e4\\u31eerrow\\u0100;t\\u0fdc\\u31ada\\xe9\\u30c8arpoon\\u0100du\\u31bb\\u31bfow\\xee\\u317ep\\xbb\\u1092eft\\u0100ah\\u31ca\\u31d0rrow\\xf3\\u0feaarpoon\\xf3\\u0551ightarrows;\\u61c9quigarro\\xf7\\u30cbhreetimes;\\u62ccg;\\u42daingdotse\\xf1\\u1f32\\u0180ahm\\u320d\\u3210\\u3213r\\xf2\\u0feaa\\xf2\\u0551;\\u600foust\\u0100;a\\u321e\\u321f\\u63b1che\\xbb\\u321fmid;\\u6aee\\u0200abpt\\u3232\\u323d\\u3240\\u3252\\u0100nr\\u3237\\u323ag;\\u67edr;\\u61fer\\xeb\\u1003\\u0180afl\\u3247\\u324a\\u324er;\\u6986;\\uc000\\ud835\\udd63us;\\u6a2eimes;\\u6a35\\u0100ap\\u325d\\u3267r\\u0100;g\\u3263\\u3264\\u4029t;\\u6994olint;\\u6a12ar\\xf2\\u31e3\\u0200achq\\u327b\\u3280\\u10bc\\u3285quo;\\u603ar;\\uc000\\ud835\\udcc7\\u0100bu\\u30fb\\u328ao\\u0100;r\\u0214\\u0213\\u0180hir\\u3297\\u329b\\u32a0re\\xe5\\u31f8mes;\\u62cai\\u0200;efl\\u32aa\\u1059\\u1821\\u32ab\\u65b9tri;\\u69celuhar;\\u6968;\\u611e\\u0d61\\u32d5\\u32db\\u32df\\u332c\\u3338\\u3371\\0\\u337a\\u33a4\\0\\0\\u33ec\\u33f0\\0\\u3428\\u3448\\u345a\\u34ad\\u34b1\\u34ca\\u34f1\\0\\u3616\\0\\0\\u3633cute;\\u415bqu\\xef\\u27ba\\u0500;Eaceinpsy\\u11ed\\u32f3\\u32f5\\u32ff\\u3302\\u330b\\u330f\\u331f\\u3326\\u3329;\\u6ab4\\u01f0\\u32fa\\0\\u32fc;\\u6ab8on;\\u4161u\\xe5\\u11fe\\u0100;d\\u11f3\\u3307il;\\u415frc;\\u415d\\u0180Eas\\u3316\\u3318\\u331b;\\u6ab6p;\\u6abaim;\\u62e9olint;\\u6a13i\\xed\\u1204;\\u4441ot\\u0180;be\\u3334\\u1d47\\u3335\\u62c5;\\u6a66\\u0380Aacmstx\\u3346\\u334a\\u3357\\u335b\\u335e\\u3363\\u336drr;\\u61d8r\\u0100hr\\u3350\\u3352\\xeb\\u2228\\u0100;o\\u0a36\\u0a34t\\u803b\\xa7\\u40a7i;\\u403bwar;\\u6929m\\u0100in\\u3369\\xf0nu\\xf3\\xf1t;\\u6736r\\u0100;o\\u3376\\u2055\\uc000\\ud835\\udd30\\u0200acoy\\u3382\\u3386\\u3391\\u33a0rp;\\u666f\\u0100hy\\u338b\\u338fcy;\\u4449;\\u4448rt\\u026d\\u3399\\0\\0\\u339ci\\xe4\\u1464ara\\xec\\u2e6f\\u803b\\xad\\u40ad\\u0100gm\\u33a8\\u33b4ma\\u0180;fv\\u33b1\\u33b2\\u33b2\\u43c3;\\u43c2\\u0400;deglnpr\\u12ab\\u33c5\\u33c9\\u33ce\\u33d6\\u33de\\u33e1\\u33e6ot;\\u6a6a\\u0100;q\\u12b1\\u12b0\\u0100;E\\u33d3\\u33d4\\u6a9e;\\u6aa0\\u0100;E\\u33db\\u33dc\\u6a9d;\\u6a9fe;\\u6246lus;\\u6a24arr;\\u6972ar\\xf2\\u113d\\u0200aeit\\u33f8\\u3408\\u340f\\u3417\\u0100ls\\u33fd\\u3404lsetm\\xe9\\u336ahp;\\u6a33parsl;\\u69e4\\u0100dl\\u1463\\u3414e;\\u6323\\u0100;e\\u341c\\u341d\\u6aaa\\u0100;s\\u3422\\u3423\\u6aac;\\uc000\\u2aac\\ufe00\\u0180flp\\u342e\\u3433\\u3442tcy;\\u444c\\u0100;b\\u3438\\u3439\\u402f\\u0100;a\\u343e\\u343f\\u69c4r;\\u633ff;\\uc000\\ud835\\udd64a\\u0100dr\\u344d\\u0402es\\u0100;u\\u3454\\u3455\\u6660it\\xbb\\u3455\\u0180csu\\u3460\\u3479\\u349f\\u0100au\\u3465\\u346fp\\u0100;s\\u1188\\u346b;\\uc000\\u2293\\ufe00p\\u0100;s\\u11b4\\u3475;\\uc000\\u2294\\ufe00u\\u0100bp\\u347f\\u348f\\u0180;es\\u1197\\u119c\\u3486et\\u0100;e\\u1197\\u348d\\xf1\\u119d\\u0180;es\\u11a8\\u11ad\\u3496et\\u0100;e\\u11a8\\u349d\\xf1\\u11ae\\u0180;af\\u117b\\u34a6\\u05b0r\\u0165\\u34ab\\u05b1\\xbb\\u117car\\xf2\\u1148\\u0200cemt\\u34b9\\u34be\\u34c2\\u34c5r;\\uc000\\ud835\\udcc8tm\\xee\\xf1i\\xec\\u3415ar\\xe6\\u11be\\u0100ar\\u34ce\\u34d5r\\u0100;f\\u34d4\\u17bf\\u6606\\u0100an\\u34da\\u34edight\\u0100ep\\u34e3\\u34eapsilo\\xee\\u1ee0h\\xe9\\u2eafs\\xbb\\u2852\\u0280bcmnp\\u34fb\\u355e\\u1209\\u358b\\u358e\\u0480;Edemnprs\\u350e\\u350f\\u3511\\u3515\\u351e\\u3523\\u352c\\u3531\\u3536\\u6282;\\u6ac5ot;\\u6abd\\u0100;d\\u11da\\u351aot;\\u6ac3ult;\\u6ac1\\u0100Ee\\u3528\\u352a;\\u6acb;\\u628alus;\\u6abfarr;\\u6979\\u0180eiu\\u353d\\u3552\\u3555t\\u0180;en\\u350e\\u3545\\u354bq\\u0100;q\\u11da\\u350feq\\u0100;q\\u352b\\u3528m;\\u6ac7\\u0100bp\\u355a\\u355c;\\u6ad5;\\u6ad3c\\u0300;acens\\u11ed\\u356c\\u3572\\u3579\\u357b\\u3326ppro\\xf8\\u32faurlye\\xf1\\u11fe\\xf1\\u11f3\\u0180aes\\u3582\\u3588\\u331bppro\\xf8\\u331aq\\xf1\\u3317g;\\u666a\\u0680123;Edehlmnps\\u35a9\\u35ac\\u35af\\u121c\\u35b2\\u35b4\\u35c0\\u35c9\\u35d5\\u35da\\u35df\\u35e8\\u35ed\\u803b\\xb9\\u40b9\\u803b\\xb2\\u40b2\\u803b\\xb3\\u40b3;\\u6ac6\\u0100os\\u35b9\\u35bct;\\u6abeub;\\u6ad8\\u0100;d\\u1222\\u35c5ot;\\u6ac4s\\u0100ou\\u35cf\\u35d2l;\\u67c9b;\\u6ad7arr;\\u697bult;\\u6ac2\\u0100Ee\\u35e4\\u35e6;\\u6acc;\\u628blus;\\u6ac0\\u0180eiu\\u35f4\\u3609\\u360ct\\u0180;en\\u121c\\u35fc\\u3602q\\u0100;q\\u1222\\u35b2eq\\u0100;q\\u35e7\\u35e4m;\\u6ac8\\u0100bp\\u3611\\u3613;\\u6ad4;\\u6ad6\\u0180Aan\\u361c\\u3620\\u362drr;\\u61d9r\\u0100hr\\u3626\\u3628\\xeb\\u222e\\u0100;o\\u0a2b\\u0a29war;\\u692alig\\u803b\\xdf\\u40df\\u0be1\\u3651\\u365d\\u3660\\u12ce\\u3673\\u3679\\0\\u367e\\u36c2\\0\\0\\0\\0\\0\\u36db\\u3703\\0\\u3709\\u376c\\0\\0\\0\\u3787\\u0272\\u3656\\0\\0\\u365bget;\\u6316;\\u43c4r\\xeb\\u0e5f\\u0180aey\\u3666\\u366b\\u3670ron;\\u4165dil;\\u4163;\\u4442lrec;\\u6315r;\\uc000\\ud835\\udd31\\u0200eiko\\u3686\\u369d\\u36b5\\u36bc\\u01f2\\u368b\\0\\u3691e\\u01004f\\u1284\\u1281a\\u0180;sv\\u3698\\u3699\\u369b\\u43b8ym;\\u43d1\\u0100cn\\u36a2\\u36b2k\\u0100as\\u36a8\\u36aeppro\\xf8\\u12c1im\\xbb\\u12acs\\xf0\\u129e\\u0100as\\u36ba\\u36ae\\xf0\\u12c1rn\\u803b\\xfe\\u40fe\\u01ec\\u031f\\u36c6\\u22e7es\\u8180\\xd7;bd\\u36cf\\u36d0\\u36d8\\u40d7\\u0100;a\\u190f\\u36d5r;\\u6a31;\\u6a30\\u0180eps\\u36e1\\u36e3\\u3700\\xe1\\u2a4d\\u0200;bcf\\u0486\\u36ec\\u36f0\\u36f4ot;\\u6336ir;\\u6af1\\u0100;o\\u36f9\\u36fc\\uc000\\ud835\\udd65rk;\\u6ada\\xe1\\u3362rime;\\u6034\\u0180aip\\u370f\\u3712\\u3764d\\xe5\\u1248\\u0380adempst\\u3721\\u374d\\u3740\\u3751\\u3757\\u375c\\u375fngle\\u0280;dlqr\\u3730\\u3731\\u3736\\u3740\\u3742\\u65b5own\\xbb\\u1dbbeft\\u0100;e\\u2800\\u373e\\xf1\\u092e;\\u625cight\\u0100;e\\u32aa\\u374b\\xf1\\u105aot;\\u65ecinus;\\u6a3alus;\\u6a39b;\\u69cdime;\\u6a3bezium;\\u63e2\\u0180cht\\u3772\\u377d\\u3781\\u0100ry\\u3777\\u377b;\\uc000\\ud835\\udcc9;\\u4446cy;\\u445brok;\\u4167\\u0100io\\u378b\\u378ex\\xf4\\u1777head\\u0100lr\\u3797\\u37a0eftarro\\xf7\\u084fightarrow\\xbb\\u0f5d\\u0900AHabcdfghlmoprstuw\\u37d0\\u37d3\\u37d7\\u37e4\\u37f0\\u37fc\\u380e\\u381c\\u3823\\u3834\\u3851\\u385d\\u386b\\u38a9\\u38cc\\u38d2\\u38ea\\u38f6r\\xf2\\u03edar;\\u6963\\u0100cr\\u37dc\\u37e2ute\\u803b\\xfa\\u40fa\\xf2\\u1150r\\u01e3\\u37ea\\0\\u37edy;\\u445eve;\\u416d\\u0100iy\\u37f5\\u37farc\\u803b\\xfb\\u40fb;\\u4443\\u0180abh\\u3803\\u3806\\u380br\\xf2\\u13adlac;\\u4171a\\xf2\\u13c3\\u0100ir\\u3813\\u3818sht;\\u697e;\\uc000\\ud835\\udd32rave\\u803b\\xf9\\u40f9\\u0161\\u3827\\u3831r\\u0100lr\\u382c\\u382e\\xbb\\u0957\\xbb\\u1083lk;\\u6580\\u0100ct\\u3839\\u384d\\u026f\\u383f\\0\\0\\u384arn\\u0100;e\\u3845\\u3846\\u631cr\\xbb\\u3846op;\\u630fri;\\u65f8\\u0100al\\u3856\\u385acr;\\u416b\\u80bb\\xa8\\u0349\\u0100gp\\u3862\\u3866on;\\u4173f;\\uc000\\ud835\\udd66\\u0300adhlsu\\u114b\\u3878\\u387d\\u1372\\u3891\\u38a0own\\xe1\\u13b3arpoon\\u0100lr\\u3888\\u388cef\\xf4\\u382digh\\xf4\\u382fi\\u0180;hl\\u3899\\u389a\\u389c\\u43c5\\xbb\\u13faon\\xbb\\u389aparrows;\\u61c8\\u0180cit\\u38b0\\u38c4\\u38c8\\u026f\\u38b6\\0\\0\\u38c1rn\\u0100;e\\u38bc\\u38bd\\u631dr\\xbb\\u38bdop;\\u630eng;\\u416fri;\\u65f9cr;\\uc000\\ud835\\udcca\\u0180dir\\u38d9\\u38dd\\u38e2ot;\\u62f0lde;\\u4169i\\u0100;f\\u3730\\u38e8\\xbb\\u1813\\u0100am\\u38ef\\u38f2r\\xf2\\u38a8l\\u803b\\xfc\\u40fcangle;\\u69a7\\u0780ABDacdeflnoprsz\\u391c\\u391f\\u3929\\u392d\\u39b5\\u39b8\\u39bd\\u39df\\u39e4\\u39e8\\u39f3\\u39f9\\u39fd\\u3a01\\u3a20r\\xf2\\u03f7ar\\u0100;v\\u3926\\u3927\\u6ae8;\\u6ae9as\\xe8\\u03e1\\u0100nr\\u3932\\u3937grt;\\u699c\\u0380eknprst\\u34e3\\u3946\\u394b\\u3952\\u395d\\u3964\\u3996app\\xe1\\u2415othin\\xe7\\u1e96\\u0180hir\\u34eb\\u2ec8\\u3959op\\xf4\\u2fb5\\u0100;h\\u13b7\\u3962\\xef\\u318d\\u0100iu\\u3969\\u396dgm\\xe1\\u33b3\\u0100bp\\u3972\\u3984setneq\\u0100;q\\u397d\\u3980\\uc000\\u228a\\ufe00;\\uc000\\u2acb\\ufe00setneq\\u0100;q\\u398f\\u3992\\uc000\\u228b\\ufe00;\\uc000\\u2acc\\ufe00\\u0100hr\\u399b\\u399fet\\xe1\\u369ciangle\\u0100lr\\u39aa\\u39afeft\\xbb\\u0925ight\\xbb\\u1051y;\\u4432ash\\xbb\\u1036\\u0180elr\\u39c4\\u39d2\\u39d7\\u0180;be\\u2dea\\u39cb\\u39cfar;\\u62bbq;\\u625alip;\\u62ee\\u0100bt\\u39dc\\u1468a\\xf2\\u1469r;\\uc000\\ud835\\udd33tr\\xe9\\u39aesu\\u0100bp\\u39ef\\u39f1\\xbb\\u0d1c\\xbb\\u0d59pf;\\uc000\\ud835\\udd67ro\\xf0\\u0efbtr\\xe9\\u39b4\\u0100cu\\u3a06\\u3a0br;\\uc000\\ud835\\udccb\\u0100bp\\u3a10\\u3a18n\\u0100Ee\\u3980\\u3a16\\xbb\\u397en\\u0100Ee\\u3992\\u3a1e\\xbb\\u3990igzag;\\u699a\\u0380cefoprs\\u3a36\\u3a3b\\u3a56\\u3a5b\\u3a54\\u3a61\\u3a6airc;\\u4175\\u0100di\\u3a40\\u3a51\\u0100bg\\u3a45\\u3a49ar;\\u6a5fe\\u0100;q\\u15fa\\u3a4f;\\u6259erp;\\u6118r;\\uc000\\ud835\\udd34pf;\\uc000\\ud835\\udd68\\u0100;e\\u1479\\u3a66at\\xe8\\u1479cr;\\uc000\\ud835\\udccc\\u0ae3\\u178e\\u3a87\\0\\u3a8b\\0\\u3a90\\u3a9b\\0\\0\\u3a9d\\u3aa8\\u3aab\\u3aaf\\0\\0\\u3ac3\\u3ace\\0\\u3ad8\\u17dc\\u17dftr\\xe9\\u17d1r;\\uc000\\ud835\\udd35\\u0100Aa\\u3a94\\u3a97r\\xf2\\u03c3r\\xf2\\u09f6;\\u43be\\u0100Aa\\u3aa1\\u3aa4r\\xf2\\u03b8r\\xf2\\u09eba\\xf0\\u2713is;\\u62fb\\u0180dpt\\u17a4\\u3ab5\\u3abe\\u0100fl\\u3aba\\u17a9;\\uc000\\ud835\\udd69im\\xe5\\u17b2\\u0100Aa\\u3ac7\\u3acar\\xf2\\u03cer\\xf2\\u0a01\\u0100cq\\u3ad2\\u17b8r;\\uc000\\ud835\\udccd\\u0100pt\\u17d6\\u3adcr\\xe9\\u17d4\\u0400acefiosu\\u3af0\\u3afd\\u3b08\\u3b0c\\u3b11\\u3b15\\u3b1b\\u3b21c\\u0100uy\\u3af6\\u3afbte\\u803b\\xfd\\u40fd;\\u444f\\u0100iy\\u3b02\\u3b06rc;\\u4177;\\u444bn\\u803b\\xa5\\u40a5r;\\uc000\\ud835\\udd36cy;\\u4457pf;\\uc000\\ud835\\udd6acr;\\uc000\\ud835\\udcce\\u0100cm\\u3b26\\u3b29y;\\u444el\\u803b\\xff\\u40ff\\u0500acdefhiosw\\u3b42\\u3b48\\u3b54\\u3b58\\u3b64\\u3b69\\u3b6d\\u3b74\\u3b7a\\u3b80cute;\\u417a\\u0100ay\\u3b4d\\u3b52ron;\\u417e;\\u4437ot;\\u417c\\u0100et\\u3b5d\\u3b61tr\\xe6\\u155fa;\\u43b6r;\\uc000\\ud835\\udd37cy;\\u4436grarr;\\u61ddpf;\\uc000\\ud835\\udd6bcr;\\uc000\\ud835\\udccf\\u0100jn\\u3b85\\u3b87;\\u600dj;\\u600c\".split(\"\").map(c => c.charCodeAt(0)));\n", "// Generated using scripts/write-decode-map.ts\nexport default new Uint16Array(\n// prettier-ignore\n\"\\u0200aglq\\t\\x15\\x18\\x1b\\u026d\\x0f\\0\\0\\x12p;\\u4026os;\\u4027t;\\u403et;\\u403cuot;\\u4022\".split(\"\").map(c => c.charCodeAt(0)));\n", "// Adapted from https://github.com/mathiasbynens/he/blob/36afe179392226cf1b6ccdb16ebbb7a5a844d93a/src/he.js#L106-L134\nvar _a;\nconst decodeMap = new Map([[0, 65533],\n// C1 Unicode control character reference replacements\n[128, 8364], [130, 8218], [131, 402], [132, 8222], [133, 8230], [134, 8224], [135, 8225], [136, 710], [137, 8240], [138, 352], [139, 8249], [140, 338], [142, 381], [145, 8216], [146, 8217], [147, 8220], [148, 8221], [149, 8226], [150, 8211], [151, 8212], [152, 732], [153, 8482], [154, 353], [155, 8250], [156, 339], [158, 382], [159, 376]]);\n/**\n * Polyfill for `String.fromCodePoint`. It is used to create a string from a Unicode code point.\n */\nexport const fromCodePoint =\n// eslint-disable-next-line @typescript-eslint/no-unnecessary-condition, node/no-unsupported-features/es-builtins\n(_a = String.fromCodePoint) !== null && _a !== void 0 ? _a : function (codePoint) {\n  let output = \"\";\n  if (codePoint > 0xffff) {\n    codePoint -= 0x10000;\n    output += String.fromCharCode(codePoint >>> 10 & 0x3ff | 0xd800);\n    codePoint = 0xdc00 | codePoint & 0x3ff;\n  }\n  output += String.fromCharCode(codePoint);\n  return output;\n};\n/**\n * Replace the given code point with a replacement character if it is a\n * surrogate or is outside the valid range. Otherwise return the code\n * point unchanged.\n */\nexport function replaceCodePoint(codePoint) {\n  var _a;\n  if (codePoint >= 0xd800 && codePoint <= 0xdfff || codePoint > 0x10ffff) {\n    return 0xfffd;\n  }\n  return (_a = decodeMap.get(codePoint)) !== null && _a !== void 0 ? _a : codePoint;\n}\n/**\n * Replace the code point if relevant, then convert it to a string.\n *\n * @deprecated Use `fromCodePoint(replaceCodePoint(codePoint))` instead.\n * @param codePoint The code point to decode.\n * @returns The decoded code point.\n */\nexport default function decodeCodePoint(codePoint) {\n  return fromCodePoint(replaceCodePoint(codePoint));\n}\n", "import htmlDecodeTree from \"./generated/decode-data-html.js\";\nimport xmlDecodeTree from \"./generated/decode-data-xml.js\";\nimport decodeCodePoint, { replaceCodePoint, fromCodePoint } from \"./decode_codepoint.js\";\n// Re-export for use by eg. htmlparser2\nexport { htmlDecodeTree, xmlDecodeTree, decodeCodePoint };\nexport { replaceCodePoint, fromCodePoint } from \"./decode_codepoint.js\";\nvar CharCodes;\n(function (CharCodes) {\n  CharCodes[CharCodes[\"NUM\"] = 35] = \"NUM\";\n  CharCodes[CharCodes[\"SEMI\"] = 59] = \"SEMI\";\n  CharCodes[CharCodes[\"EQUALS\"] = 61] = \"EQUALS\";\n  CharCodes[CharCodes[\"ZERO\"] = 48] = \"ZERO\";\n  CharCodes[CharCodes[\"NINE\"] = 57] = \"NINE\";\n  CharCodes[CharCodes[\"LOWER_A\"] = 97] = \"LOWER_A\";\n  CharCodes[CharCodes[\"LOWER_F\"] = 102] = \"LOWER_F\";\n  CharCodes[CharCodes[\"LOWER_X\"] = 120] = \"LOWER_X\";\n  CharCodes[CharCodes[\"LOWER_Z\"] = 122] = \"LOWER_Z\";\n  CharCodes[CharCodes[\"UPPER_A\"] = 65] = \"UPPER_A\";\n  CharCodes[CharCodes[\"UPPER_F\"] = 70] = \"UPPER_F\";\n  CharCodes[CharCodes[\"UPPER_Z\"] = 90] = \"UPPER_Z\";\n})(CharCodes || (CharCodes = {}));\n/** Bit that needs to be set to convert an upper case ASCII character to lower case */\nconst TO_LOWER_BIT = 0b100000;\nexport var BinTrieFlags;\n(function (BinTrieFlags) {\n  BinTrieFlags[BinTrieFlags[\"VALUE_LENGTH\"] = 49152] = \"VALUE_LENGTH\";\n  BinTrieFlags[BinTrieFlags[\"BRANCH_LENGTH\"] = 16256] = \"BRANCH_LENGTH\";\n  BinTrieFlags[BinTrieFlags[\"JUMP_TABLE\"] = 127] = \"JUMP_TABLE\";\n})(BinTrieFlags || (BinTrieFlags = {}));\nfunction isNumber(code) {\n  return code >= CharCodes.ZERO && code <= CharCodes.NINE;\n}\nfunction isHexadecimalCharacter(code) {\n  return code >= CharCodes.UPPER_A && code <= CharCodes.UPPER_F || code >= CharCodes.LOWER_A && code <= CharCodes.LOWER_F;\n}\nfunction isAsciiAlphaNumeric(code) {\n  return code >= CharCodes.UPPER_A && code <= CharCodes.UPPER_Z || code >= CharCodes.LOWER_A && code <= CharCodes.LOWER_Z || isNumber(code);\n}\n/**\n * Checks if the given character is a valid end character for an entity in an attribute.\n *\n * Attribute values that aren't terminated properly aren't parsed, and shouldn't lead to a parser error.\n * See the example in https://html.spec.whatwg.org/multipage/parsing.html#named-character-reference-state\n */\nfunction isEntityInAttributeInvalidEnd(code) {\n  return code === CharCodes.EQUALS || isAsciiAlphaNumeric(code);\n}\nvar EntityDecoderState;\n(function (EntityDecoderState) {\n  EntityDecoderState[EntityDecoderState[\"EntityStart\"] = 0] = \"EntityStart\";\n  EntityDecoderState[EntityDecoderState[\"NumericStart\"] = 1] = \"NumericStart\";\n  EntityDecoderState[EntityDecoderState[\"NumericDecimal\"] = 2] = \"NumericDecimal\";\n  EntityDecoderState[EntityDecoderState[\"NumericHex\"] = 3] = \"NumericHex\";\n  EntityDecoderState[EntityDecoderState[\"NamedEntity\"] = 4] = \"NamedEntity\";\n})(EntityDecoderState || (EntityDecoderState = {}));\nexport var DecodingMode;\n(function (DecodingMode) {\n  /** Entities in text nodes that can end with any character. */\n  DecodingMode[DecodingMode[\"Legacy\"] = 0] = \"Legacy\";\n  /** Only allow entities terminated with a semicolon. */\n  DecodingMode[DecodingMode[\"Strict\"] = 1] = \"Strict\";\n  /** Entities in attributes have limitations on ending characters. */\n  DecodingMode[DecodingMode[\"Attribute\"] = 2] = \"Attribute\";\n})(DecodingMode || (DecodingMode = {}));\n/**\n * Token decoder with support of writing partial entities.\n */\nexport class EntityDecoder {\n  constructor(/** The tree used to decode entities. */\n  decodeTree,\n  /**\n   * The function that is called when a codepoint is decoded.\n   *\n   * For multi-byte named entities, this will be called multiple times,\n   * with the second codepoint, and the same `consumed` value.\n   *\n   * @param codepoint The decoded codepoint.\n   * @param consumed The number of bytes consumed by the decoder.\n   */\n  emitCodePoint, /** An object that is used to produce errors. */\n  errors) {\n    this.decodeTree = decodeTree;\n    this.emitCodePoint = emitCodePoint;\n    this.errors = errors;\n    /** The current state of the decoder. */\n    this.state = EntityDecoderState.EntityStart;\n    /** Characters that were consumed while parsing an entity. */\n    this.consumed = 1;\n    /**\n     * The result of the entity.\n     *\n     * Either the result index of a numeric entity, or the codepoint of a\n     * numeric entity.\n     */\n    this.result = 0;\n    /** The current index in the decode tree. */\n    this.treeIndex = 0;\n    /** The number of characters that were consumed in excess. */\n    this.excess = 1;\n    /** The mode in which the decoder is operating. */\n    this.decodeMode = DecodingMode.Strict;\n  }\n  /** Resets the instance to make it reusable. */\n  startEntity(decodeMode) {\n    this.decodeMode = decodeMode;\n    this.state = EntityDecoderState.EntityStart;\n    this.result = 0;\n    this.treeIndex = 0;\n    this.excess = 1;\n    this.consumed = 1;\n  }\n  /**\n   * Write an entity to the decoder. This can be called multiple times with partial entities.\n   * If the entity is incomplete, the decoder will return -1.\n   *\n   * Mirrors the implementation of `getDecoder`, but with the ability to stop decoding if the\n   * entity is incomplete, and resume when the next string is written.\n   *\n   * @param string The string containing the entity (or a continuation of the entity).\n   * @param offset The offset at which the entity begins. Should be 0 if this is not the first call.\n   * @returns The number of characters that were consumed, or -1 if the entity is incomplete.\n   */\n  write(str, offset) {\n    switch (this.state) {\n      case EntityDecoderState.EntityStart:\n        {\n          if (str.charCodeAt(offset) === CharCodes.NUM) {\n            this.state = EntityDecoderState.NumericStart;\n            this.consumed += 1;\n            return this.stateNumericStart(str, offset + 1);\n          }\n          this.state = EntityDecoderState.NamedEntity;\n          return this.stateNamedEntity(str, offset);\n        }\n      case EntityDecoderState.NumericStart:\n        {\n          return this.stateNumericStart(str, offset);\n        }\n      case EntityDecoderState.NumericDecimal:\n        {\n          return this.stateNumericDecimal(str, offset);\n        }\n      case EntityDecoderState.NumericHex:\n        {\n          return this.stateNumericHex(str, offset);\n        }\n      case EntityDecoderState.NamedEntity:\n        {\n          return this.stateNamedEntity(str, offset);\n        }\n    }\n  }\n  /**\n   * Switches between the numeric decimal and hexadecimal states.\n   *\n   * Equivalent to the `Numeric character reference state` in the HTML spec.\n   *\n   * @param str The string containing the entity (or a continuation of the entity).\n   * @param offset The current offset.\n   * @returns The number of characters that were consumed, or -1 if the entity is incomplete.\n   */\n  stateNumericStart(str, offset) {\n    if (offset >= str.length) {\n      return -1;\n    }\n    if ((str.charCodeAt(offset) | TO_LOWER_BIT) === CharCodes.LOWER_X) {\n      this.state = EntityDecoderState.NumericHex;\n      this.consumed += 1;\n      return this.stateNumericHex(str, offset + 1);\n    }\n    this.state = EntityDecoderState.NumericDecimal;\n    return this.stateNumericDecimal(str, offset);\n  }\n  addToNumericResult(str, start, end, base) {\n    if (start !== end) {\n      const digitCount = end - start;\n      this.result = this.result * Math.pow(base, digitCount) + parseInt(str.substr(start, digitCount), base);\n      this.consumed += digitCount;\n    }\n  }\n  /**\n   * Parses a hexadecimal numeric entity.\n   *\n   * Equivalent to the `Hexademical character reference state` in the HTML spec.\n   *\n   * @param str The string containing the entity (or a continuation of the entity).\n   * @param offset The current offset.\n   * @returns The number of characters that were consumed, or -1 if the entity is incomplete.\n   */\n  stateNumericHex(str, offset) {\n    const startIdx = offset;\n    while (offset < str.length) {\n      const char = str.charCodeAt(offset);\n      if (isNumber(char) || isHexadecimalCharacter(char)) {\n        offset += 1;\n      } else {\n        this.addToNumericResult(str, startIdx, offset, 16);\n        return this.emitNumericEntity(char, 3);\n      }\n    }\n    this.addToNumericResult(str, startIdx, offset, 16);\n    return -1;\n  }\n  /**\n   * Parses a decimal numeric entity.\n   *\n   * Equivalent to the `Decimal character reference state` in the HTML spec.\n   *\n   * @param str The string containing the entity (or a continuation of the entity).\n   * @param offset The current offset.\n   * @returns The number of characters that were consumed, or -1 if the entity is incomplete.\n   */\n  stateNumericDecimal(str, offset) {\n    const startIdx = offset;\n    while (offset < str.length) {\n      const char = str.charCodeAt(offset);\n      if (isNumber(char)) {\n        offset += 1;\n      } else {\n        this.addToNumericResult(str, startIdx, offset, 10);\n        return this.emitNumericEntity(char, 2);\n      }\n    }\n    this.addToNumericResult(str, startIdx, offset, 10);\n    return -1;\n  }\n  /**\n   * Validate and emit a numeric entity.\n   *\n   * Implements the logic from the `Hexademical character reference start\n   * state` and `Numeric character reference end state` in the HTML spec.\n   *\n   * @param lastCp The last code point of the entity. Used to see if the\n   *               entity was terminated with a semicolon.\n   * @param expectedLength The minimum number of characters that should be\n   *                       consumed. Used to validate that at least one digit\n   *                       was consumed.\n   * @returns The number of characters that were consumed.\n   */\n  emitNumericEntity(lastCp, expectedLength) {\n    var _a;\n    // Ensure we consumed at least one digit.\n    if (this.consumed <= expectedLength) {\n      (_a = this.errors) === null || _a === void 0 ? void 0 : _a.absenceOfDigitsInNumericCharacterReference(this.consumed);\n      return 0;\n    }\n    // Figure out if this is a legit end of the entity\n    if (lastCp === CharCodes.SEMI) {\n      this.consumed += 1;\n    } else if (this.decodeMode === DecodingMode.Strict) {\n      return 0;\n    }\n    this.emitCodePoint(replaceCodePoint(this.result), this.consumed);\n    if (this.errors) {\n      if (lastCp !== CharCodes.SEMI) {\n        this.errors.missingSemicolonAfterCharacterReference();\n      }\n      this.errors.validateNumericCharacterReference(this.result);\n    }\n    return this.consumed;\n  }\n  /**\n   * Parses a named entity.\n   *\n   * Equivalent to the `Named character reference state` in the HTML spec.\n   *\n   * @param str The string containing the entity (or a continuation of the entity).\n   * @param offset The current offset.\n   * @returns The number of characters that were consumed, or -1 if the entity is incomplete.\n   */\n  stateNamedEntity(str, offset) {\n    const {\n      decodeTree\n    } = this;\n    let current = decodeTree[this.treeIndex];\n    // The mask is the number of bytes of the value, including the current byte.\n    let valueLength = (current & BinTrieFlags.VALUE_LENGTH) >> 14;\n    for (; offset < str.length; offset++, this.excess++) {\n      const char = str.charCodeAt(offset);\n      this.treeIndex = determineBranch(decodeTree, current, this.treeIndex + Math.max(1, valueLength), char);\n      if (this.treeIndex < 0) {\n        return this.result === 0 ||\n        // If we are parsing an attribute\n        this.decodeMode === DecodingMode.Attribute && (\n        // We shouldn't have consumed any characters after the entity,\n        valueLength === 0 ||\n        // And there should be no invalid characters.\n        isEntityInAttributeInvalidEnd(char)) ? 0 : this.emitNotTerminatedNamedEntity();\n      }\n      current = decodeTree[this.treeIndex];\n      valueLength = (current & BinTrieFlags.VALUE_LENGTH) >> 14;\n      // If the branch is a value, store it and continue\n      if (valueLength !== 0) {\n        // If the entity is terminated by a semicolon, we are done.\n        if (char === CharCodes.SEMI) {\n          return this.emitNamedEntityData(this.treeIndex, valueLength, this.consumed + this.excess);\n        }\n        // If we encounter a non-terminated (legacy) entity while parsing strictly, then ignore it.\n        if (this.decodeMode !== DecodingMode.Strict) {\n          this.result = this.treeIndex;\n          this.consumed += this.excess;\n          this.excess = 0;\n        }\n      }\n    }\n    return -1;\n  }\n  /**\n   * Emit a named entity that was not terminated with a semicolon.\n   *\n   * @returns The number of characters consumed.\n   */\n  emitNotTerminatedNamedEntity() {\n    var _a;\n    const {\n      result,\n      decodeTree\n    } = this;\n    const valueLength = (decodeTree[result] & BinTrieFlags.VALUE_LENGTH) >> 14;\n    this.emitNamedEntityData(result, valueLength, this.consumed);\n    (_a = this.errors) === null || _a === void 0 ? void 0 : _a.missingSemicolonAfterCharacterReference();\n    return this.consumed;\n  }\n  /**\n   * Emit a named entity.\n   *\n   * @param result The index of the entity in the decode tree.\n   * @param valueLength The number of bytes in the entity.\n   * @param consumed The number of characters consumed.\n   *\n   * @returns The number of characters consumed.\n   */\n  emitNamedEntityData(result, valueLength, consumed) {\n    const {\n      decodeTree\n    } = this;\n    this.emitCodePoint(valueLength === 1 ? decodeTree[result] & ~BinTrieFlags.VALUE_LENGTH : decodeTree[result + 1], consumed);\n    if (valueLength === 3) {\n      // For multi-byte values, we need to emit the second byte.\n      this.emitCodePoint(decodeTree[result + 2], consumed);\n    }\n    return consumed;\n  }\n  /**\n   * Signal to the parser that the end of the input was reached.\n   *\n   * Remaining data will be emitted and relevant errors will be produced.\n   *\n   * @returns The number of characters consumed.\n   */\n  end() {\n    var _a;\n    switch (this.state) {\n      case EntityDecoderState.NamedEntity:\n        {\n          // Emit a named entity if we have one.\n          return this.result !== 0 && (this.decodeMode !== DecodingMode.Attribute || this.result === this.treeIndex) ? this.emitNotTerminatedNamedEntity() : 0;\n        }\n      // Otherwise, emit a numeric entity if we have one.\n      case EntityDecoderState.NumericDecimal:\n        {\n          return this.emitNumericEntity(0, 2);\n        }\n      case EntityDecoderState.NumericHex:\n        {\n          return this.emitNumericEntity(0, 3);\n        }\n      case EntityDecoderState.NumericStart:\n        {\n          (_a = this.errors) === null || _a === void 0 ? void 0 : _a.absenceOfDigitsInNumericCharacterReference(this.consumed);\n          return 0;\n        }\n      case EntityDecoderState.EntityStart:\n        {\n          // Return 0 if we have no entity.\n          return 0;\n        }\n    }\n  }\n}\n/**\n * Creates a function that decodes entities in a string.\n *\n * @param decodeTree The decode tree.\n * @returns A function that decodes entities in a string.\n */\nfunction getDecoder(decodeTree) {\n  let ret = \"\";\n  const decoder = new EntityDecoder(decodeTree, str => ret += fromCodePoint(str));\n  return function decodeWithTrie(str, decodeMode) {\n    let lastIndex = 0;\n    let offset = 0;\n    while ((offset = str.indexOf(\"&\", offset)) >= 0) {\n      ret += str.slice(lastIndex, offset);\n      decoder.startEntity(decodeMode);\n      const len = decoder.write(str,\n      // Skip the \"&\"\n      offset + 1);\n      if (len < 0) {\n        lastIndex = offset + decoder.end();\n        break;\n      }\n      lastIndex = offset + len;\n      // If `len` is 0, skip the current `&` and continue.\n      offset = len === 0 ? lastIndex + 1 : lastIndex;\n    }\n    const result = ret + str.slice(lastIndex);\n    // Make sure we don't keep a reference to the final string.\n    ret = \"\";\n    return result;\n  };\n}\n/**\n * Determines the branch of the current node that is taken given the current\n * character. This function is used to traverse the trie.\n *\n * @param decodeTree The trie.\n * @param current The current node.\n * @param nodeIdx The index right after the current node and its value.\n * @param char The current character.\n * @returns The index of the next node, or -1 if no branch is taken.\n */\nexport function determineBranch(decodeTree, current, nodeIdx, char) {\n  const branchCount = (current & BinTrieFlags.BRANCH_LENGTH) >> 7;\n  const jumpOffset = current & BinTrieFlags.JUMP_TABLE;\n  // Case 1: Single branch encoded in jump offset\n  if (branchCount === 0) {\n    return jumpOffset !== 0 && char === jumpOffset ? nodeIdx : -1;\n  }\n  // Case 2: Multiple branches encoded in jump table\n  if (jumpOffset) {\n    const value = char - jumpOffset;\n    return value < 0 || value >= branchCount ? -1 : decodeTree[nodeIdx + value] - 1;\n  }\n  // Case 3: Multiple branches encoded in dictionary\n  // Binary search for the character.\n  let lo = nodeIdx;\n  let hi = lo + branchCount - 1;\n  while (lo <= hi) {\n    const mid = lo + hi >>> 1;\n    const midVal = decodeTree[mid];\n    if (midVal < char) {\n      lo = mid + 1;\n    } else if (midVal > char) {\n      hi = mid - 1;\n    } else {\n      return decodeTree[mid + branchCount];\n    }\n  }\n  return -1;\n}\nconst htmlDecoder = getDecoder(htmlDecodeTree);\nconst xmlDecoder = getDecoder(xmlDecodeTree);\n/**\n * Decodes an HTML string.\n *\n * @param str The string to decode.\n * @param mode The decoding mode.\n * @returns The decoded string.\n */\nexport function decodeHTML(str, mode = DecodingMode.Legacy) {\n  return htmlDecoder(str, mode);\n}\n/**\n * Decodes an HTML string in an attribute.\n *\n * @param str The string to decode.\n * @returns The decoded string.\n */\nexport function decodeHTMLAttribute(str) {\n  return htmlDecoder(str, DecodingMode.Attribute);\n}\n/**\n * Decodes an HTML string, requiring all entities to be terminated by a semicolon.\n *\n * @param str The string to decode.\n * @returns The decoded string.\n */\nexport function decodeHTMLStrict(str) {\n  return htmlDecoder(str, DecodingMode.Strict);\n}\n/**\n * Decodes an XML string, requiring all entities to be terminated by a semicolon.\n *\n * @param str The string to decode.\n * @returns The decoded string.\n */\nexport function decodeXML(str) {\n  return xmlDecoder(str, DecodingMode.Strict);\n}\n", "// Generated using scripts/write-encode-map.ts\nfunction restoreDiff(arr) {\n  for (let i = 1; i < arr.length; i++) {\n    arr[i][0] += arr[i - 1][0] + 1;\n  }\n  return arr;\n}\n// prettier-ignore\nexport default new Map(/* #__PURE__ */restoreDiff([[9, \"&Tab;\"], [0, \"&NewLine;\"], [22, \"&excl;\"], [0, \"&quot;\"], [0, \"&num;\"], [0, \"&dollar;\"], [0, \"&percnt;\"], [0, \"&amp;\"], [0, \"&apos;\"], [0, \"&lpar;\"], [0, \"&rpar;\"], [0, \"&ast;\"], [0, \"&plus;\"], [0, \"&comma;\"], [1, \"&period;\"], [0, \"&sol;\"], [10, \"&colon;\"], [0, \"&semi;\"], [0, {\n  v: \"&lt;\",\n  n: 8402,\n  o: \"&nvlt;\"\n}], [0, {\n  v: \"&equals;\",\n  n: 8421,\n  o: \"&bne;\"\n}], [0, {\n  v: \"&gt;\",\n  n: 8402,\n  o: \"&nvgt;\"\n}], [0, \"&quest;\"], [0, \"&commat;\"], [26, \"&lbrack;\"], [0, \"&bsol;\"], [0, \"&rbrack;\"], [0, \"&Hat;\"], [0, \"&lowbar;\"], [0, \"&DiacriticalGrave;\"], [5, {\n  n: 106,\n  o: \"&fjlig;\"\n}], [20, \"&lbrace;\"], [0, \"&verbar;\"], [0, \"&rbrace;\"], [34, \"&nbsp;\"], [0, \"&iexcl;\"], [0, \"&cent;\"], [0, \"&pound;\"], [0, \"&curren;\"], [0, \"&yen;\"], [0, \"&brvbar;\"], [0, \"&sect;\"], [0, \"&die;\"], [0, \"&copy;\"], [0, \"&ordf;\"], [0, \"&laquo;\"], [0, \"&not;\"], [0, \"&shy;\"], [0, \"&circledR;\"], [0, \"&macr;\"], [0, \"&deg;\"], [0, \"&PlusMinus;\"], [0, \"&sup2;\"], [0, \"&sup3;\"], [0, \"&acute;\"], [0, \"&micro;\"], [0, \"&para;\"], [0, \"&centerdot;\"], [0, \"&cedil;\"], [0, \"&sup1;\"], [0, \"&ordm;\"], [0, \"&raquo;\"], [0, \"&frac14;\"], [0, \"&frac12;\"], [0, \"&frac34;\"], [0, \"&iquest;\"], [0, \"&Agrave;\"], [0, \"&Aacute;\"], [0, \"&Acirc;\"], [0, \"&Atilde;\"], [0, \"&Auml;\"], [0, \"&angst;\"], [0, \"&AElig;\"], [0, \"&Ccedil;\"], [0, \"&Egrave;\"], [0, \"&Eacute;\"], [0, \"&Ecirc;\"], [0, \"&Euml;\"], [0, \"&Igrave;\"], [0, \"&Iacute;\"], [0, \"&Icirc;\"], [0, \"&Iuml;\"], [0, \"&ETH;\"], [0, \"&Ntilde;\"], [0, \"&Ograve;\"], [0, \"&Oacute;\"], [0, \"&Ocirc;\"], [0, \"&Otilde;\"], [0, \"&Ouml;\"], [0, \"&times;\"], [0, \"&Oslash;\"], [0, \"&Ugrave;\"], [0, \"&Uacute;\"], [0, \"&Ucirc;\"], [0, \"&Uuml;\"], [0, \"&Yacute;\"], [0, \"&THORN;\"], [0, \"&szlig;\"], [0, \"&agrave;\"], [0, \"&aacute;\"], [0, \"&acirc;\"], [0, \"&atilde;\"], [0, \"&auml;\"], [0, \"&aring;\"], [0, \"&aelig;\"], [0, \"&ccedil;\"], [0, \"&egrave;\"], [0, \"&eacute;\"], [0, \"&ecirc;\"], [0, \"&euml;\"], [0, \"&igrave;\"], [0, \"&iacute;\"], [0, \"&icirc;\"], [0, \"&iuml;\"], [0, \"&eth;\"], [0, \"&ntilde;\"], [0, \"&ograve;\"], [0, \"&oacute;\"], [0, \"&ocirc;\"], [0, \"&otilde;\"], [0, \"&ouml;\"], [0, \"&div;\"], [0, \"&oslash;\"], [0, \"&ugrave;\"], [0, \"&uacute;\"], [0, \"&ucirc;\"], [0, \"&uuml;\"], [0, \"&yacute;\"], [0, \"&thorn;\"], [0, \"&yuml;\"], [0, \"&Amacr;\"], [0, \"&amacr;\"], [0, \"&Abreve;\"], [0, \"&abreve;\"], [0, \"&Aogon;\"], [0, \"&aogon;\"], [0, \"&Cacute;\"], [0, \"&cacute;\"], [0, \"&Ccirc;\"], [0, \"&ccirc;\"], [0, \"&Cdot;\"], [0, \"&cdot;\"], [0, \"&Ccaron;\"], [0, \"&ccaron;\"], [0, \"&Dcaron;\"], [0, \"&dcaron;\"], [0, \"&Dstrok;\"], [0, \"&dstrok;\"], [0, \"&Emacr;\"], [0, \"&emacr;\"], [2, \"&Edot;\"], [0, \"&edot;\"], [0, \"&Eogon;\"], [0, \"&eogon;\"], [0, \"&Ecaron;\"], [0, \"&ecaron;\"], [0, \"&Gcirc;\"], [0, \"&gcirc;\"], [0, \"&Gbreve;\"], [0, \"&gbreve;\"], [0, \"&Gdot;\"], [0, \"&gdot;\"], [0, \"&Gcedil;\"], [1, \"&Hcirc;\"], [0, \"&hcirc;\"], [0, \"&Hstrok;\"], [0, \"&hstrok;\"], [0, \"&Itilde;\"], [0, \"&itilde;\"], [0, \"&Imacr;\"], [0, \"&imacr;\"], [2, \"&Iogon;\"], [0, \"&iogon;\"], [0, \"&Idot;\"], [0, \"&imath;\"], [0, \"&IJlig;\"], [0, \"&ijlig;\"], [0, \"&Jcirc;\"], [0, \"&jcirc;\"], [0, \"&Kcedil;\"], [0, \"&kcedil;\"], [0, \"&kgreen;\"], [0, \"&Lacute;\"], [0, \"&lacute;\"], [0, \"&Lcedil;\"], [0, \"&lcedil;\"], [0, \"&Lcaron;\"], [0, \"&lcaron;\"], [0, \"&Lmidot;\"], [0, \"&lmidot;\"], [0, \"&Lstrok;\"], [0, \"&lstrok;\"], [0, \"&Nacute;\"], [0, \"&nacute;\"], [0, \"&Ncedil;\"], [0, \"&ncedil;\"], [0, \"&Ncaron;\"], [0, \"&ncaron;\"], [0, \"&napos;\"], [0, \"&ENG;\"], [0, \"&eng;\"], [0, \"&Omacr;\"], [0, \"&omacr;\"], [2, \"&Odblac;\"], [0, \"&odblac;\"], [0, \"&OElig;\"], [0, \"&oelig;\"], [0, \"&Racute;\"], [0, \"&racute;\"], [0, \"&Rcedil;\"], [0, \"&rcedil;\"], [0, \"&Rcaron;\"], [0, \"&rcaron;\"], [0, \"&Sacute;\"], [0, \"&sacute;\"], [0, \"&Scirc;\"], [0, \"&scirc;\"], [0, \"&Scedil;\"], [0, \"&scedil;\"], [0, \"&Scaron;\"], [0, \"&scaron;\"], [0, \"&Tcedil;\"], [0, \"&tcedil;\"], [0, \"&Tcaron;\"], [0, \"&tcaron;\"], [0, \"&Tstrok;\"], [0, \"&tstrok;\"], [0, \"&Utilde;\"], [0, \"&utilde;\"], [0, \"&Umacr;\"], [0, \"&umacr;\"], [0, \"&Ubreve;\"], [0, \"&ubreve;\"], [0, \"&Uring;\"], [0, \"&uring;\"], [0, \"&Udblac;\"], [0, \"&udblac;\"], [0, \"&Uogon;\"], [0, \"&uogon;\"], [0, \"&Wcirc;\"], [0, \"&wcirc;\"], [0, \"&Ycirc;\"], [0, \"&ycirc;\"], [0, \"&Yuml;\"], [0, \"&Zacute;\"], [0, \"&zacute;\"], [0, \"&Zdot;\"], [0, \"&zdot;\"], [0, \"&Zcaron;\"], [0, \"&zcaron;\"], [19, \"&fnof;\"], [34, \"&imped;\"], [63, \"&gacute;\"], [65, \"&jmath;\"], [142, \"&circ;\"], [0, \"&caron;\"], [16, \"&breve;\"], [0, \"&DiacriticalDot;\"], [0, \"&ring;\"], [0, \"&ogon;\"], [0, \"&DiacriticalTilde;\"], [0, \"&dblac;\"], [51, \"&DownBreve;\"], [127, \"&Alpha;\"], [0, \"&Beta;\"], [0, \"&Gamma;\"], [0, \"&Delta;\"], [0, \"&Epsilon;\"], [0, \"&Zeta;\"], [0, \"&Eta;\"], [0, \"&Theta;\"], [0, \"&Iota;\"], [0, \"&Kappa;\"], [0, \"&Lambda;\"], [0, \"&Mu;\"], [0, \"&Nu;\"], [0, \"&Xi;\"], [0, \"&Omicron;\"], [0, \"&Pi;\"], [0, \"&Rho;\"], [1, \"&Sigma;\"], [0, \"&Tau;\"], [0, \"&Upsilon;\"], [0, \"&Phi;\"], [0, \"&Chi;\"], [0, \"&Psi;\"], [0, \"&ohm;\"], [7, \"&alpha;\"], [0, \"&beta;\"], [0, \"&gamma;\"], [0, \"&delta;\"], [0, \"&epsi;\"], [0, \"&zeta;\"], [0, \"&eta;\"], [0, \"&theta;\"], [0, \"&iota;\"], [0, \"&kappa;\"], [0, \"&lambda;\"], [0, \"&mu;\"], [0, \"&nu;\"], [0, \"&xi;\"], [0, \"&omicron;\"], [0, \"&pi;\"], [0, \"&rho;\"], [0, \"&sigmaf;\"], [0, \"&sigma;\"], [0, \"&tau;\"], [0, \"&upsi;\"], [0, \"&phi;\"], [0, \"&chi;\"], [0, \"&psi;\"], [0, \"&omega;\"], [7, \"&thetasym;\"], [0, \"&Upsi;\"], [2, \"&phiv;\"], [0, \"&piv;\"], [5, \"&Gammad;\"], [0, \"&digamma;\"], [18, \"&kappav;\"], [0, \"&rhov;\"], [3, \"&epsiv;\"], [0, \"&backepsilon;\"], [10, \"&IOcy;\"], [0, \"&DJcy;\"], [0, \"&GJcy;\"], [0, \"&Jukcy;\"], [0, \"&DScy;\"], [0, \"&Iukcy;\"], [0, \"&YIcy;\"], [0, \"&Jsercy;\"], [0, \"&LJcy;\"], [0, \"&NJcy;\"], [0, \"&TSHcy;\"], [0, \"&KJcy;\"], [1, \"&Ubrcy;\"], [0, \"&DZcy;\"], [0, \"&Acy;\"], [0, \"&Bcy;\"], [0, \"&Vcy;\"], [0, \"&Gcy;\"], [0, \"&Dcy;\"], [0, \"&IEcy;\"], [0, \"&ZHcy;\"], [0, \"&Zcy;\"], [0, \"&Icy;\"], [0, \"&Jcy;\"], [0, \"&Kcy;\"], [0, \"&Lcy;\"], [0, \"&Mcy;\"], [0, \"&Ncy;\"], [0, \"&Ocy;\"], [0, \"&Pcy;\"], [0, \"&Rcy;\"], [0, \"&Scy;\"], [0, \"&Tcy;\"], [0, \"&Ucy;\"], [0, \"&Fcy;\"], [0, \"&KHcy;\"], [0, \"&TScy;\"], [0, \"&CHcy;\"], [0, \"&SHcy;\"], [0, \"&SHCHcy;\"], [0, \"&HARDcy;\"], [0, \"&Ycy;\"], [0, \"&SOFTcy;\"], [0, \"&Ecy;\"], [0, \"&YUcy;\"], [0, \"&YAcy;\"], [0, \"&acy;\"], [0, \"&bcy;\"], [0, \"&vcy;\"], [0, \"&gcy;\"], [0, \"&dcy;\"], [0, \"&iecy;\"], [0, \"&zhcy;\"], [0, \"&zcy;\"], [0, \"&icy;\"], [0, \"&jcy;\"], [0, \"&kcy;\"], [0, \"&lcy;\"], [0, \"&mcy;\"], [0, \"&ncy;\"], [0, \"&ocy;\"], [0, \"&pcy;\"], [0, \"&rcy;\"], [0, \"&scy;\"], [0, \"&tcy;\"], [0, \"&ucy;\"], [0, \"&fcy;\"], [0, \"&khcy;\"], [0, \"&tscy;\"], [0, \"&chcy;\"], [0, \"&shcy;\"], [0, \"&shchcy;\"], [0, \"&hardcy;\"], [0, \"&ycy;\"], [0, \"&softcy;\"], [0, \"&ecy;\"], [0, \"&yucy;\"], [0, \"&yacy;\"], [1, \"&iocy;\"], [0, \"&djcy;\"], [0, \"&gjcy;\"], [0, \"&jukcy;\"], [0, \"&dscy;\"], [0, \"&iukcy;\"], [0, \"&yicy;\"], [0, \"&jsercy;\"], [0, \"&ljcy;\"], [0, \"&njcy;\"], [0, \"&tshcy;\"], [0, \"&kjcy;\"], [1, \"&ubrcy;\"], [0, \"&dzcy;\"], [7074, \"&ensp;\"], [0, \"&emsp;\"], [0, \"&emsp13;\"], [0, \"&emsp14;\"], [1, \"&numsp;\"], [0, \"&puncsp;\"], [0, \"&ThinSpace;\"], [0, \"&hairsp;\"], [0, \"&NegativeMediumSpace;\"], [0, \"&zwnj;\"], [0, \"&zwj;\"], [0, \"&lrm;\"], [0, \"&rlm;\"], [0, \"&dash;\"], [2, \"&ndash;\"], [0, \"&mdash;\"], [0, \"&horbar;\"], [0, \"&Verbar;\"], [1, \"&lsquo;\"], [0, \"&CloseCurlyQuote;\"], [0, \"&lsquor;\"], [1, \"&ldquo;\"], [0, \"&CloseCurlyDoubleQuote;\"], [0, \"&bdquo;\"], [1, \"&dagger;\"], [0, \"&Dagger;\"], [0, \"&bull;\"], [2, \"&nldr;\"], [0, \"&hellip;\"], [9, \"&permil;\"], [0, \"&pertenk;\"], [0, \"&prime;\"], [0, \"&Prime;\"], [0, \"&tprime;\"], [0, \"&backprime;\"], [3, \"&lsaquo;\"], [0, \"&rsaquo;\"], [3, \"&oline;\"], [2, \"&caret;\"], [1, \"&hybull;\"], [0, \"&frasl;\"], [10, \"&bsemi;\"], [7, \"&qprime;\"], [7, {\n  v: \"&MediumSpace;\",\n  n: 8202,\n  o: \"&ThickSpace;\"\n}], [0, \"&NoBreak;\"], [0, \"&af;\"], [0, \"&InvisibleTimes;\"], [0, \"&ic;\"], [72, \"&euro;\"], [46, \"&tdot;\"], [0, \"&DotDot;\"], [37, \"&complexes;\"], [2, \"&incare;\"], [4, \"&gscr;\"], [0, \"&hamilt;\"], [0, \"&Hfr;\"], [0, \"&Hopf;\"], [0, \"&planckh;\"], [0, \"&hbar;\"], [0, \"&imagline;\"], [0, \"&Ifr;\"], [0, \"&lagran;\"], [0, \"&ell;\"], [1, \"&naturals;\"], [0, \"&numero;\"], [0, \"&copysr;\"], [0, \"&weierp;\"], [0, \"&Popf;\"], [0, \"&Qopf;\"], [0, \"&realine;\"], [0, \"&real;\"], [0, \"&reals;\"], [0, \"&rx;\"], [3, \"&trade;\"], [1, \"&integers;\"], [2, \"&mho;\"], [0, \"&zeetrf;\"], [0, \"&iiota;\"], [2, \"&bernou;\"], [0, \"&Cayleys;\"], [1, \"&escr;\"], [0, \"&Escr;\"], [0, \"&Fouriertrf;\"], [1, \"&Mellintrf;\"], [0, \"&order;\"], [0, \"&alefsym;\"], [0, \"&beth;\"], [0, \"&gimel;\"], [0, \"&daleth;\"], [12, \"&CapitalDifferentialD;\"], [0, \"&dd;\"], [0, \"&ee;\"], [0, \"&ii;\"], [10, \"&frac13;\"], [0, \"&frac23;\"], [0, \"&frac15;\"], [0, \"&frac25;\"], [0, \"&frac35;\"], [0, \"&frac45;\"], [0, \"&frac16;\"], [0, \"&frac56;\"], [0, \"&frac18;\"], [0, \"&frac38;\"], [0, \"&frac58;\"], [0, \"&frac78;\"], [49, \"&larr;\"], [0, \"&ShortUpArrow;\"], [0, \"&rarr;\"], [0, \"&darr;\"], [0, \"&harr;\"], [0, \"&updownarrow;\"], [0, \"&nwarr;\"], [0, \"&nearr;\"], [0, \"&LowerRightArrow;\"], [0, \"&LowerLeftArrow;\"], [0, \"&nlarr;\"], [0, \"&nrarr;\"], [1, {\n  v: \"&rarrw;\",\n  n: 824,\n  o: \"&nrarrw;\"\n}], [0, \"&Larr;\"], [0, \"&Uarr;\"], [0, \"&Rarr;\"], [0, \"&Darr;\"], [0, \"&larrtl;\"], [0, \"&rarrtl;\"], [0, \"&LeftTeeArrow;\"], [0, \"&mapstoup;\"], [0, \"&map;\"], [0, \"&DownTeeArrow;\"], [1, \"&hookleftarrow;\"], [0, \"&hookrightarrow;\"], [0, \"&larrlp;\"], [0, \"&looparrowright;\"], [0, \"&harrw;\"], [0, \"&nharr;\"], [1, \"&lsh;\"], [0, \"&rsh;\"], [0, \"&ldsh;\"], [0, \"&rdsh;\"], [1, \"&crarr;\"], [0, \"&cularr;\"], [0, \"&curarr;\"], [2, \"&circlearrowleft;\"], [0, \"&circlearrowright;\"], [0, \"&leftharpoonup;\"], [0, \"&DownLeftVector;\"], [0, \"&RightUpVector;\"], [0, \"&LeftUpVector;\"], [0, \"&rharu;\"], [0, \"&DownRightVector;\"], [0, \"&dharr;\"], [0, \"&dharl;\"], [0, \"&RightArrowLeftArrow;\"], [0, \"&udarr;\"], [0, \"&LeftArrowRightArrow;\"], [0, \"&leftleftarrows;\"], [0, \"&upuparrows;\"], [0, \"&rightrightarrows;\"], [0, \"&ddarr;\"], [0, \"&leftrightharpoons;\"], [0, \"&Equilibrium;\"], [0, \"&nlArr;\"], [0, \"&nhArr;\"], [0, \"&nrArr;\"], [0, \"&DoubleLeftArrow;\"], [0, \"&DoubleUpArrow;\"], [0, \"&DoubleRightArrow;\"], [0, \"&dArr;\"], [0, \"&DoubleLeftRightArrow;\"], [0, \"&DoubleUpDownArrow;\"], [0, \"&nwArr;\"], [0, \"&neArr;\"], [0, \"&seArr;\"], [0, \"&swArr;\"], [0, \"&lAarr;\"], [0, \"&rAarr;\"], [1, \"&zigrarr;\"], [6, \"&larrb;\"], [0, \"&rarrb;\"], [15, \"&DownArrowUpArrow;\"], [7, \"&loarr;\"], [0, \"&roarr;\"], [0, \"&hoarr;\"], [0, \"&forall;\"], [0, \"&comp;\"], [0, {\n  v: \"&part;\",\n  n: 824,\n  o: \"&npart;\"\n}], [0, \"&exist;\"], [0, \"&nexist;\"], [0, \"&empty;\"], [1, \"&Del;\"], [0, \"&Element;\"], [0, \"&NotElement;\"], [1, \"&ni;\"], [0, \"&notni;\"], [2, \"&prod;\"], [0, \"&coprod;\"], [0, \"&sum;\"], [0, \"&minus;\"], [0, \"&MinusPlus;\"], [0, \"&dotplus;\"], [1, \"&Backslash;\"], [0, \"&lowast;\"], [0, \"&compfn;\"], [1, \"&radic;\"], [2, \"&prop;\"], [0, \"&infin;\"], [0, \"&angrt;\"], [0, {\n  v: \"&ang;\",\n  n: 8402,\n  o: \"&nang;\"\n}], [0, \"&angmsd;\"], [0, \"&angsph;\"], [0, \"&mid;\"], [0, \"&nmid;\"], [0, \"&DoubleVerticalBar;\"], [0, \"&NotDoubleVerticalBar;\"], [0, \"&and;\"], [0, \"&or;\"], [0, {\n  v: \"&cap;\",\n  n: 65024,\n  o: \"&caps;\"\n}], [0, {\n  v: \"&cup;\",\n  n: 65024,\n  o: \"&cups;\"\n}], [0, \"&int;\"], [0, \"&Int;\"], [0, \"&iiint;\"], [0, \"&conint;\"], [0, \"&Conint;\"], [0, \"&Cconint;\"], [0, \"&cwint;\"], [0, \"&ClockwiseContourIntegral;\"], [0, \"&awconint;\"], [0, \"&there4;\"], [0, \"&becaus;\"], [0, \"&ratio;\"], [0, \"&Colon;\"], [0, \"&dotminus;\"], [1, \"&mDDot;\"], [0, \"&homtht;\"], [0, {\n  v: \"&sim;\",\n  n: 8402,\n  o: \"&nvsim;\"\n}], [0, {\n  v: \"&backsim;\",\n  n: 817,\n  o: \"&race;\"\n}], [0, {\n  v: \"&ac;\",\n  n: 819,\n  o: \"&acE;\"\n}], [0, \"&acd;\"], [0, \"&VerticalTilde;\"], [0, \"&NotTilde;\"], [0, {\n  v: \"&eqsim;\",\n  n: 824,\n  o: \"&nesim;\"\n}], [0, \"&sime;\"], [0, \"&NotTildeEqual;\"], [0, \"&cong;\"], [0, \"&simne;\"], [0, \"&ncong;\"], [0, \"&ap;\"], [0, \"&nap;\"], [0, \"&ape;\"], [0, {\n  v: \"&apid;\",\n  n: 824,\n  o: \"&napid;\"\n}], [0, \"&backcong;\"], [0, {\n  v: \"&asympeq;\",\n  n: 8402,\n  o: \"&nvap;\"\n}], [0, {\n  v: \"&bump;\",\n  n: 824,\n  o: \"&nbump;\"\n}], [0, {\n  v: \"&bumpe;\",\n  n: 824,\n  o: \"&nbumpe;\"\n}], [0, {\n  v: \"&doteq;\",\n  n: 824,\n  o: \"&nedot;\"\n}], [0, \"&doteqdot;\"], [0, \"&efDot;\"], [0, \"&erDot;\"], [0, \"&Assign;\"], [0, \"&ecolon;\"], [0, \"&ecir;\"], [0, \"&circeq;\"], [1, \"&wedgeq;\"], [0, \"&veeeq;\"], [1, \"&triangleq;\"], [2, \"&equest;\"], [0, \"&ne;\"], [0, {\n  v: \"&Congruent;\",\n  n: 8421,\n  o: \"&bnequiv;\"\n}], [0, \"&nequiv;\"], [1, {\n  v: \"&le;\",\n  n: 8402,\n  o: \"&nvle;\"\n}], [0, {\n  v: \"&ge;\",\n  n: 8402,\n  o: \"&nvge;\"\n}], [0, {\n  v: \"&lE;\",\n  n: 824,\n  o: \"&nlE;\"\n}], [0, {\n  v: \"&gE;\",\n  n: 824,\n  o: \"&ngE;\"\n}], [0, {\n  v: \"&lnE;\",\n  n: 65024,\n  o: \"&lvertneqq;\"\n}], [0, {\n  v: \"&gnE;\",\n  n: 65024,\n  o: \"&gvertneqq;\"\n}], [0, {\n  v: \"&ll;\",\n  n: new Map(/* #__PURE__ */restoreDiff([[824, \"&nLtv;\"], [7577, \"&nLt;\"]]))\n}], [0, {\n  v: \"&gg;\",\n  n: new Map(/* #__PURE__ */restoreDiff([[824, \"&nGtv;\"], [7577, \"&nGt;\"]]))\n}], [0, \"&between;\"], [0, \"&NotCupCap;\"], [0, \"&nless;\"], [0, \"&ngt;\"], [0, \"&nle;\"], [0, \"&nge;\"], [0, \"&lesssim;\"], [0, \"&GreaterTilde;\"], [0, \"&nlsim;\"], [0, \"&ngsim;\"], [0, \"&LessGreater;\"], [0, \"&gl;\"], [0, \"&NotLessGreater;\"], [0, \"&NotGreaterLess;\"], [0, \"&pr;\"], [0, \"&sc;\"], [0, \"&prcue;\"], [0, \"&sccue;\"], [0, \"&PrecedesTilde;\"], [0, {\n  v: \"&scsim;\",\n  n: 824,\n  o: \"&NotSucceedsTilde;\"\n}], [0, \"&NotPrecedes;\"], [0, \"&NotSucceeds;\"], [0, {\n  v: \"&sub;\",\n  n: 8402,\n  o: \"&NotSubset;\"\n}], [0, {\n  v: \"&sup;\",\n  n: 8402,\n  o: \"&NotSuperset;\"\n}], [0, \"&nsub;\"], [0, \"&nsup;\"], [0, \"&sube;\"], [0, \"&supe;\"], [0, \"&NotSubsetEqual;\"], [0, \"&NotSupersetEqual;\"], [0, {\n  v: \"&subne;\",\n  n: 65024,\n  o: \"&varsubsetneq;\"\n}], [0, {\n  v: \"&supne;\",\n  n: 65024,\n  o: \"&varsupsetneq;\"\n}], [1, \"&cupdot;\"], [0, \"&UnionPlus;\"], [0, {\n  v: \"&sqsub;\",\n  n: 824,\n  o: \"&NotSquareSubset;\"\n}], [0, {\n  v: \"&sqsup;\",\n  n: 824,\n  o: \"&NotSquareSuperset;\"\n}], [0, \"&sqsube;\"], [0, \"&sqsupe;\"], [0, {\n  v: \"&sqcap;\",\n  n: 65024,\n  o: \"&sqcaps;\"\n}], [0, {\n  v: \"&sqcup;\",\n  n: 65024,\n  o: \"&sqcups;\"\n}], [0, \"&CirclePlus;\"], [0, \"&CircleMinus;\"], [0, \"&CircleTimes;\"], [0, \"&osol;\"], [0, \"&CircleDot;\"], [0, \"&circledcirc;\"], [0, \"&circledast;\"], [1, \"&circleddash;\"], [0, \"&boxplus;\"], [0, \"&boxminus;\"], [0, \"&boxtimes;\"], [0, \"&dotsquare;\"], [0, \"&RightTee;\"], [0, \"&dashv;\"], [0, \"&DownTee;\"], [0, \"&bot;\"], [1, \"&models;\"], [0, \"&DoubleRightTee;\"], [0, \"&Vdash;\"], [0, \"&Vvdash;\"], [0, \"&VDash;\"], [0, \"&nvdash;\"], [0, \"&nvDash;\"], [0, \"&nVdash;\"], [0, \"&nVDash;\"], [0, \"&prurel;\"], [1, \"&LeftTriangle;\"], [0, \"&RightTriangle;\"], [0, {\n  v: \"&LeftTriangleEqual;\",\n  n: 8402,\n  o: \"&nvltrie;\"\n}], [0, {\n  v: \"&RightTriangleEqual;\",\n  n: 8402,\n  o: \"&nvrtrie;\"\n}], [0, \"&origof;\"], [0, \"&imof;\"], [0, \"&multimap;\"], [0, \"&hercon;\"], [0, \"&intcal;\"], [0, \"&veebar;\"], [1, \"&barvee;\"], [0, \"&angrtvb;\"], [0, \"&lrtri;\"], [0, \"&bigwedge;\"], [0, \"&bigvee;\"], [0, \"&bigcap;\"], [0, \"&bigcup;\"], [0, \"&diam;\"], [0, \"&sdot;\"], [0, \"&sstarf;\"], [0, \"&divideontimes;\"], [0, \"&bowtie;\"], [0, \"&ltimes;\"], [0, \"&rtimes;\"], [0, \"&leftthreetimes;\"], [0, \"&rightthreetimes;\"], [0, \"&backsimeq;\"], [0, \"&curlyvee;\"], [0, \"&curlywedge;\"], [0, \"&Sub;\"], [0, \"&Sup;\"], [0, \"&Cap;\"], [0, \"&Cup;\"], [0, \"&fork;\"], [0, \"&epar;\"], [0, \"&lessdot;\"], [0, \"&gtdot;\"], [0, {\n  v: \"&Ll;\",\n  n: 824,\n  o: \"&nLl;\"\n}], [0, {\n  v: \"&Gg;\",\n  n: 824,\n  o: \"&nGg;\"\n}], [0, {\n  v: \"&leg;\",\n  n: 65024,\n  o: \"&lesg;\"\n}], [0, {\n  v: \"&gel;\",\n  n: 65024,\n  o: \"&gesl;\"\n}], [2, \"&cuepr;\"], [0, \"&cuesc;\"], [0, \"&NotPrecedesSlantEqual;\"], [0, \"&NotSucceedsSlantEqual;\"], [0, \"&NotSquareSubsetEqual;\"], [0, \"&NotSquareSupersetEqual;\"], [2, \"&lnsim;\"], [0, \"&gnsim;\"], [0, \"&precnsim;\"], [0, \"&scnsim;\"], [0, \"&nltri;\"], [0, \"&NotRightTriangle;\"], [0, \"&nltrie;\"], [0, \"&NotRightTriangleEqual;\"], [0, \"&vellip;\"], [0, \"&ctdot;\"], [0, \"&utdot;\"], [0, \"&dtdot;\"], [0, \"&disin;\"], [0, \"&isinsv;\"], [0, \"&isins;\"], [0, {\n  v: \"&isindot;\",\n  n: 824,\n  o: \"&notindot;\"\n}], [0, \"&notinvc;\"], [0, \"&notinvb;\"], [1, {\n  v: \"&isinE;\",\n  n: 824,\n  o: \"&notinE;\"\n}], [0, \"&nisd;\"], [0, \"&xnis;\"], [0, \"&nis;\"], [0, \"&notnivc;\"], [0, \"&notnivb;\"], [6, \"&barwed;\"], [0, \"&Barwed;\"], [1, \"&lceil;\"], [0, \"&rceil;\"], [0, \"&LeftFloor;\"], [0, \"&rfloor;\"], [0, \"&drcrop;\"], [0, \"&dlcrop;\"], [0, \"&urcrop;\"], [0, \"&ulcrop;\"], [0, \"&bnot;\"], [1, \"&profline;\"], [0, \"&profsurf;\"], [1, \"&telrec;\"], [0, \"&target;\"], [5, \"&ulcorn;\"], [0, \"&urcorn;\"], [0, \"&dlcorn;\"], [0, \"&drcorn;\"], [2, \"&frown;\"], [0, \"&smile;\"], [9, \"&cylcty;\"], [0, \"&profalar;\"], [7, \"&topbot;\"], [6, \"&ovbar;\"], [1, \"&solbar;\"], [60, \"&angzarr;\"], [51, \"&lmoustache;\"], [0, \"&rmoustache;\"], [2, \"&OverBracket;\"], [0, \"&bbrk;\"], [0, \"&bbrktbrk;\"], [37, \"&OverParenthesis;\"], [0, \"&UnderParenthesis;\"], [0, \"&OverBrace;\"], [0, \"&UnderBrace;\"], [2, \"&trpezium;\"], [4, \"&elinters;\"], [59, \"&blank;\"], [164, \"&circledS;\"], [55, \"&boxh;\"], [1, \"&boxv;\"], [9, \"&boxdr;\"], [3, \"&boxdl;\"], [3, \"&boxur;\"], [3, \"&boxul;\"], [3, \"&boxvr;\"], [7, \"&boxvl;\"], [7, \"&boxhd;\"], [7, \"&boxhu;\"], [7, \"&boxvh;\"], [19, \"&boxH;\"], [0, \"&boxV;\"], [0, \"&boxdR;\"], [0, \"&boxDr;\"], [0, \"&boxDR;\"], [0, \"&boxdL;\"], [0, \"&boxDl;\"], [0, \"&boxDL;\"], [0, \"&boxuR;\"], [0, \"&boxUr;\"], [0, \"&boxUR;\"], [0, \"&boxuL;\"], [0, \"&boxUl;\"], [0, \"&boxUL;\"], [0, \"&boxvR;\"], [0, \"&boxVr;\"], [0, \"&boxVR;\"], [0, \"&boxvL;\"], [0, \"&boxVl;\"], [0, \"&boxVL;\"], [0, \"&boxHd;\"], [0, \"&boxhD;\"], [0, \"&boxHD;\"], [0, \"&boxHu;\"], [0, \"&boxhU;\"], [0, \"&boxHU;\"], [0, \"&boxvH;\"], [0, \"&boxVh;\"], [0, \"&boxVH;\"], [19, \"&uhblk;\"], [3, \"&lhblk;\"], [3, \"&block;\"], [8, \"&blk14;\"], [0, \"&blk12;\"], [0, \"&blk34;\"], [13, \"&square;\"], [8, \"&blacksquare;\"], [0, \"&EmptyVerySmallSquare;\"], [1, \"&rect;\"], [0, \"&marker;\"], [2, \"&fltns;\"], [1, \"&bigtriangleup;\"], [0, \"&blacktriangle;\"], [0, \"&triangle;\"], [2, \"&blacktriangleright;\"], [0, \"&rtri;\"], [3, \"&bigtriangledown;\"], [0, \"&blacktriangledown;\"], [0, \"&dtri;\"], [2, \"&blacktriangleleft;\"], [0, \"&ltri;\"], [6, \"&loz;\"], [0, \"&cir;\"], [32, \"&tridot;\"], [2, \"&bigcirc;\"], [8, \"&ultri;\"], [0, \"&urtri;\"], [0, \"&lltri;\"], [0, \"&EmptySmallSquare;\"], [0, \"&FilledSmallSquare;\"], [8, \"&bigstar;\"], [0, \"&star;\"], [7, \"&phone;\"], [49, \"&female;\"], [1, \"&male;\"], [29, \"&spades;\"], [2, \"&clubs;\"], [1, \"&hearts;\"], [0, \"&diamondsuit;\"], [3, \"&sung;\"], [2, \"&flat;\"], [0, \"&natural;\"], [0, \"&sharp;\"], [163, \"&check;\"], [3, \"&cross;\"], [8, \"&malt;\"], [21, \"&sext;\"], [33, \"&VerticalSeparator;\"], [25, \"&lbbrk;\"], [0, \"&rbbrk;\"], [84, \"&bsolhsub;\"], [0, \"&suphsol;\"], [28, \"&LeftDoubleBracket;\"], [0, \"&RightDoubleBracket;\"], [0, \"&lang;\"], [0, \"&rang;\"], [0, \"&Lang;\"], [0, \"&Rang;\"], [0, \"&loang;\"], [0, \"&roang;\"], [7, \"&longleftarrow;\"], [0, \"&longrightarrow;\"], [0, \"&longleftrightarrow;\"], [0, \"&DoubleLongLeftArrow;\"], [0, \"&DoubleLongRightArrow;\"], [0, \"&DoubleLongLeftRightArrow;\"], [1, \"&longmapsto;\"], [2, \"&dzigrarr;\"], [258, \"&nvlArr;\"], [0, \"&nvrArr;\"], [0, \"&nvHarr;\"], [0, \"&Map;\"], [6, \"&lbarr;\"], [0, \"&bkarow;\"], [0, \"&lBarr;\"], [0, \"&dbkarow;\"], [0, \"&drbkarow;\"], [0, \"&DDotrahd;\"], [0, \"&UpArrowBar;\"], [0, \"&DownArrowBar;\"], [2, \"&Rarrtl;\"], [2, \"&latail;\"], [0, \"&ratail;\"], [0, \"&lAtail;\"], [0, \"&rAtail;\"], [0, \"&larrfs;\"], [0, \"&rarrfs;\"], [0, \"&larrbfs;\"], [0, \"&rarrbfs;\"], [2, \"&nwarhk;\"], [0, \"&nearhk;\"], [0, \"&hksearow;\"], [0, \"&hkswarow;\"], [0, \"&nwnear;\"], [0, \"&nesear;\"], [0, \"&seswar;\"], [0, \"&swnwar;\"], [8, {\n  v: \"&rarrc;\",\n  n: 824,\n  o: \"&nrarrc;\"\n}], [1, \"&cudarrr;\"], [0, \"&ldca;\"], [0, \"&rdca;\"], [0, \"&cudarrl;\"], [0, \"&larrpl;\"], [2, \"&curarrm;\"], [0, \"&cularrp;\"], [7, \"&rarrpl;\"], [2, \"&harrcir;\"], [0, \"&Uarrocir;\"], [0, \"&lurdshar;\"], [0, \"&ldrushar;\"], [2, \"&LeftRightVector;\"], [0, \"&RightUpDownVector;\"], [0, \"&DownLeftRightVector;\"], [0, \"&LeftUpDownVector;\"], [0, \"&LeftVectorBar;\"], [0, \"&RightVectorBar;\"], [0, \"&RightUpVectorBar;\"], [0, \"&RightDownVectorBar;\"], [0, \"&DownLeftVectorBar;\"], [0, \"&DownRightVectorBar;\"], [0, \"&LeftUpVectorBar;\"], [0, \"&LeftDownVectorBar;\"], [0, \"&LeftTeeVector;\"], [0, \"&RightTeeVector;\"], [0, \"&RightUpTeeVector;\"], [0, \"&RightDownTeeVector;\"], [0, \"&DownLeftTeeVector;\"], [0, \"&DownRightTeeVector;\"], [0, \"&LeftUpTeeVector;\"], [0, \"&LeftDownTeeVector;\"], [0, \"&lHar;\"], [0, \"&uHar;\"], [0, \"&rHar;\"], [0, \"&dHar;\"], [0, \"&luruhar;\"], [0, \"&ldrdhar;\"], [0, \"&ruluhar;\"], [0, \"&rdldhar;\"], [0, \"&lharul;\"], [0, \"&llhard;\"], [0, \"&rharul;\"], [0, \"&lrhard;\"], [0, \"&udhar;\"], [0, \"&duhar;\"], [0, \"&RoundImplies;\"], [0, \"&erarr;\"], [0, \"&simrarr;\"], [0, \"&larrsim;\"], [0, \"&rarrsim;\"], [0, \"&rarrap;\"], [0, \"&ltlarr;\"], [1, \"&gtrarr;\"], [0, \"&subrarr;\"], [1, \"&suplarr;\"], [0, \"&lfisht;\"], [0, \"&rfisht;\"], [0, \"&ufisht;\"], [0, \"&dfisht;\"], [5, \"&lopar;\"], [0, \"&ropar;\"], [4, \"&lbrke;\"], [0, \"&rbrke;\"], [0, \"&lbrkslu;\"], [0, \"&rbrksld;\"], [0, \"&lbrksld;\"], [0, \"&rbrkslu;\"], [0, \"&langd;\"], [0, \"&rangd;\"], [0, \"&lparlt;\"], [0, \"&rpargt;\"], [0, \"&gtlPar;\"], [0, \"&ltrPar;\"], [3, \"&vzigzag;\"], [1, \"&vangrt;\"], [0, \"&angrtvbd;\"], [6, \"&ange;\"], [0, \"&range;\"], [0, \"&dwangle;\"], [0, \"&uwangle;\"], [0, \"&angmsdaa;\"], [0, \"&angmsdab;\"], [0, \"&angmsdac;\"], [0, \"&angmsdad;\"], [0, \"&angmsdae;\"], [0, \"&angmsdaf;\"], [0, \"&angmsdag;\"], [0, \"&angmsdah;\"], [0, \"&bemptyv;\"], [0, \"&demptyv;\"], [0, \"&cemptyv;\"], [0, \"&raemptyv;\"], [0, \"&laemptyv;\"], [0, \"&ohbar;\"], [0, \"&omid;\"], [0, \"&opar;\"], [1, \"&operp;\"], [1, \"&olcross;\"], [0, \"&odsold;\"], [1, \"&olcir;\"], [0, \"&ofcir;\"], [0, \"&olt;\"], [0, \"&ogt;\"], [0, \"&cirscir;\"], [0, \"&cirE;\"], [0, \"&solb;\"], [0, \"&bsolb;\"], [3, \"&boxbox;\"], [3, \"&trisb;\"], [0, \"&rtriltri;\"], [0, {\n  v: \"&LeftTriangleBar;\",\n  n: 824,\n  o: \"&NotLeftTriangleBar;\"\n}], [0, {\n  v: \"&RightTriangleBar;\",\n  n: 824,\n  o: \"&NotRightTriangleBar;\"\n}], [11, \"&iinfin;\"], [0, \"&infintie;\"], [0, \"&nvinfin;\"], [4, \"&eparsl;\"], [0, \"&smeparsl;\"], [0, \"&eqvparsl;\"], [5, \"&blacklozenge;\"], [8, \"&RuleDelayed;\"], [1, \"&dsol;\"], [9, \"&bigodot;\"], [0, \"&bigoplus;\"], [0, \"&bigotimes;\"], [1, \"&biguplus;\"], [1, \"&bigsqcup;\"], [5, \"&iiiint;\"], [0, \"&fpartint;\"], [2, \"&cirfnint;\"], [0, \"&awint;\"], [0, \"&rppolint;\"], [0, \"&scpolint;\"], [0, \"&npolint;\"], [0, \"&pointint;\"], [0, \"&quatint;\"], [0, \"&intlarhk;\"], [10, \"&pluscir;\"], [0, \"&plusacir;\"], [0, \"&simplus;\"], [0, \"&plusdu;\"], [0, \"&plussim;\"], [0, \"&plustwo;\"], [1, \"&mcomma;\"], [0, \"&minusdu;\"], [2, \"&loplus;\"], [0, \"&roplus;\"], [0, \"&Cross;\"], [0, \"&timesd;\"], [0, \"&timesbar;\"], [1, \"&smashp;\"], [0, \"&lotimes;\"], [0, \"&rotimes;\"], [0, \"&otimesas;\"], [0, \"&Otimes;\"], [0, \"&odiv;\"], [0, \"&triplus;\"], [0, \"&triminus;\"], [0, \"&tritime;\"], [0, \"&intprod;\"], [2, \"&amalg;\"], [0, \"&capdot;\"], [1, \"&ncup;\"], [0, \"&ncap;\"], [0, \"&capand;\"], [0, \"&cupor;\"], [0, \"&cupcap;\"], [0, \"&capcup;\"], [0, \"&cupbrcap;\"], [0, \"&capbrcup;\"], [0, \"&cupcup;\"], [0, \"&capcap;\"], [0, \"&ccups;\"], [0, \"&ccaps;\"], [2, \"&ccupssm;\"], [2, \"&And;\"], [0, \"&Or;\"], [0, \"&andand;\"], [0, \"&oror;\"], [0, \"&orslope;\"], [0, \"&andslope;\"], [1, \"&andv;\"], [0, \"&orv;\"], [0, \"&andd;\"], [0, \"&ord;\"], [1, \"&wedbar;\"], [6, \"&sdote;\"], [3, \"&simdot;\"], [2, {\n  v: \"&congdot;\",\n  n: 824,\n  o: \"&ncongdot;\"\n}], [0, \"&easter;\"], [0, \"&apacir;\"], [0, {\n  v: \"&apE;\",\n  n: 824,\n  o: \"&napE;\"\n}], [0, \"&eplus;\"], [0, \"&pluse;\"], [0, \"&Esim;\"], [0, \"&Colone;\"], [0, \"&Equal;\"], [1, \"&ddotseq;\"], [0, \"&equivDD;\"], [0, \"&ltcir;\"], [0, \"&gtcir;\"], [0, \"&ltquest;\"], [0, \"&gtquest;\"], [0, {\n  v: \"&leqslant;\",\n  n: 824,\n  o: \"&nleqslant;\"\n}], [0, {\n  v: \"&geqslant;\",\n  n: 824,\n  o: \"&ngeqslant;\"\n}], [0, \"&lesdot;\"], [0, \"&gesdot;\"], [0, \"&lesdoto;\"], [0, \"&gesdoto;\"], [0, \"&lesdotor;\"], [0, \"&gesdotol;\"], [0, \"&lap;\"], [0, \"&gap;\"], [0, \"&lne;\"], [0, \"&gne;\"], [0, \"&lnap;\"], [0, \"&gnap;\"], [0, \"&lEg;\"], [0, \"&gEl;\"], [0, \"&lsime;\"], [0, \"&gsime;\"], [0, \"&lsimg;\"], [0, \"&gsiml;\"], [0, \"&lgE;\"], [0, \"&glE;\"], [0, \"&lesges;\"], [0, \"&gesles;\"], [0, \"&els;\"], [0, \"&egs;\"], [0, \"&elsdot;\"], [0, \"&egsdot;\"], [0, \"&el;\"], [0, \"&eg;\"], [2, \"&siml;\"], [0, \"&simg;\"], [0, \"&simlE;\"], [0, \"&simgE;\"], [0, {\n  v: \"&LessLess;\",\n  n: 824,\n  o: \"&NotNestedLessLess;\"\n}], [0, {\n  v: \"&GreaterGreater;\",\n  n: 824,\n  o: \"&NotNestedGreaterGreater;\"\n}], [1, \"&glj;\"], [0, \"&gla;\"], [0, \"&ltcc;\"], [0, \"&gtcc;\"], [0, \"&lescc;\"], [0, \"&gescc;\"], [0, \"&smt;\"], [0, \"&lat;\"], [0, {\n  v: \"&smte;\",\n  n: 65024,\n  o: \"&smtes;\"\n}], [0, {\n  v: \"&late;\",\n  n: 65024,\n  o: \"&lates;\"\n}], [0, \"&bumpE;\"], [0, {\n  v: \"&PrecedesEqual;\",\n  n: 824,\n  o: \"&NotPrecedesEqual;\"\n}], [0, {\n  v: \"&sce;\",\n  n: 824,\n  o: \"&NotSucceedsEqual;\"\n}], [2, \"&prE;\"], [0, \"&scE;\"], [0, \"&precneqq;\"], [0, \"&scnE;\"], [0, \"&prap;\"], [0, \"&scap;\"], [0, \"&precnapprox;\"], [0, \"&scnap;\"], [0, \"&Pr;\"], [0, \"&Sc;\"], [0, \"&subdot;\"], [0, \"&supdot;\"], [0, \"&subplus;\"], [0, \"&supplus;\"], [0, \"&submult;\"], [0, \"&supmult;\"], [0, \"&subedot;\"], [0, \"&supedot;\"], [0, {\n  v: \"&subE;\",\n  n: 824,\n  o: \"&nsubE;\"\n}], [0, {\n  v: \"&supE;\",\n  n: 824,\n  o: \"&nsupE;\"\n}], [0, \"&subsim;\"], [0, \"&supsim;\"], [2, {\n  v: \"&subnE;\",\n  n: 65024,\n  o: \"&varsubsetneqq;\"\n}], [0, {\n  v: \"&supnE;\",\n  n: 65024,\n  o: \"&varsupsetneqq;\"\n}], [2, \"&csub;\"], [0, \"&csup;\"], [0, \"&csube;\"], [0, \"&csupe;\"], [0, \"&subsup;\"], [0, \"&supsub;\"], [0, \"&subsub;\"], [0, \"&supsup;\"], [0, \"&suphsub;\"], [0, \"&supdsub;\"], [0, \"&forkv;\"], [0, \"&topfork;\"], [0, \"&mlcp;\"], [8, \"&Dashv;\"], [1, \"&Vdashl;\"], [0, \"&Barv;\"], [0, \"&vBar;\"], [0, \"&vBarv;\"], [1, \"&Vbar;\"], [0, \"&Not;\"], [0, \"&bNot;\"], [0, \"&rnmid;\"], [0, \"&cirmid;\"], [0, \"&midcir;\"], [0, \"&topcir;\"], [0, \"&nhpar;\"], [0, \"&parsim;\"], [9, {\n  v: \"&parsl;\",\n  n: 8421,\n  o: \"&nparsl;\"\n}], [44343, {\n  n: new Map(/* #__PURE__ */restoreDiff([[56476, \"&Ascr;\"], [1, \"&Cscr;\"], [0, \"&Dscr;\"], [2, \"&Gscr;\"], [2, \"&Jscr;\"], [0, \"&Kscr;\"], [2, \"&Nscr;\"], [0, \"&Oscr;\"], [0, \"&Pscr;\"], [0, \"&Qscr;\"], [1, \"&Sscr;\"], [0, \"&Tscr;\"], [0, \"&Uscr;\"], [0, \"&Vscr;\"], [0, \"&Wscr;\"], [0, \"&Xscr;\"], [0, \"&Yscr;\"], [0, \"&Zscr;\"], [0, \"&ascr;\"], [0, \"&bscr;\"], [0, \"&cscr;\"], [0, \"&dscr;\"], [1, \"&fscr;\"], [1, \"&hscr;\"], [0, \"&iscr;\"], [0, \"&jscr;\"], [0, \"&kscr;\"], [0, \"&lscr;\"], [0, \"&mscr;\"], [0, \"&nscr;\"], [1, \"&pscr;\"], [0, \"&qscr;\"], [0, \"&rscr;\"], [0, \"&sscr;\"], [0, \"&tscr;\"], [0, \"&uscr;\"], [0, \"&vscr;\"], [0, \"&wscr;\"], [0, \"&xscr;\"], [0, \"&yscr;\"], [0, \"&zscr;\"], [52, \"&Afr;\"], [0, \"&Bfr;\"], [1, \"&Dfr;\"], [0, \"&Efr;\"], [0, \"&Ffr;\"], [0, \"&Gfr;\"], [2, \"&Jfr;\"], [0, \"&Kfr;\"], [0, \"&Lfr;\"], [0, \"&Mfr;\"], [0, \"&Nfr;\"], [0, \"&Ofr;\"], [0, \"&Pfr;\"], [0, \"&Qfr;\"], [1, \"&Sfr;\"], [0, \"&Tfr;\"], [0, \"&Ufr;\"], [0, \"&Vfr;\"], [0, \"&Wfr;\"], [0, \"&Xfr;\"], [0, \"&Yfr;\"], [1, \"&afr;\"], [0, \"&bfr;\"], [0, \"&cfr;\"], [0, \"&dfr;\"], [0, \"&efr;\"], [0, \"&ffr;\"], [0, \"&gfr;\"], [0, \"&hfr;\"], [0, \"&ifr;\"], [0, \"&jfr;\"], [0, \"&kfr;\"], [0, \"&lfr;\"], [0, \"&mfr;\"], [0, \"&nfr;\"], [0, \"&ofr;\"], [0, \"&pfr;\"], [0, \"&qfr;\"], [0, \"&rfr;\"], [0, \"&sfr;\"], [0, \"&tfr;\"], [0, \"&ufr;\"], [0, \"&vfr;\"], [0, \"&wfr;\"], [0, \"&xfr;\"], [0, \"&yfr;\"], [0, \"&zfr;\"], [0, \"&Aopf;\"], [0, \"&Bopf;\"], [1, \"&Dopf;\"], [0, \"&Eopf;\"], [0, \"&Fopf;\"], [0, \"&Gopf;\"], [1, \"&Iopf;\"], [0, \"&Jopf;\"], [0, \"&Kopf;\"], [0, \"&Lopf;\"], [0, \"&Mopf;\"], [1, \"&Oopf;\"], [3, \"&Sopf;\"], [0, \"&Topf;\"], [0, \"&Uopf;\"], [0, \"&Vopf;\"], [0, \"&Wopf;\"], [0, \"&Xopf;\"], [0, \"&Yopf;\"], [1, \"&aopf;\"], [0, \"&bopf;\"], [0, \"&copf;\"], [0, \"&dopf;\"], [0, \"&eopf;\"], [0, \"&fopf;\"], [0, \"&gopf;\"], [0, \"&hopf;\"], [0, \"&iopf;\"], [0, \"&jopf;\"], [0, \"&kopf;\"], [0, \"&lopf;\"], [0, \"&mopf;\"], [0, \"&nopf;\"], [0, \"&oopf;\"], [0, \"&popf;\"], [0, \"&qopf;\"], [0, \"&ropf;\"], [0, \"&sopf;\"], [0, \"&topf;\"], [0, \"&uopf;\"], [0, \"&vopf;\"], [0, \"&wopf;\"], [0, \"&xopf;\"], [0, \"&yopf;\"], [0, \"&zopf;\"]]))\n}], [8906, \"&fflig;\"], [0, \"&filig;\"], [0, \"&fllig;\"], [0, \"&ffilig;\"], [0, \"&ffllig;\"]]));\n", "export const xmlReplacer = /[\"&'<>$\\x80-\\uFFFF]/g;\nconst xmlCodeMap = new Map([[34, \"&quot;\"], [38, \"&amp;\"], [39, \"&apos;\"], [60, \"&lt;\"], [62, \"&gt;\"]]);\n// For compatibility with node < 4, we wrap `codePointAt`\nexport const getCodePoint =\n// eslint-disable-next-line @typescript-eslint/no-unnecessary-condition\nString.prototype.codePointAt != null ? (str, index) => str.codePointAt(index) :\n// http://mathiasbynens.be/notes/javascript-encoding#surrogate-formulae\n(c, index) => (c.charCodeAt(index) & 0xfc00) === 0xd800 ? (c.charCodeAt(index) - 0xd800) * 0x400 + c.charCodeAt(index + 1) - 0xdc00 + 0x10000 : c.charCodeAt(index);\n/**\n * Encodes all non-ASCII characters, as well as characters not valid in XML\n * documents using XML entities.\n *\n * If a character has no equivalent entity, a\n * numeric hexadecimal reference (eg. `&#xfc;`) will be used.\n */\nexport function encodeXML(str) {\n  let ret = \"\";\n  let lastIdx = 0;\n  let match;\n  while ((match = xmlReplacer.exec(str)) !== null) {\n    const i = match.index;\n    const char = str.charCodeAt(i);\n    const next = xmlCodeMap.get(char);\n    if (next !== undefined) {\n      ret += str.substring(lastIdx, i) + next;\n      lastIdx = i + 1;\n    } else {\n      ret += `${str.substring(lastIdx, i)}&#x${getCodePoint(str, i).toString(16)};`;\n      // Increase by 1 if we have a surrogate pair\n      lastIdx = xmlReplacer.lastIndex += Number((char & 0xfc00) === 0xd800);\n    }\n  }\n  return ret + str.substr(lastIdx);\n}\n/**\n * Encodes all non-ASCII characters, as well as characters not valid in XML\n * documents using numeric hexadecimal reference (eg. `&#xfc;`).\n *\n * Have a look at `escapeUTF8` if you want a more concise output at the expense\n * of reduced transportability.\n *\n * @param data String to escape.\n */\nexport const escape = encodeXML;\n/**\n * Creates a function that escapes all characters matched by the given regular\n * expression using the given map of characters to escape to their entities.\n *\n * @param regex Regular expression to match characters to escape.\n * @param map Map of characters to escape to their entities.\n *\n * @returns Function that escapes all characters matched by the given regular\n * expression using the given map of characters to escape to their entities.\n */\nfunction getEscaper(regex, map) {\n  return function escape(data) {\n    let match;\n    let lastIdx = 0;\n    let result = \"\";\n    while (match = regex.exec(data)) {\n      if (lastIdx !== match.index) {\n        result += data.substring(lastIdx, match.index);\n      }\n      // We know that this character will be in the map.\n      result += map.get(match[0].charCodeAt(0));\n      // Every match will be of length 1\n      lastIdx = match.index + 1;\n    }\n    return result + data.substring(lastIdx);\n  };\n}\n/**\n * Encodes all characters not valid in XML documents using XML entities.\n *\n * Note that the output will be character-set dependent.\n *\n * @param data String to escape.\n */\nexport const escapeUTF8 = getEscaper(/[&<>'\"]/g, xmlCodeMap);\n/**\n * Encodes all characters that have to be escaped in HTML attributes,\n * following {@link https://html.spec.whatwg.org/multipage/parsing.html#escapingString}.\n *\n * @param data String to escape.\n */\nexport const escapeAttribute = getEscaper(/[\"&\\u00A0]/g, new Map([[34, \"&quot;\"], [38, \"&amp;\"], [160, \"&nbsp;\"]]));\n/**\n * Encodes all characters that have to be escaped in HTML text,\n * following {@link https://html.spec.whatwg.org/multipage/parsing.html#escapingString}.\n *\n * @param data String to escape.\n */\nexport const escapeText = getEscaper(/[&<>\\u00A0]/g, new Map([[38, \"&amp;\"], [60, \"&lt;\"], [62, \"&gt;\"], [160, \"&nbsp;\"]]));\n", "import { decodeXML, decodeHTML, DecodingMode } from \"./decode.js\";\nimport { encodeHTML, encodeNonAsciiHTML } from \"./encode.js\";\nimport { encodeXML, escapeUTF8, escapeAttribute, escapeText } from \"./escape.js\";\n/** The level of entities to support. */\nexport var EntityLevel;\n(function (EntityLevel) {\n  /** Support only XML entities. */\n  EntityLevel[EntityLevel[\"XML\"] = 0] = \"XML\";\n  /** Support HTML entities, which are a superset of XML entities. */\n  EntityLevel[EntityLevel[\"HTML\"] = 1] = \"HTML\";\n})(EntityLevel || (EntityLevel = {}));\nexport var EncodingMode;\n(function (EncodingMode) {\n  /**\n   * The output is UTF-8 encoded. Only characters that need escaping within\n   * XML will be escaped.\n   */\n  EncodingMode[EncodingMode[\"UTF8\"] = 0] = \"UTF8\";\n  /**\n   * The output consists only of ASCII characters. Characters that need\n   * escaping within HTML, and characters that aren't ASCII characters will\n   * be escaped.\n   */\n  EncodingMode[EncodingMode[\"ASCII\"] = 1] = \"ASCII\";\n  /**\n   * Encode all characters that have an equivalent entity, as well as all\n   * characters that are not ASCII characters.\n   */\n  EncodingMode[EncodingMode[\"Extensive\"] = 2] = \"Extensive\";\n  /**\n   * Encode all characters that have to be escaped in HTML attributes,\n   * following {@link https://html.spec.whatwg.org/multipage/parsing.html#escapingString}.\n   */\n  EncodingMode[EncodingMode[\"Attribute\"] = 3] = \"Attribute\";\n  /**\n   * Encode all characters that have to be escaped in HTML text,\n   * following {@link https://html.spec.whatwg.org/multipage/parsing.html#escapingString}.\n   */\n  EncodingMode[EncodingMode[\"Text\"] = 4] = \"Text\";\n})(EncodingMode || (EncodingMode = {}));\n/**\n * Decodes a string with entities.\n *\n * @param data String to decode.\n * @param options Decoding options.\n */\nexport function decode(data, options = EntityLevel.XML) {\n  const level = typeof options === \"number\" ? options : options.level;\n  if (level === EntityLevel.HTML) {\n    const mode = typeof options === \"object\" ? options.mode : undefined;\n    return decodeHTML(data, mode);\n  }\n  return decodeXML(data);\n}\n/**\n * Decodes a string with entities. Does not allow missing trailing semicolons for entities.\n *\n * @param data String to decode.\n * @param options Decoding options.\n * @deprecated Use `decode` with the `mode` set to `Strict`.\n */\nexport function decodeStrict(data, options = EntityLevel.XML) {\n  var _a;\n  const opts = typeof options === \"number\" ? {\n    level: options\n  } : options;\n  (_a = opts.mode) !== null && _a !== void 0 ? _a : opts.mode = DecodingMode.Strict;\n  return decode(data, opts);\n}\n/**\n * Encodes a string with entities.\n *\n * @param data String to encode.\n * @param options Encoding options.\n */\nexport function encode(data, options = EntityLevel.XML) {\n  const opts = typeof options === \"number\" ? {\n    level: options\n  } : options;\n  // Mode `UTF8` just escapes XML entities\n  if (opts.mode === EncodingMode.UTF8) return escapeUTF8(data);\n  if (opts.mode === EncodingMode.Attribute) return escapeAttribute(data);\n  if (opts.mode === EncodingMode.Text) return escapeText(data);\n  if (opts.level === EntityLevel.HTML) {\n    if (opts.mode === EncodingMode.ASCII) {\n      return encodeNonAsciiHTML(data);\n    }\n    return encodeHTML(data);\n  }\n  // ASCII and Extensive are equivalent\n  return encodeXML(data);\n}\nexport { encodeXML, escape, escapeUTF8, escapeAttribute, escapeText } from \"./escape.js\";\nexport { encodeHTML, encodeNonAsciiHTML,\n// Legacy aliases (deprecated)\nencodeHTML as encodeHTML4, encodeHTML as encodeHTML5 } from \"./encode.js\";\nexport { EntityDecoder, DecodingMode, decodeXML, decodeHTML, decodeHTMLStrict, decodeHTMLAttribute,\n// Legacy aliases (deprecated)\ndecodeHTML as decodeHTML4, decodeHTML as decodeHTML5, decodeHTMLStrict as decodeHTML4Strict, decodeHTMLStrict as decodeHTML5Strict, decodeXML as decodeXMLStrict } from \"./decode.js\";\n", "export const elementNames = new Map([\"altGlyph\", \"altGlyphDef\", \"altGlyphItem\", \"animateColor\", \"animateMotion\", \"animateTransform\", \"clipPath\", \"feBlend\", \"feColorMatrix\", \"feComponentTransfer\", \"feComposite\", \"feConvolveMatrix\", \"feDiffuseLighting\", \"feDisplacementMap\", \"feDistantLight\", \"feDropShadow\", \"feFlood\", \"feFuncA\", \"feFuncB\", \"feFuncG\", \"feFuncR\", \"feGaussianBlur\", \"feImage\", \"feMerge\", \"feMergeNode\", \"feMorphology\", \"feOffset\", \"fePointLight\", \"feSpecularLighting\", \"feSpotLight\", \"feTile\", \"feTurbulence\", \"foreignObject\", \"glyphRef\", \"linearGradient\", \"radialGradient\", \"textPath\"].map(val => [val.toLowerCase(), val]));\nexport const attributeNames = new Map([\"definitionURL\", \"attributeName\", \"attributeType\", \"baseFrequency\", \"baseProfile\", \"calcMode\", \"clipPathUnits\", \"diffuseConstant\", \"edgeMode\", \"filterUnits\", \"glyphRef\", \"gradientTransform\", \"gradientUnits\", \"kernelMatrix\", \"kernelUnitLength\", \"keyPoints\", \"keySplines\", \"keyTimes\", \"lengthAdjust\", \"limitingConeAngle\", \"markerHeight\", \"markerUnits\", \"markerWidth\", \"maskContentUnits\", \"maskUnits\", \"numOctaves\", \"pathLength\", \"patternContentUnits\", \"patternTransform\", \"patternUnits\", \"pointsAtX\", \"pointsAtY\", \"pointsAtZ\", \"preserveAlpha\", \"preserveAspectRatio\", \"primitiveUnits\", \"refX\", \"refY\", \"repeatCount\", \"repeatDur\", \"requiredExtensions\", \"requiredFeatures\", \"specularConstant\", \"specularExponent\", \"spreadMethod\", \"startOffset\", \"stdDeviation\", \"stitchTiles\", \"surfaceScale\", \"systemLanguage\", \"tableValues\", \"targetX\", \"targetY\", \"textLength\", \"viewBox\", \"viewTarget\", \"xChannelSelector\", \"yChannelSelector\", \"zoomAndPan\"].map(val => [val.toLowerCase(), val]));", "/*\n * Module dependencies\n */\nimport * as ElementType from \"domelementtype\";\nimport { encodeXML, escapeAttribute, escapeText } from \"entities\";\n/**\n * Mixed-case SVG and MathML tags & attributes\n * recognized by the HTML parser.\n *\n * @see https://html.spec.whatwg.org/multipage/parsing.html#parsing-main-inforeign\n */\nimport { elementNames, attributeNames } from \"./foreignNames.js\";\nconst unencodedElements = new Set([\"style\", \"script\", \"xmp\", \"iframe\", \"noembed\", \"noframes\", \"plaintext\", \"noscript\"]);\nfunction replaceQuotes(value) {\n  return value.replace(/\"/g, \"&quot;\");\n}\n/**\n * Format attributes\n */\nfunction formatAttributes(attributes, opts) {\n  var _a;\n  if (!attributes) return;\n  const encode = ((_a = opts.encodeEntities) !== null && _a !== void 0 ? _a : opts.decodeEntities) === false ? replaceQuotes : opts.xmlMode || opts.encodeEntities !== \"utf8\" ? encodeXML : escapeAttribute;\n  return Object.keys(attributes).map(key => {\n    var _a, _b;\n    const value = (_a = attributes[key]) !== null && _a !== void 0 ? _a : \"\";\n    if (opts.xmlMode === \"foreign\") {\n      /* Fix up mixed-case attribute names */\n      key = (_b = attributeNames.get(key)) !== null && _b !== void 0 ? _b : key;\n    }\n    if (!opts.emptyAttrs && !opts.xmlMode && value === \"\") {\n      return key;\n    }\n    return `${key}=\"${encode(value)}\"`;\n  }).join(\" \");\n}\n/**\n * Self-enclosing tags\n */\nconst singleTag = new Set([\"area\", \"base\", \"basefont\", \"br\", \"col\", \"command\", \"embed\", \"frame\", \"hr\", \"img\", \"input\", \"isindex\", \"keygen\", \"link\", \"meta\", \"param\", \"source\", \"track\", \"wbr\"]);\n/**\n * Renders a DOM node or an array of DOM nodes to a string.\n *\n * Can be thought of as the equivalent of the `outerHTML` of the passed node(s).\n *\n * @param node Node to be rendered.\n * @param options Changes serialization behavior\n */\nexport function render(node, options = {}) {\n  const nodes = \"length\" in node ? node : [node];\n  let output = \"\";\n  for (let i = 0; i < nodes.length; i++) {\n    output += renderNode(nodes[i], options);\n  }\n  return output;\n}\nexport default render;\nfunction renderNode(node, options) {\n  switch (node.type) {\n    case ElementType.Root:\n      return render(node.children, options);\n    // @ts-expect-error We don't use `Doctype` yet\n    case ElementType.Doctype:\n    case ElementType.Directive:\n      return renderDirective(node);\n    case ElementType.Comment:\n      return renderComment(node);\n    case ElementType.CDATA:\n      return renderCdata(node);\n    case ElementType.Script:\n    case ElementType.Style:\n    case ElementType.Tag:\n      return renderTag(node, options);\n    case ElementType.Text:\n      return renderText(node, options);\n  }\n}\nconst foreignModeIntegrationPoints = new Set([\"mi\", \"mo\", \"mn\", \"ms\", \"mtext\", \"annotation-xml\", \"foreignObject\", \"desc\", \"title\"]);\nconst foreignElements = new Set([\"svg\", \"math\"]);\nfunction renderTag(elem, opts) {\n  var _a;\n  // Handle SVG / MathML in HTML\n  if (opts.xmlMode === \"foreign\") {\n    /* Fix up mixed-case element names */\n    elem.name = (_a = elementNames.get(elem.name)) !== null && _a !== void 0 ? _a : elem.name;\n    /* Exit foreign mode at integration points */\n    if (elem.parent && foreignModeIntegrationPoints.has(elem.parent.name)) {\n      opts = {\n        ...opts,\n        xmlMode: false\n      };\n    }\n  }\n  if (!opts.xmlMode && foreignElements.has(elem.name)) {\n    opts = {\n      ...opts,\n      xmlMode: \"foreign\"\n    };\n  }\n  let tag = `<${elem.name}`;\n  const attribs = formatAttributes(elem.attribs, opts);\n  if (attribs) {\n    tag += ` ${attribs}`;\n  }\n  if (elem.children.length === 0 && (opts.xmlMode ?\n  // In XML mode or foreign mode, and user hasn't explicitly turned off self-closing tags\n  opts.selfClosingTags !== false :\n  // User explicitly asked for self-closing tags, even in HTML mode\n  opts.selfClosingTags && singleTag.has(elem.name))) {\n    if (!opts.xmlMode) tag += \" \";\n    tag += \"/>\";\n  } else {\n    tag += \">\";\n    if (elem.children.length > 0) {\n      tag += render(elem.children, opts);\n    }\n    if (opts.xmlMode || !singleTag.has(elem.name)) {\n      tag += `</${elem.name}>`;\n    }\n  }\n  return tag;\n}\nfunction renderDirective(elem) {\n  return `<${elem.data}>`;\n}\nfunction renderText(elem, opts) {\n  var _a;\n  let data = elem.data || \"\";\n  // If entities weren't decoded, no need to encode them back\n  if (((_a = opts.encodeEntities) !== null && _a !== void 0 ? _a : opts.decodeEntities) !== false && !(!opts.xmlMode && elem.parent && unencodedElements.has(elem.parent.name))) {\n    data = opts.xmlMode || opts.encodeEntities !== \"utf8\" ? encodeXML(data) : escapeText(data);\n  }\n  return data;\n}\nfunction renderCdata(elem) {\n  return `<![CDATA[${elem.children[0].data}]]>`;\n}\nfunction renderComment(elem) {\n  return `<!--${elem.data}-->`;\n}", "import { isTag, isCDATA, isText, hasChildren, isComment } from \"domhandler\";\nimport renderHTML from \"dom-serializer\";\nimport { ElementType } from \"domelementtype\";\n/**\n * @category Stringify\n * @deprecated Use the `dom-serializer` module directly.\n * @param node Node to get the outer HTML of.\n * @param options Options for serialization.\n * @returns `node`'s outer HTML.\n */\nexport function getOuterHTML(node, options) {\n  return renderHTML(node, options);\n}\n/**\n * @category Stringify\n * @deprecated Use the `dom-serializer` module directly.\n * @param node Node to get the inner HTML of.\n * @param options Options for serialization.\n * @returns `node`'s inner HTML.\n */\nexport function getInnerHTML(node, options) {\n  return hasChildren(node) ? node.children.map(node => getOuterHTML(node, options)).join(\"\") : \"\";\n}\n/**\n * Get a node's inner text. Same as `textContent`, but inserts newlines for `<br>` tags. Ignores comments.\n *\n * @category Stringify\n * @deprecated Use `textContent` instead.\n * @param node Node to get the inner text of.\n * @returns `node`'s inner text.\n */\nexport function getText(node) {\n  if (Array.isArray(node)) return node.map(getText).join(\"\");\n  if (isTag(node)) return node.name === \"br\" ? \"\\n\" : getText(node.children);\n  if (isCDATA(node)) return getText(node.children);\n  if (isText(node)) return node.data;\n  return \"\";\n}\n/**\n * Get a node's text content. Ignores comments.\n *\n * @category Stringify\n * @param node Node to get the text content of.\n * @returns `node`'s text content.\n * @see {@link https://developer.mozilla.org/en-US/docs/Web/API/Node/textContent}\n */\nexport function textContent(node) {\n  if (Array.isArray(node)) return node.map(textContent).join(\"\");\n  if (hasChildren(node) && !isComment(node)) {\n    return textContent(node.children);\n  }\n  if (isText(node)) return node.data;\n  return \"\";\n}\n/**\n * Get a node's inner text, ignoring `<script>` and `<style>` tags. Ignores comments.\n *\n * @category Stringify\n * @param node Node to get the inner text of.\n * @returns `node`'s inner text.\n * @see {@link https://developer.mozilla.org/en-US/docs/Web/API/Node/innerText}\n */\nexport function innerText(node) {\n  if (Array.isArray(node)) return node.map(innerText).join(\"\");\n  if (hasChildren(node) && (node.type === ElementType.Tag || isCDATA(node))) {\n    return innerText(node.children);\n  }\n  if (isText(node)) return node.data;\n  return \"\";\n}\n", "import { isTag, hasChildren } from \"domhandler\";\n/**\n * Get a node's children.\n *\n * @category Traversal\n * @param elem Node to get the children of.\n * @returns `elem`'s children, or an empty array.\n */\nexport function getChildren(elem) {\n  return hasChildren(elem) ? elem.children : [];\n}\n/**\n * Get a node's parent.\n *\n * @category Traversal\n * @param elem Node to get the parent of.\n * @returns `elem`'s parent node, or `null` if `elem` is a root node.\n */\nexport function getParent(elem) {\n  return elem.parent || null;\n}\n/**\n * Gets an elements siblings, including the element itself.\n *\n * Attempts to get the children through the element's parent first. If we don't\n * have a parent (the element is a root node), we walk the element's `prev` &\n * `next` to get all remaining nodes.\n *\n * @category Traversal\n * @param elem Element to get the siblings of.\n * @returns `elem`'s siblings, including `elem`.\n */\nexport function getSiblings(elem) {\n  const parent = getParent(elem);\n  if (parent != null) return getChildren(parent);\n  const siblings = [elem];\n  let {\n    prev,\n    next\n  } = elem;\n  while (prev != null) {\n    siblings.unshift(prev);\n    ({\n      prev\n    } = prev);\n  }\n  while (next != null) {\n    siblings.push(next);\n    ({\n      next\n    } = next);\n  }\n  return siblings;\n}\n/**\n * Gets an attribute from an element.\n *\n * @category Traversal\n * @param elem Element to check.\n * @param name Attribute name to retrieve.\n * @returns The element's attribute value, or `undefined`.\n */\nexport function getAttributeValue(elem, name) {\n  var _a;\n  return (_a = elem.attribs) === null || _a === void 0 ? void 0 : _a[name];\n}\n/**\n * Checks whether an element has an attribute.\n *\n * @category Traversal\n * @param elem Element to check.\n * @param name Attribute name to look for.\n * @returns Returns whether `elem` has the attribute `name`.\n */\nexport function hasAttrib(elem, name) {\n  return elem.attribs != null && Object.prototype.hasOwnProperty.call(elem.attribs, name) && elem.attribs[name] != null;\n}\n/**\n * Get the tag name of an element.\n *\n * @category Traversal\n * @param elem The element to get the name for.\n * @returns The tag name of `elem`.\n */\nexport function getName(elem) {\n  return elem.name;\n}\n/**\n * Returns the next element sibling of a node.\n *\n * @category Traversal\n * @param elem The element to get the next sibling of.\n * @returns `elem`'s next sibling that is a tag, or `null` if there is no next\n * sibling.\n */\nexport function nextElementSibling(elem) {\n  let {\n    next\n  } = elem;\n  while (next !== null && !isTag(next)) ({\n    next\n  } = next);\n  return next;\n}\n/**\n * Returns the previous element sibling of a node.\n *\n * @category Traversal\n * @param elem The element to get the previous sibling of.\n * @returns `elem`'s previous sibling that is a tag, or `null` if there is no\n * previous sibling.\n */\nexport function prevElementSibling(elem) {\n  let {\n    prev\n  } = elem;\n  while (prev !== null && !isTag(prev)) ({\n    prev\n  } = prev);\n  return prev;\n}\n", "/**\n * Remove an element from the dom\n *\n * @category Manipulation\n * @param elem The element to be removed\n */\nexport function removeElement(elem) {\n  if (elem.prev) elem.prev.next = elem.next;\n  if (elem.next) elem.next.prev = elem.prev;\n  if (elem.parent) {\n    const childs = elem.parent.children;\n    const childsIndex = childs.lastIndexOf(elem);\n    if (childsIndex >= 0) {\n      childs.splice(childsIndex, 1);\n    }\n  }\n  elem.next = null;\n  elem.prev = null;\n  elem.parent = null;\n}\n/**\n * Replace an element in the dom\n *\n * @category Manipulation\n * @param elem The element to be replaced\n * @param replacement The element to be added\n */\nexport function replaceElement(elem, replacement) {\n  const prev = replacement.prev = elem.prev;\n  if (prev) {\n    prev.next = replacement;\n  }\n  const next = replacement.next = elem.next;\n  if (next) {\n    next.prev = replacement;\n  }\n  const parent = replacement.parent = elem.parent;\n  if (parent) {\n    const childs = parent.children;\n    childs[childs.lastIndexOf(elem)] = replacement;\n    elem.parent = null;\n  }\n}\n/**\n * Append a child to an element.\n *\n * @category Manipulation\n * @param parent The element to append to.\n * @param child The element to be added as a child.\n */\nexport function appendChild(parent, child) {\n  removeElement(child);\n  child.next = null;\n  child.parent = parent;\n  if (parent.children.push(child) > 1) {\n    const sibling = parent.children[parent.children.length - 2];\n    sibling.next = child;\n    child.prev = sibling;\n  } else {\n    child.prev = null;\n  }\n}\n/**\n * Append an element after another.\n *\n * @category Manipulation\n * @param elem The element to append after.\n * @param next The element be added.\n */\nexport function append(elem, next) {\n  removeElement(next);\n  const {\n    parent\n  } = elem;\n  const currNext = elem.next;\n  next.next = currNext;\n  next.prev = elem;\n  elem.next = next;\n  next.parent = parent;\n  if (currNext) {\n    currNext.prev = next;\n    if (parent) {\n      const childs = parent.children;\n      childs.splice(childs.lastIndexOf(currNext), 0, next);\n    }\n  } else if (parent) {\n    parent.children.push(next);\n  }\n}\n/**\n * Prepend a child to an element.\n *\n * @category Manipulation\n * @param parent The element to prepend before.\n * @param child The element to be added as a child.\n */\nexport function prependChild(parent, child) {\n  removeElement(child);\n  child.parent = parent;\n  child.prev = null;\n  if (parent.children.unshift(child) !== 1) {\n    const sibling = parent.children[1];\n    sibling.prev = child;\n    child.next = sibling;\n  } else {\n    child.next = null;\n  }\n}\n/**\n * Prepend an element before another.\n *\n * @category Manipulation\n * @param elem The element to prepend before.\n * @param prev The element be added.\n */\nexport function prepend(elem, prev) {\n  removeElement(prev);\n  const {\n    parent\n  } = elem;\n  if (parent) {\n    const childs = parent.children;\n    childs.splice(childs.indexOf(elem), 0, prev);\n  }\n  if (elem.prev) {\n    elem.prev.next = prev;\n  }\n  prev.parent = parent;\n  prev.prev = elem.prev;\n  prev.next = elem;\n  elem.prev = prev;\n}\n", "import { isTag, hasChildren } from \"domhandler\";\n/**\n * Search a node and its children for nodes passing a test function. If `node` is not an array, it will be wrapped in one.\n *\n * @category Querying\n * @param test Function to test nodes on.\n * @param node Node to search. Will be included in the result set if it matches.\n * @param recurse Also consider child nodes.\n * @param limit Maximum number of nodes to return.\n * @returns All nodes passing `test`.\n */\nexport function filter(test, node, recurse = true, limit = Infinity) {\n  return find(test, Array.isArray(node) ? node : [node], recurse, limit);\n}\n/**\n * Search an array of nodes and their children for nodes passing a test function.\n *\n * @category Querying\n * @param test Function to test nodes on.\n * @param nodes Array of nodes to search.\n * @param recurse Also consider child nodes.\n * @param limit Maximum number of nodes to return.\n * @returns All nodes passing `test`.\n */\nexport function find(test, nodes, recurse, limit) {\n  const result = [];\n  /** Stack of the arrays we are looking at. */\n  const nodeStack = [nodes];\n  /** Stack of the indices within the arrays. */\n  const indexStack = [0];\n  for (;;) {\n    // First, check if the current array has any more elements to look at.\n    if (indexStack[0] >= nodeStack[0].length) {\n      // If we have no more arrays to look at, we are done.\n      if (indexStack.length === 1) {\n        return result;\n      }\n      // Otherwise, remove the current array from the stack.\n      nodeStack.shift();\n      indexStack.shift();\n      // Loop back to the start to continue with the next array.\n      continue;\n    }\n    const elem = nodeStack[0][indexStack[0]++];\n    if (test(elem)) {\n      result.push(elem);\n      if (--limit <= 0) return result;\n    }\n    if (recurse && hasChildren(elem) && elem.children.length > 0) {\n      /*\n       * Add the children to the stack. We are depth-first, so this is\n       * the next array we look at.\n       */\n      indexStack.unshift(0);\n      nodeStack.unshift(elem.children);\n    }\n  }\n}\n/**\n * Finds the first element inside of an array that matches a test function. This is an alias for `Array.prototype.find`.\n *\n * @category Querying\n * @param test Function to test nodes on.\n * @param nodes Array of nodes to search.\n * @returns The first node in the array that passes `test`.\n * @deprecated Use `Array.prototype.find` directly.\n */\nexport function findOneChild(test, nodes) {\n  return nodes.find(test);\n}\n/**\n * Finds one element in a tree that passes a test.\n *\n * @category Querying\n * @param test Function to test nodes on.\n * @param nodes Node or array of nodes to search.\n * @param recurse Also consider child nodes.\n * @returns The first node that passes `test`.\n */\nexport function findOne(test, nodes, recurse = true) {\n  let elem = null;\n  for (let i = 0; i < nodes.length && !elem; i++) {\n    const node = nodes[i];\n    if (!isTag(node)) {\n      continue;\n    } else if (test(node)) {\n      elem = node;\n    } else if (recurse && node.children.length > 0) {\n      elem = findOne(test, node.children, true);\n    }\n  }\n  return elem;\n}\n/**\n * Checks if a tree of nodes contains at least one node passing a test.\n *\n * @category Querying\n * @param test Function to test nodes on.\n * @param nodes Array of nodes to search.\n * @returns Whether a tree of nodes contains at least one node passing the test.\n */\nexport function existsOne(test, nodes) {\n  return nodes.some(checked => isTag(checked) && (test(checked) || existsOne(test, checked.children)));\n}\n/**\n * Search an array of nodes and their children for elements passing a test function.\n *\n * Same as `find`, but limited to elements and with less options, leading to reduced complexity.\n *\n * @category Querying\n * @param test Function to test nodes on.\n * @param nodes Array of nodes to search.\n * @returns All nodes passing `test`.\n */\nexport function findAll(test, nodes) {\n  const result = [];\n  const nodeStack = [nodes];\n  const indexStack = [0];\n  for (;;) {\n    if (indexStack[0] >= nodeStack[0].length) {\n      if (nodeStack.length === 1) {\n        return result;\n      }\n      // Otherwise, remove the current array from the stack.\n      nodeStack.shift();\n      indexStack.shift();\n      // Loop back to the start to continue with the next array.\n      continue;\n    }\n    const elem = nodeStack[0][indexStack[0]++];\n    if (!isTag(elem)) continue;\n    if (test(elem)) result.push(elem);\n    if (elem.children.length > 0) {\n      indexStack.unshift(0);\n      nodeStack.unshift(elem.children);\n    }\n  }\n}\n", "import { isTag, isText } from \"domhandler\";\nimport { filter, findOne } from \"./querying.js\";\n/**\n * A map of functions to check nodes against.\n */\nconst Checks = {\n  tag_name(name) {\n    if (typeof name === \"function\") {\n      return elem => isTag(elem) && name(elem.name);\n    } else if (name === \"*\") {\n      return isTag;\n    }\n    return elem => isTag(elem) && elem.name === name;\n  },\n  tag_type(type) {\n    if (typeof type === \"function\") {\n      return elem => type(elem.type);\n    }\n    return elem => elem.type === type;\n  },\n  tag_contains(data) {\n    if (typeof data === \"function\") {\n      return elem => isText(elem) && data(elem.data);\n    }\n    return elem => isText(elem) && elem.data === data;\n  }\n};\n/**\n * Returns a function to check whether a node has an attribute with a particular\n * value.\n *\n * @param attrib Attribute to check.\n * @param value Attribute value to look for.\n * @returns A function to check whether the a node has an attribute with a\n *   particular value.\n */\nfunction getAttribCheck(attrib, value) {\n  if (typeof value === \"function\") {\n    return elem => isTag(elem) && value(elem.attribs[attrib]);\n  }\n  return elem => isTag(elem) && elem.attribs[attrib] === value;\n}\n/**\n * Returns a function that returns `true` if either of the input functions\n * returns `true` for a node.\n *\n * @param a First function to combine.\n * @param b Second function to combine.\n * @returns A function taking a node and returning `true` if either of the input\n *   functions returns `true` for the node.\n */\nfunction combineFuncs(a, b) {\n  return elem => a(elem) || b(elem);\n}\n/**\n * Returns a function that executes all checks in `options` and returns `true`\n * if any of them match a node.\n *\n * @param options An object describing nodes to look for.\n * @returns A function that executes all checks in `options` and returns `true`\n *   if any of them match a node.\n */\nfunction compileTest(options) {\n  const funcs = Object.keys(options).map(key => {\n    const value = options[key];\n    return Object.prototype.hasOwnProperty.call(Checks, key) ? Checks[key](value) : getAttribCheck(key, value);\n  });\n  return funcs.length === 0 ? null : funcs.reduce(combineFuncs);\n}\n/**\n * Checks whether a node matches the description in `options`.\n *\n * @category Legacy Query Functions\n * @param options An object describing nodes to look for.\n * @param node The element to test.\n * @returns Whether the element matches the description in `options`.\n */\nexport function testElement(options, node) {\n  const test = compileTest(options);\n  return test ? test(node) : true;\n}\n/**\n * Returns all nodes that match `options`.\n *\n * @category Legacy Query Functions\n * @param options An object describing nodes to look for.\n * @param nodes Nodes to search through.\n * @param recurse Also consider child nodes.\n * @param limit Maximum number of nodes to return.\n * @returns All nodes that match `options`.\n */\nexport function getElements(options, nodes, recurse, limit = Infinity) {\n  const test = compileTest(options);\n  return test ? filter(test, nodes, recurse, limit) : [];\n}\n/**\n * Returns the node with the supplied ID.\n *\n * @category Legacy Query Functions\n * @param id The unique ID attribute value to look for.\n * @param nodes Nodes to search through.\n * @param recurse Also consider child nodes.\n * @returns The node with the supplied ID.\n */\nexport function getElementById(id, nodes, recurse = true) {\n  if (!Array.isArray(nodes)) nodes = [nodes];\n  return findOne(getAttribCheck(\"id\", id), nodes, recurse);\n}\n/**\n * Returns all nodes with the supplied `tagName`.\n *\n * @category Legacy Query Functions\n * @param tagName Tag name to search for.\n * @param nodes Nodes to search through.\n * @param recurse Also consider child nodes.\n * @param limit Maximum number of nodes to return.\n * @returns All nodes with the supplied `tagName`.\n */\nexport function getElementsByTagName(tagName, nodes, recurse = true, limit = Infinity) {\n  return filter(Checks[\"tag_name\"](tagName), nodes, recurse, limit);\n}\n/**\n * Returns all nodes with the supplied `type`.\n *\n * @category Legacy Query Functions\n * @param type Element type to look for.\n * @param nodes Nodes to search through.\n * @param recurse Also consider child nodes.\n * @param limit Maximum number of nodes to return.\n * @returns All nodes with the supplied `type`.\n */\nexport function getElementsByTagType(type, nodes, recurse = true, limit = Infinity) {\n  return filter(Checks[\"tag_type\"](type), nodes, recurse, limit);\n}\n", "import { hasChildren } from \"domhandler\";\n/**\n * Given an array of nodes, remove any member that is contained by another\n * member.\n *\n * @category Helpers\n * @param nodes Nodes to filter.\n * @returns Remaining nodes that aren't contained by other nodes.\n */\nexport function removeSubsets(nodes) {\n  let idx = nodes.length;\n  /*\n   * Check if each node (or one of its ancestors) is already contained in the\n   * array.\n   */\n  while (--idx >= 0) {\n    const node = nodes[idx];\n    /*\n     * Remove the node if it is not unique.\n     * We are going through the array from the end, so we only\n     * have to check nodes that preceed the node under consideration in the array.\n     */\n    if (idx > 0 && nodes.lastIndexOf(node, idx - 1) >= 0) {\n      nodes.splice(idx, 1);\n      continue;\n    }\n    for (let ancestor = node.parent; ancestor; ancestor = ancestor.parent) {\n      if (nodes.includes(ancestor)) {\n        nodes.splice(idx, 1);\n        break;\n      }\n    }\n  }\n  return nodes;\n}\n/**\n * @category Helpers\n * @see {@link http://dom.spec.whatwg.org/#dom-node-comparedocumentposition}\n */\nexport var DocumentPosition;\n(function (DocumentPosition) {\n  DocumentPosition[DocumentPosition[\"DISCONNECTED\"] = 1] = \"DISCONNECTED\";\n  DocumentPosition[DocumentPosition[\"PRECEDING\"] = 2] = \"PRECEDING\";\n  DocumentPosition[DocumentPosition[\"FOLLOWING\"] = 4] = \"FOLLOWING\";\n  DocumentPosition[DocumentPosition[\"CONTAINS\"] = 8] = \"CONTAINS\";\n  DocumentPosition[DocumentPosition[\"CONTAINED_BY\"] = 16] = \"CONTAINED_BY\";\n})(DocumentPosition || (DocumentPosition = {}));\n/**\n * Compare the position of one node against another node in any other document,\n * returning a bitmask with the values from {@link DocumentPosition}.\n *\n * Document order:\n * > There is an ordering, document order, defined on all the nodes in the\n * > document corresponding to the order in which the first character of the\n * > XML representation of each node occurs in the XML representation of the\n * > document after expansion of general entities. Thus, the document element\n * > node will be the first node. Element nodes occur before their children.\n * > Thus, document order orders element nodes in order of the occurrence of\n * > their start-tag in the XML (after expansion of entities). The attribute\n * > nodes of an element occur after the element and before its children. The\n * > relative order of attribute nodes is implementation-dependent.\n *\n * Source:\n * http://www.w3.org/TR/DOM-Level-3-Core/glossary.html#dt-document-order\n *\n * @category Helpers\n * @param nodeA The first node to use in the comparison\n * @param nodeB The second node to use in the comparison\n * @returns A bitmask describing the input nodes' relative position.\n *\n * See http://dom.spec.whatwg.org/#dom-node-comparedocumentposition for\n * a description of these values.\n */\nexport function compareDocumentPosition(nodeA, nodeB) {\n  const aParents = [];\n  const bParents = [];\n  if (nodeA === nodeB) {\n    return 0;\n  }\n  let current = hasChildren(nodeA) ? nodeA : nodeA.parent;\n  while (current) {\n    aParents.unshift(current);\n    current = current.parent;\n  }\n  current = hasChildren(nodeB) ? nodeB : nodeB.parent;\n  while (current) {\n    bParents.unshift(current);\n    current = current.parent;\n  }\n  const maxIdx = Math.min(aParents.length, bParents.length);\n  let idx = 0;\n  while (idx < maxIdx && aParents[idx] === bParents[idx]) {\n    idx++;\n  }\n  if (idx === 0) {\n    return DocumentPosition.DISCONNECTED;\n  }\n  const sharedParent = aParents[idx - 1];\n  const siblings = sharedParent.children;\n  const aSibling = aParents[idx];\n  const bSibling = bParents[idx];\n  if (siblings.indexOf(aSibling) > siblings.indexOf(bSibling)) {\n    if (sharedParent === nodeB) {\n      return DocumentPosition.FOLLOWING | DocumentPosition.CONTAINED_BY;\n    }\n    return DocumentPosition.FOLLOWING;\n  }\n  if (sharedParent === nodeA) {\n    return DocumentPosition.PRECEDING | DocumentPosition.CONTAINS;\n  }\n  return DocumentPosition.PRECEDING;\n}\n/**\n * Sort an array of nodes based on their relative position in the document,\n * removing any duplicate nodes. If the array contains nodes that do not belong\n * to the same document, sort order is unspecified.\n *\n * @category Helpers\n * @param nodes Array of DOM nodes.\n * @returns Collection of unique nodes, sorted in document order.\n */\nexport function uniqueSort(nodes) {\n  nodes = nodes.filter((node, i, arr) => !arr.includes(node, i + 1));\n  nodes.sort((a, b) => {\n    const relative = compareDocumentPosition(a, b);\n    if (relative & DocumentPosition.PRECEDING) {\n      return -1;\n    } else if (relative & DocumentPosition.FOLLOWING) {\n      return 1;\n    }\n    return 0;\n  });\n  return nodes;\n}\n", "import { textContent } from \"./stringify.js\";\nimport { getElementsByTagName } from \"./legacy.js\";\n/**\n * Get the feed object from the root of a DOM tree.\n *\n * @category Feeds\n * @param doc - The DOM to to extract the feed from.\n * @returns The feed.\n */\nexport function getFeed(doc) {\n  const feedRoot = getOneElement(isValidFeed, doc);\n  return !feedRoot ? null : feedRoot.name === \"feed\" ? getAtomFeed(feedRoot) : getRssFeed(feedRoot);\n}\n/**\n * Parse an Atom feed.\n *\n * @param feedRoot The root of the feed.\n * @returns The parsed feed.\n */\nfunction getAtomFeed(feedRoot) {\n  var _a;\n  const childs = feedRoot.children;\n  const feed = {\n    type: \"atom\",\n    items: getElementsByTagName(\"entry\", childs).map(item => {\n      var _a;\n      const {\n        children\n      } = item;\n      const entry = {\n        media: getMediaElements(children)\n      };\n      addConditionally(entry, \"id\", \"id\", children);\n      addConditionally(entry, \"title\", \"title\", children);\n      const href = (_a = getOneElement(\"link\", children)) === null || _a === void 0 ? void 0 : _a.attribs[\"href\"];\n      if (href) {\n        entry.link = href;\n      }\n      const description = fetch(\"summary\", children) || fetch(\"content\", children);\n      if (description) {\n        entry.description = description;\n      }\n      const pubDate = fetch(\"updated\", children);\n      if (pubDate) {\n        entry.pubDate = new Date(pubDate);\n      }\n      return entry;\n    })\n  };\n  addConditionally(feed, \"id\", \"id\", childs);\n  addConditionally(feed, \"title\", \"title\", childs);\n  const href = (_a = getOneElement(\"link\", childs)) === null || _a === void 0 ? void 0 : _a.attribs[\"href\"];\n  if (href) {\n    feed.link = href;\n  }\n  addConditionally(feed, \"description\", \"subtitle\", childs);\n  const updated = fetch(\"updated\", childs);\n  if (updated) {\n    feed.updated = new Date(updated);\n  }\n  addConditionally(feed, \"author\", \"email\", childs, true);\n  return feed;\n}\n/**\n * Parse a RSS feed.\n *\n * @param feedRoot The root of the feed.\n * @returns The parsed feed.\n */\nfunction getRssFeed(feedRoot) {\n  var _a, _b;\n  const childs = (_b = (_a = getOneElement(\"channel\", feedRoot.children)) === null || _a === void 0 ? void 0 : _a.children) !== null && _b !== void 0 ? _b : [];\n  const feed = {\n    type: feedRoot.name.substr(0, 3),\n    id: \"\",\n    items: getElementsByTagName(\"item\", feedRoot.children).map(item => {\n      const {\n        children\n      } = item;\n      const entry = {\n        media: getMediaElements(children)\n      };\n      addConditionally(entry, \"id\", \"guid\", children);\n      addConditionally(entry, \"title\", \"title\", children);\n      addConditionally(entry, \"link\", \"link\", children);\n      addConditionally(entry, \"description\", \"description\", children);\n      const pubDate = fetch(\"pubDate\", children) || fetch(\"dc:date\", children);\n      if (pubDate) entry.pubDate = new Date(pubDate);\n      return entry;\n    })\n  };\n  addConditionally(feed, \"title\", \"title\", childs);\n  addConditionally(feed, \"link\", \"link\", childs);\n  addConditionally(feed, \"description\", \"description\", childs);\n  const updated = fetch(\"lastBuildDate\", childs);\n  if (updated) {\n    feed.updated = new Date(updated);\n  }\n  addConditionally(feed, \"author\", \"managingEditor\", childs, true);\n  return feed;\n}\nconst MEDIA_KEYS_STRING = [\"url\", \"type\", \"lang\"];\nconst MEDIA_KEYS_INT = [\"fileSize\", \"bitrate\", \"framerate\", \"samplingrate\", \"channels\", \"duration\", \"height\", \"width\"];\n/**\n * Get all media elements of a feed item.\n *\n * @param where Nodes to search in.\n * @returns Media elements.\n */\nfunction getMediaElements(where) {\n  return getElementsByTagName(\"media:content\", where).map(elem => {\n    const {\n      attribs\n    } = elem;\n    const media = {\n      medium: attribs[\"medium\"],\n      isDefault: !!attribs[\"isDefault\"]\n    };\n    for (const attrib of MEDIA_KEYS_STRING) {\n      if (attribs[attrib]) {\n        media[attrib] = attribs[attrib];\n      }\n    }\n    for (const attrib of MEDIA_KEYS_INT) {\n      if (attribs[attrib]) {\n        media[attrib] = parseInt(attribs[attrib], 10);\n      }\n    }\n    if (attribs[\"expression\"]) {\n      media.expression = attribs[\"expression\"];\n    }\n    return media;\n  });\n}\n/**\n * Get one element by tag name.\n *\n * @param tagName Tag name to look for\n * @param node Node to search in\n * @returns The element or null\n */\nfunction getOneElement(tagName, node) {\n  return getElementsByTagName(tagName, node, true, 1)[0];\n}\n/**\n * Get the text content of an element with a certain tag name.\n *\n * @param tagName Tag name to look for.\n * @param where Node to search in.\n * @param recurse Whether to recurse into child nodes.\n * @returns The text content of the element.\n */\nfunction fetch(tagName, where, recurse = false) {\n  return textContent(getElementsByTagName(tagName, where, recurse, 1)).trim();\n}\n/**\n * Adds a property to an object if it has a value.\n *\n * @param obj Object to be extended\n * @param prop Property name\n * @param tagName Tag name that contains the conditionally added property\n * @param where Element to search for the property\n * @param recurse Whether to recurse into child nodes.\n */\nfunction addConditionally(obj, prop, tagName, where, recurse = false) {\n  const val = fetch(tagName, where, recurse);\n  if (val) obj[prop] = val;\n}\n/**\n * Checks if an element is a feed root node.\n *\n * @param value The name of the element to check.\n * @returns Whether an element is a feed root node.\n */\nfunction isValidFeed(value) {\n  return value === \"rss\" || value === \"feed\" || value === \"rdf:RDF\";\n}\n", "const defaultOpts = {\n  _useHtmlParser2: false\n};\n/**\n * Flatten the options for Cheerio.\n *\n * This will set `_useHtmlParser2` to true if `xml` is set to true.\n *\n * @param options - The options to flatten.\n * @param baseOptions - The base options to use.\n * @returns The flattened options.\n */\nexport function flattenOptions(options, baseOptions) {\n  if (!options) {\n    return baseOptions !== null && baseOptions !== void 0 ? baseOptions : defaultOpts;\n  }\n  const opts = {\n    _useHtmlParser2: !!options.xmlMode,\n    ...baseOptions,\n    ...options\n  };\n  if (options.xml) {\n    opts._useHtmlParser2 = true;\n    opts.xmlMode = true;\n    if (options.xml !== true) {\n      Object.assign(opts, options.xml);\n    }\n  } else if (options.xmlMode) {\n    opts._useHtmlParser2 = true;\n  }\n  return opts;\n}\n", "/**\n * Methods for getting and modifying attributes.\n *\n * @module cheerio/attributes\n */\nimport { text } from '../static.js';\nimport { domEach, camelCase, cssCase } from '../utils.js';\nimport { isTag } from 'domhandler';\nimport { innerText, textContent } from 'domutils';\nconst hasOwn = Object.prototype.hasOwnProperty;\nconst rspace = /\\s+/;\nconst dataAttrPrefix = 'data-';\n// Attributes that are booleans\nconst rboolean = /^(?:autofocus|autoplay|async|checked|controls|defer|disabled|hidden|loop|multiple|open|readonly|required|scoped|selected)$/i;\n// Matches strings that look like JSON objects or arrays\nconst rbrace = /^{[^]*}$|^\\[[^]*]$/;\nfunction getAttr(elem, name, xmlMode) {\n  var _a;\n  if (!elem || !isTag(elem)) return undefined;\n  (_a = elem.attribs) !== null && _a !== void 0 ? _a : elem.attribs = {};\n  // Return the entire attribs object if no attribute specified\n  if (!name) {\n    return elem.attribs;\n  }\n  if (hasOwn.call(elem.attribs, name)) {\n    // Get the (decoded) attribute\n    return !xmlMode && rboolean.test(name) ? name : elem.attribs[name];\n  }\n  // Mimic the DOM and return text content as value for `option's`\n  if (elem.name === 'option' && name === 'value') {\n    return text(elem.children);\n  }\n  // Mimic DOM with default value for radios/checkboxes\n  if (elem.name === 'input' && (elem.attribs['type'] === 'radio' || elem.attribs['type'] === 'checkbox') && name === 'value') {\n    return 'on';\n  }\n  return undefined;\n}\n/**\n * Sets the value of an attribute. The attribute will be deleted if the value is\n * `null`.\n *\n * @private\n * @param el - The element to set the attribute on.\n * @param name - The attribute's name.\n * @param value - The attribute's value.\n */\nfunction setAttr(el, name, value) {\n  if (value === null) {\n    removeAttribute(el, name);\n  } else {\n    el.attribs[name] = `${value}`;\n  }\n}\nexport function attr(name, value) {\n  // Set the value (with attr map support)\n  if (typeof name === 'object' || value !== undefined) {\n    if (typeof value === 'function') {\n      if (typeof name !== 'string') {\n        {\n          throw new Error('Bad combination of arguments.');\n        }\n      }\n      return domEach(this, (el, i) => {\n        if (isTag(el)) setAttr(el, name, value.call(el, i, el.attribs[name]));\n      });\n    }\n    return domEach(this, el => {\n      if (!isTag(el)) return;\n      if (typeof name === 'object') {\n        for (const objName of Object.keys(name)) {\n          const objValue = name[objName];\n          setAttr(el, objName, objValue);\n        }\n      } else {\n        setAttr(el, name, value);\n      }\n    });\n  }\n  return arguments.length > 1 ? this : getAttr(this[0], name, this.options.xmlMode);\n}\n/**\n * Gets a node's prop.\n *\n * @private\n * @category Attributes\n * @param el - Element to get the prop of.\n * @param name - Name of the prop.\n * @param xmlMode - Disable handling of special HTML attributes.\n * @returns The prop's value.\n */\nfunction getProp(el, name, xmlMode) {\n  return name in el ?\n  // @ts-expect-error TS doesn't like us accessing the value directly here.\n  el[name] : !xmlMode && rboolean.test(name) ? getAttr(el, name, false) !== undefined : getAttr(el, name, xmlMode);\n}\n/**\n * Sets the value of a prop.\n *\n * @private\n * @param el - The element to set the prop on.\n * @param name - The prop's name.\n * @param value - The prop's value.\n * @param xmlMode - Disable handling of special HTML attributes.\n */\nfunction setProp(el, name, value, xmlMode) {\n  if (name in el) {\n    // @ts-expect-error Overriding value\n    el[name] = value;\n  } else {\n    setAttr(el, name, !xmlMode && rboolean.test(name) ? value ? '' : null : `${value}`);\n  }\n}\nexport function prop(name, value) {\n  var _a;\n  if (typeof name === 'string' && value === undefined) {\n    const el = this[0];\n    if (!el || !isTag(el)) return undefined;\n    switch (name) {\n      case 'style':\n        {\n          const property = this.css();\n          const keys = Object.keys(property);\n          for (let i = 0; i < keys.length; i++) {\n            property[i] = keys[i];\n          }\n          property.length = keys.length;\n          return property;\n        }\n      case 'tagName':\n      case 'nodeName':\n        {\n          return el.name.toUpperCase();\n        }\n      case 'href':\n      case 'src':\n        {\n          const prop = (_a = el.attribs) === null || _a === void 0 ? void 0 : _a[name];\n          if (typeof URL !== 'undefined' && (name === 'href' && (el.tagName === 'a' || el.tagName === 'link') || name === 'src' && (el.tagName === 'img' || el.tagName === 'iframe' || el.tagName === 'audio' || el.tagName === 'video' || el.tagName === 'source')) && prop !== undefined && this.options.baseURI) {\n            return new URL(prop, this.options.baseURI).href;\n          }\n          return prop;\n        }\n      case 'innerText':\n        {\n          return innerText(el);\n        }\n      case 'textContent':\n        {\n          return textContent(el);\n        }\n      case 'outerHTML':\n        {\n          return this.clone().wrap('<container />').parent().html();\n        }\n      case 'innerHTML':\n        {\n          return this.html();\n        }\n      default:\n        {\n          return getProp(el, name, this.options.xmlMode);\n        }\n    }\n  }\n  if (typeof name === 'object' || value !== undefined) {\n    if (typeof value === 'function') {\n      if (typeof name === 'object') {\n        throw new TypeError('Bad combination of arguments.');\n      }\n      return domEach(this, (el, i) => {\n        if (isTag(el)) {\n          setProp(el, name, value.call(el, i, getProp(el, name, this.options.xmlMode)), this.options.xmlMode);\n        }\n      });\n    }\n    return domEach(this, el => {\n      if (!isTag(el)) return;\n      if (typeof name === 'object') {\n        for (const key of Object.keys(name)) {\n          const val = name[key];\n          setProp(el, key, val, this.options.xmlMode);\n        }\n      } else {\n        setProp(el, name, value, this.options.xmlMode);\n      }\n    });\n  }\n  return undefined;\n}\n/**\n * Sets the value of a data attribute.\n *\n * @private\n * @param elem - The element to set the data attribute on.\n * @param name - The data attribute's name.\n * @param value - The data attribute's value.\n */\nfunction setData(elem, name, value) {\n  var _a;\n  (_a = elem.data) !== null && _a !== void 0 ? _a : elem.data = {};\n  if (typeof name === 'object') Object.assign(elem.data, name);else if (typeof name === 'string' && value !== undefined) {\n    elem.data[name] = value;\n  }\n}\n/**\n * Read _all_ HTML5 `data-*` attributes from the equivalent HTML5 `data-*`\n * attribute, and cache the value in the node's internal data store.\n *\n * @private\n * @category Attributes\n * @param el - Element to get the data attribute of.\n * @returns A map with all of the data attributes.\n */\nfunction readAllData(el) {\n  for (const domName of Object.keys(el.attribs)) {\n    if (!domName.startsWith(dataAttrPrefix)) {\n      continue;\n    }\n    const jsName = camelCase(domName.slice(dataAttrPrefix.length));\n    if (!hasOwn.call(el.data, jsName)) {\n      el.data[jsName] = parseDataValue(el.attribs[domName]);\n    }\n  }\n  return el.data;\n}\n/**\n * Read the specified attribute from the equivalent HTML5 `data-*` attribute,\n * and (if present) cache the value in the node's internal data store.\n *\n * @private\n * @category Attributes\n * @param el - Element to get the data attribute of.\n * @param name - Name of the data attribute.\n * @returns The data attribute's value.\n */\nfunction readData(el, name) {\n  const domName = dataAttrPrefix + cssCase(name);\n  const data = el.data;\n  if (hasOwn.call(data, name)) {\n    return data[name];\n  }\n  if (hasOwn.call(el.attribs, domName)) {\n    return data[name] = parseDataValue(el.attribs[domName]);\n  }\n  return undefined;\n}\n/**\n * Coerce string data-* attributes to their corresponding JavaScript primitives.\n *\n * @private\n * @category Attributes\n * @param value - The value to parse.\n * @returns The parsed value.\n */\nfunction parseDataValue(value) {\n  if (value === 'null') return null;\n  if (value === 'true') return true;\n  if (value === 'false') return false;\n  const num = Number(value);\n  if (value === String(num)) return num;\n  if (rbrace.test(value)) {\n    try {\n      return JSON.parse(value);\n    } catch {\n      /* Ignore */\n    }\n  }\n  return value;\n}\nexport function data(name, value) {\n  var _a;\n  const elem = this[0];\n  if (!elem || !isTag(elem)) return;\n  const dataEl = elem;\n  (_a = dataEl.data) !== null && _a !== void 0 ? _a : dataEl.data = {};\n  // Return the entire data object if no data specified\n  if (name == null) {\n    return readAllData(dataEl);\n  }\n  // Set the value (with attr map support)\n  if (typeof name === 'object' || value !== undefined) {\n    domEach(this, el => {\n      if (isTag(el)) {\n        if (typeof name === 'object') setData(el, name);else setData(el, name, value);\n      }\n    });\n    return this;\n  }\n  return readData(dataEl, name);\n}\nexport function val(value) {\n  const querying = arguments.length === 0;\n  const element = this[0];\n  if (!element || !isTag(element)) return querying ? undefined : this;\n  switch (element.name) {\n    case 'textarea':\n      {\n        return this.text(value);\n      }\n    case 'select':\n      {\n        const option = this.find('option:selected');\n        if (!querying) {\n          if (this.attr('multiple') == null && typeof value === 'object') {\n            return this;\n          }\n          this.find('option').removeAttr('selected');\n          const values = typeof value === 'object' ? value : [value];\n          for (const val of values) {\n            this.find(`option[value=\"${val}\"]`).attr('selected', '');\n          }\n          return this;\n        }\n        return this.attr('multiple') ? option.toArray().map(el => text(el.children)) : option.attr('value');\n      }\n    case 'input':\n    case 'option':\n      {\n        return querying ? this.attr('value') : this.attr('value', value);\n      }\n  }\n  return undefined;\n}\n/**\n * Remove an attribute.\n *\n * @private\n * @param elem - Node to remove attribute from.\n * @param name - Name of the attribute to remove.\n */\nfunction removeAttribute(elem, name) {\n  if (!elem.attribs || !hasOwn.call(elem.attribs, name)) return;\n  delete elem.attribs[name];\n}\n/**\n * Splits a space-separated list of names to individual names.\n *\n * @category Attributes\n * @param names - Names to split.\n * @returns - Split names.\n */\nfunction splitNames(names) {\n  return names ? names.trim().split(rspace) : [];\n}\n/**\n * Method for removing attributes by `name`.\n *\n * @category Attributes\n * @example\n *\n * ```js\n * $('.pear').removeAttr('class').html();\n * //=> <li>Pear</li>\n *\n * $('.apple').attr('id', 'favorite');\n * $('.apple').removeAttr('id class').html();\n * //=> <li>Apple</li>\n * ```\n *\n * @param name - Name of the attribute.\n * @returns The instance itself.\n * @see {@link https://api.jquery.com/removeAttr/}\n */\nexport function removeAttr(name) {\n  const attrNames = splitNames(name);\n  for (const attrName of attrNames) {\n    domEach(this, elem => {\n      if (isTag(elem)) removeAttribute(elem, attrName);\n    });\n  }\n  return this;\n}\n/**\n * Check to see if _any_ of the matched elements have the given `className`.\n *\n * @category Attributes\n * @example\n *\n * ```js\n * $('.pear').hasClass('pear');\n * //=> true\n *\n * $('apple').hasClass('fruit');\n * //=> false\n *\n * $('li').hasClass('pear');\n * //=> true\n * ```\n *\n * @param className - Name of the class.\n * @returns Indicates if an element has the given `className`.\n * @see {@link https://api.jquery.com/hasClass/}\n */\nexport function hasClass(className) {\n  return this.toArray().some(elem => {\n    const clazz = isTag(elem) && elem.attribs['class'];\n    let idx = -1;\n    if (clazz && className.length > 0) {\n      while ((idx = clazz.indexOf(className, idx + 1)) > -1) {\n        const end = idx + className.length;\n        if ((idx === 0 || rspace.test(clazz[idx - 1])) && (end === clazz.length || rspace.test(clazz[end]))) {\n          return true;\n        }\n      }\n    }\n    return false;\n  });\n}\n/**\n * Adds class(es) to all of the matched elements. Also accepts a `function`.\n *\n * @category Attributes\n * @example\n *\n * ```js\n * $('.pear').addClass('fruit').html();\n * //=> <li class=\"pear fruit\">Pear</li>\n *\n * $('.apple').addClass('fruit red').html();\n * //=> <li class=\"apple fruit red\">Apple</li>\n * ```\n *\n * @param value - Name of new class.\n * @returns The instance itself.\n * @see {@link https://api.jquery.com/addClass/}\n */\nexport function addClass(value) {\n  // Support functions\n  if (typeof value === 'function') {\n    return domEach(this, (el, i) => {\n      if (isTag(el)) {\n        const className = el.attribs['class'] || '';\n        addClass.call([el], value.call(el, i, className));\n      }\n    });\n  }\n  // Return if no value or not a string or function\n  if (!value || typeof value !== 'string') return this;\n  const classNames = value.split(rspace);\n  const numElements = this.length;\n  for (let i = 0; i < numElements; i++) {\n    const el = this[i];\n    // If selected element isn't a tag, move on\n    if (!isTag(el)) continue;\n    // If we don't already have classes — always set xmlMode to false here, as it doesn't matter for classes\n    const className = getAttr(el, 'class', false);\n    if (className) {\n      let setClass = ` ${className} `;\n      // Check if class already exists\n      for (const cn of classNames) {\n        const appendClass = `${cn} `;\n        if (!setClass.includes(` ${appendClass}`)) setClass += appendClass;\n      }\n      setAttr(el, 'class', setClass.trim());\n    } else {\n      setAttr(el, 'class', classNames.join(' ').trim());\n    }\n  }\n  return this;\n}\n/**\n * Removes one or more space-separated classes from the selected elements. If no\n * `className` is defined, all classes will be removed. Also accepts a\n * `function`.\n *\n * @category Attributes\n * @example\n *\n * ```js\n * $('.pear').removeClass('pear').html();\n * //=> <li class=\"\">Pear</li>\n *\n * $('.apple').addClass('red').removeClass().html();\n * //=> <li class=\"\">Apple</li>\n * ```\n *\n * @param name - Name of the class. If not specified, removes all elements.\n * @returns The instance itself.\n * @see {@link https://api.jquery.com/removeClass/}\n */\nexport function removeClass(name) {\n  // Handle if value is a function\n  if (typeof name === 'function') {\n    return domEach(this, (el, i) => {\n      if (isTag(el)) {\n        removeClass.call([el], name.call(el, i, el.attribs['class'] || ''));\n      }\n    });\n  }\n  const classes = splitNames(name);\n  const numClasses = classes.length;\n  const removeAll = arguments.length === 0;\n  return domEach(this, el => {\n    if (!isTag(el)) return;\n    if (removeAll) {\n      // Short circuit the remove all case as this is the nice one\n      el.attribs['class'] = '';\n    } else {\n      const elClasses = splitNames(el.attribs['class']);\n      let changed = false;\n      for (let j = 0; j < numClasses; j++) {\n        const index = elClasses.indexOf(classes[j]);\n        if (index >= 0) {\n          elClasses.splice(index, 1);\n          changed = true;\n          /*\n           * We have to do another pass to ensure that there are not duplicate\n           * classes listed\n           */\n          j--;\n        }\n      }\n      if (changed) {\n        el.attribs['class'] = elClasses.join(' ');\n      }\n    }\n  });\n}\n/**\n * Add or remove class(es) from the matched elements, depending on either the\n * class's presence or the value of the switch argument. Also accepts a\n * `function`.\n *\n * @category Attributes\n * @example\n *\n * ```js\n * $('.apple.green').toggleClass('fruit green red').html();\n * //=> <li class=\"apple fruit red\">Apple</li>\n *\n * $('.apple.green').toggleClass('fruit green red', true).html();\n * //=> <li class=\"apple green fruit red\">Apple</li>\n * ```\n *\n * @param value - Name of the class. Can also be a function.\n * @param stateVal - If specified the state of the class.\n * @returns The instance itself.\n * @see {@link https://api.jquery.com/toggleClass/}\n */\nexport function toggleClass(value, stateVal) {\n  // Support functions\n  if (typeof value === 'function') {\n    return domEach(this, (el, i) => {\n      if (isTag(el)) {\n        toggleClass.call([el], value.call(el, i, el.attribs['class'] || '', stateVal), stateVal);\n      }\n    });\n  }\n  // Return if no value or not a string or function\n  if (!value || typeof value !== 'string') return this;\n  const classNames = value.split(rspace);\n  const numClasses = classNames.length;\n  const state = typeof stateVal === 'boolean' ? stateVal ? 1 : -1 : 0;\n  const numElements = this.length;\n  for (let i = 0; i < numElements; i++) {\n    const el = this[i];\n    // If selected element isn't a tag, move on\n    if (!isTag(el)) continue;\n    const elementClasses = splitNames(el.attribs['class']);\n    // Check if class already exists\n    for (let j = 0; j < numClasses; j++) {\n      // Check if the class name is currently defined\n      const index = elementClasses.indexOf(classNames[j]);\n      // Add if stateValue === true or we are toggling and there is no value\n      if (state >= 0 && index < 0) {\n        elementClasses.push(classNames[j]);\n      } else if (state <= 0 && index >= 0) {\n        // Otherwise remove but only if the item exists\n        elementClasses.splice(index, 1);\n      }\n    }\n    el.attribs['class'] = elementClasses.join(' ');\n  }\n  return this;\n}\n", "/**\n * Checks if an object is a Cheerio instance.\n *\n * @category Utils\n * @param maybeCheerio - The object to check.\n * @returns Whether the object is a Cheerio instance.\n */\nexport function isCheerio(maybeCheerio) {\n  return maybeCheerio.cheerio != null;\n}\n/**\n * Convert a string to camel case notation.\n *\n * @private\n * @category Utils\n * @param str - The string to be converted.\n * @returns String in camel case notation.\n */\nexport function camelCase(str) {\n  return str.replace(/[._-](\\w|$)/g, (_, x) => x.toUpperCase());\n}\n/**\n * Convert a string from camel case to \"CSS case\", where word boundaries are\n * described by hyphens (\"-\") and all characters are lower-case.\n *\n * @private\n * @category Utils\n * @param str - The string to be converted.\n * @returns String in \"CSS case\".\n */\nexport function cssCase(str) {\n  return str.replace(/[A-Z]/g, '-$&').toLowerCase();\n}\n/**\n * Iterate over each DOM element without creating intermediary Cheerio\n * instances.\n *\n * This is indented for use internally to avoid otherwise unnecessary memory\n * pressure introduced by _make.\n *\n * @category Utils\n * @param array - The array to iterate over.\n * @param fn - Function to call.\n * @returns The original instance.\n */\nexport function domEach(array, fn) {\n  const len = array.length;\n  for (let i = 0; i < len; i++) fn(array[i], i);\n  return array;\n}\nvar CharacterCodes;\n(function (CharacterCodes) {\n  CharacterCodes[CharacterCodes[\"LowerA\"] = 97] = \"LowerA\";\n  CharacterCodes[CharacterCodes[\"LowerZ\"] = 122] = \"LowerZ\";\n  CharacterCodes[CharacterCodes[\"UpperA\"] = 65] = \"UpperA\";\n  CharacterCodes[CharacterCodes[\"UpperZ\"] = 90] = \"UpperZ\";\n  CharacterCodes[CharacterCodes[\"Exclamation\"] = 33] = \"Exclamation\";\n})(CharacterCodes || (CharacterCodes = {}));\n/**\n * Check if string is HTML.\n *\n * Tests for a `<` within a string, immediate followed by a letter and\n * eventually followed by a `>`.\n *\n * @private\n * @category Utils\n * @param str - The string to check.\n * @returns Indicates if `str` is HTML.\n */\nexport function isHtml(str) {\n  const tagStart = str.indexOf('<');\n  if (tagStart < 0 || tagStart > str.length - 3) return false;\n  const tagChar = str.charCodeAt(tagStart + 1);\n  return (tagChar >= CharacterCodes.LowerA && tagChar <= CharacterCodes.LowerZ || tagChar >= CharacterCodes.UpperA && tagChar <= CharacterCodes.UpperZ || tagChar === CharacterCodes.Exclamation) && str.includes('>', tagStart + 2);\n}\n", "/**\n * Methods for traversing the DOM structure.\n *\n * @module cheerio/traversing\n */\nimport { isTag, hasChildren, isDocument } from 'domhandler';\nimport * as select from 'cheerio-select';\nimport { domEach, isCheerio } from '../utils.js';\nimport { contains } from '../static.js';\nimport { getChildren, getSiblings, nextElementSibling, prevElementSibling, uniqueSort } from 'domutils';\nconst reSiblingSelector = /^\\s*[+~]/;\n/**\n * Get the descendants of each element in the current set of matched elements,\n * filtered by a selector, jQuery object, or element.\n *\n * @category Traversing\n * @example\n *\n * ```js\n * $('#fruits').find('li').length;\n * //=> 3\n * $('#fruits').find($('.apple')).length;\n * //=> 1\n * ```\n *\n * @param selectorOrHaystack - Element to look for.\n * @returns The found elements.\n * @see {@link https://api.jquery.com/find/}\n */\nexport function find(selectorOrHaystack) {\n  if (!selectorOrHaystack) {\n    return this._make([]);\n  }\n  if (typeof selectorOrHaystack !== 'string') {\n    const haystack = isCheerio(selectorOrHaystack) ? selectorOrHaystack.toArray() : [selectorOrHaystack];\n    const context = this.toArray();\n    return this._make(haystack.filter(elem => context.some(node => contains(node, elem))));\n  }\n  return this._findBySelector(selectorOrHaystack, Number.POSITIVE_INFINITY);\n}\n/**\n * Find elements by a specific selector.\n *\n * @private\n * @category Traversing\n * @param selector - Selector to filter by.\n * @param limit - Maximum number of elements to match.\n * @returns The found elements.\n */\nexport function _findBySelector(selector, limit) {\n  var _a;\n  const context = this.toArray();\n  const elems = reSiblingSelector.test(selector) ? context : this.children().toArray();\n  const options = {\n    context,\n    root: (_a = this._root) === null || _a === void 0 ? void 0 : _a[0],\n    // Pass options that are recognized by `cheerio-select`\n    xmlMode: this.options.xmlMode,\n    lowerCaseTags: this.options.lowerCaseTags,\n    lowerCaseAttributeNames: this.options.lowerCaseAttributeNames,\n    pseudos: this.options.pseudos,\n    quirksMode: this.options.quirksMode\n  };\n  return this._make(select.select(selector, elems, options, limit));\n}\n/**\n * Creates a matcher, using a particular mapping function. Matchers provide a\n * function that finds elements using a generating function, supporting\n * filtering.\n *\n * @private\n * @param matchMap - Mapping function.\n * @returns - Function for wrapping generating functions.\n */\nfunction _getMatcher(matchMap) {\n  return function (fn, ...postFns) {\n    return function (selector) {\n      var _a;\n      let matched = matchMap(fn, this);\n      if (selector) {\n        matched = filterArray(matched, selector, this.options.xmlMode, (_a = this._root) === null || _a === void 0 ? void 0 : _a[0]);\n      }\n      return this._make(\n      // Post processing is only necessary if there is more than one element.\n      this.length > 1 && matched.length > 1 ? postFns.reduce((elems, fn) => fn(elems), matched) : matched);\n    };\n  };\n}\n/** Matcher that adds multiple elements for each entry in the input. */\nconst _matcher = _getMatcher((fn, elems) => {\n  let ret = [];\n  for (let i = 0; i < elems.length; i++) {\n    const value = fn(elems[i]);\n    if (value.length > 0) ret = ret.concat(value);\n  }\n  return ret;\n});\n/** Matcher that adds at most one element for each entry in the input. */\nconst _singleMatcher = _getMatcher((fn, elems) => {\n  const ret = [];\n  for (let i = 0; i < elems.length; i++) {\n    const value = fn(elems[i]);\n    if (value !== null) {\n      ret.push(value);\n    }\n  }\n  return ret;\n});\n/**\n * Matcher that supports traversing until a condition is met.\n *\n * @param nextElem - Function that returns the next element.\n * @param postFns - Post processing functions.\n * @returns A function usable for `*Until` methods.\n */\nfunction _matchUntil(nextElem, ...postFns) {\n  // We use a variable here that is used from within the matcher.\n  let matches = null;\n  const innerMatcher = _getMatcher((nextElem, elems) => {\n    const matched = [];\n    domEach(elems, elem => {\n      for (let next; next = nextElem(elem); elem = next) {\n        // FIXME: `matched` might contain duplicates here and the index is too large.\n        if (matches === null || matches === void 0 ? void 0 : matches(next, matched.length)) break;\n        matched.push(next);\n      }\n    });\n    return matched;\n  })(nextElem, ...postFns);\n  return function (selector, filterSelector) {\n    // Override `matches` variable with the new target.\n    matches = typeof selector === 'string' ? elem => select.is(elem, selector, this.options) : selector ? getFilterFn(selector) : null;\n    const ret = innerMatcher.call(this, filterSelector);\n    // Set `matches` to `null`, so we don't waste memory.\n    matches = null;\n    return ret;\n  };\n}\nfunction _removeDuplicates(elems) {\n  return elems.length > 1 ? Array.from(new Set(elems)) : elems;\n}\n/**\n * Get the parent of each element in the current set of matched elements,\n * optionally filtered by a selector.\n *\n * @category Traversing\n * @example\n *\n * ```js\n * $('.pear').parent().attr('id');\n * //=> fruits\n * ```\n *\n * @param selector - If specified filter for parent.\n * @returns The parents.\n * @see {@link https://api.jquery.com/parent/}\n */\nexport const parent = _singleMatcher(({\n  parent\n}) => parent && !isDocument(parent) ? parent : null, _removeDuplicates);\n/**\n * Get a set of parents filtered by `selector` of each element in the current\n * set of match elements.\n *\n * @category Traversing\n * @example\n *\n * ```js\n * $('.orange').parents().length;\n * //=> 2\n * $('.orange').parents('#fruits').length;\n * //=> 1\n * ```\n *\n * @param selector - If specified filter for parents.\n * @returns The parents.\n * @see {@link https://api.jquery.com/parents/}\n */\nexport const parents = _matcher(elem => {\n  const matched = [];\n  while (elem.parent && !isDocument(elem.parent)) {\n    matched.push(elem.parent);\n    elem = elem.parent;\n  }\n  return matched;\n}, uniqueSort, elems => elems.reverse());\n/**\n * Get the ancestors of each element in the current set of matched elements, up\n * to but not including the element matched by the selector, DOM node, or\n * cheerio object.\n *\n * @category Traversing\n * @example\n *\n * ```js\n * $('.orange').parentsUntil('#food').length;\n * //=> 1\n * ```\n *\n * @param selector - Selector for element to stop at.\n * @param filterSelector - Optional filter for parents.\n * @returns The parents.\n * @see {@link https://api.jquery.com/parentsUntil/}\n */\nexport const parentsUntil = _matchUntil(({\n  parent\n}) => parent && !isDocument(parent) ? parent : null, uniqueSort, elems => elems.reverse());\n/**\n * For each element in the set, get the first element that matches the selector\n * by testing the element itself and traversing up through its ancestors in the\n * DOM tree.\n *\n * @category Traversing\n * @example\n *\n * ```js\n * $('.orange').closest();\n * //=> []\n *\n * $('.orange').closest('.apple');\n * // => []\n *\n * $('.orange').closest('li');\n * //=> [<li class=\"orange\">Orange</li>]\n *\n * $('.orange').closest('#fruits');\n * //=> [<ul id=\"fruits\"> ... </ul>]\n * ```\n *\n * @param selector - Selector for the element to find.\n * @returns The closest nodes.\n * @see {@link https://api.jquery.com/closest/}\n */\nexport function closest(selector) {\n  var _a;\n  const set = [];\n  if (!selector) {\n    return this._make(set);\n  }\n  const selectOpts = {\n    xmlMode: this.options.xmlMode,\n    root: (_a = this._root) === null || _a === void 0 ? void 0 : _a[0]\n  };\n  const selectFn = typeof selector === 'string' ? elem => select.is(elem, selector, selectOpts) : getFilterFn(selector);\n  domEach(this, elem => {\n    if (elem && !isDocument(elem) && !isTag(elem)) {\n      elem = elem.parent;\n    }\n    while (elem && isTag(elem)) {\n      if (selectFn(elem, 0)) {\n        // Do not add duplicate elements to the set\n        if (!set.includes(elem)) {\n          set.push(elem);\n        }\n        break;\n      }\n      elem = elem.parent;\n    }\n  });\n  return this._make(set);\n}\n/**\n * Gets the next sibling of each selected element, optionally filtered by a\n * selector.\n *\n * @category Traversing\n * @example\n *\n * ```js\n * $('.apple').next().hasClass('orange');\n * //=> true\n * ```\n *\n * @param selector - If specified filter for sibling.\n * @returns The next nodes.\n * @see {@link https://api.jquery.com/next/}\n */\nexport const next = _singleMatcher(elem => nextElementSibling(elem));\n/**\n * Gets all the following siblings of the each selected element, optionally\n * filtered by a selector.\n *\n * @category Traversing\n * @example\n *\n * ```js\n * $('.apple').nextAll();\n * //=> [<li class=\"orange\">Orange</li>, <li class=\"pear\">Pear</li>]\n * $('.apple').nextAll('.orange');\n * //=> [<li class=\"orange\">Orange</li>]\n * ```\n *\n * @param selector - If specified filter for siblings.\n * @returns The next nodes.\n * @see {@link https://api.jquery.com/nextAll/}\n */\nexport const nextAll = _matcher(elem => {\n  const matched = [];\n  while (elem.next) {\n    elem = elem.next;\n    if (isTag(elem)) matched.push(elem);\n  }\n  return matched;\n}, _removeDuplicates);\n/**\n * Gets all the following siblings up to but not including the element matched\n * by the selector, optionally filtered by another selector.\n *\n * @category Traversing\n * @example\n *\n * ```js\n * $('.apple').nextUntil('.pear');\n * //=> [<li class=\"orange\">Orange</li>]\n * ```\n *\n * @param selector - Selector for element to stop at.\n * @param filterSelector - If specified filter for siblings.\n * @returns The next nodes.\n * @see {@link https://api.jquery.com/nextUntil/}\n */\nexport const nextUntil = _matchUntil(el => nextElementSibling(el), _removeDuplicates);\n/**\n * Gets the previous sibling of each selected element optionally filtered by a\n * selector.\n *\n * @category Traversing\n * @example\n *\n * ```js\n * $('.orange').prev().hasClass('apple');\n * //=> true\n * ```\n *\n * @param selector - If specified filter for siblings.\n * @returns The previous nodes.\n * @see {@link https://api.jquery.com/prev/}\n */\nexport const prev = _singleMatcher(elem => prevElementSibling(elem));\n/**\n * Gets all the preceding siblings of each selected element, optionally filtered\n * by a selector.\n *\n * @category Traversing\n * @example\n *\n * ```js\n * $('.pear').prevAll();\n * //=> [<li class=\"orange\">Orange</li>, <li class=\"apple\">Apple</li>]\n *\n * $('.pear').prevAll('.orange');\n * //=> [<li class=\"orange\">Orange</li>]\n * ```\n *\n * @param selector - If specified filter for siblings.\n * @returns The previous nodes.\n * @see {@link https://api.jquery.com/prevAll/}\n */\nexport const prevAll = _matcher(elem => {\n  const matched = [];\n  while (elem.prev) {\n    elem = elem.prev;\n    if (isTag(elem)) matched.push(elem);\n  }\n  return matched;\n}, _removeDuplicates);\n/**\n * Gets all the preceding siblings up to but not including the element matched\n * by the selector, optionally filtered by another selector.\n *\n * @category Traversing\n * @example\n *\n * ```js\n * $('.pear').prevUntil('.apple');\n * //=> [<li class=\"orange\">Orange</li>]\n * ```\n *\n * @param selector - Selector for element to stop at.\n * @param filterSelector - If specified filter for siblings.\n * @returns The previous nodes.\n * @see {@link https://api.jquery.com/prevUntil/}\n */\nexport const prevUntil = _matchUntil(el => prevElementSibling(el), _removeDuplicates);\n/**\n * Get the siblings of each element (excluding the element) in the set of\n * matched elements, optionally filtered by a selector.\n *\n * @category Traversing\n * @example\n *\n * ```js\n * $('.pear').siblings().length;\n * //=> 2\n *\n * $('.pear').siblings('.orange').length;\n * //=> 1\n * ```\n *\n * @param selector - If specified filter for siblings.\n * @returns The siblings.\n * @see {@link https://api.jquery.com/siblings/}\n */\nexport const siblings = _matcher(elem => getSiblings(elem).filter(el => isTag(el) && el !== elem), uniqueSort);\n/**\n * Gets the element children of each element in the set of matched elements.\n *\n * @category Traversing\n * @example\n *\n * ```js\n * $('#fruits').children().length;\n * //=> 3\n *\n * $('#fruits').children('.pear').text();\n * //=> Pear\n * ```\n *\n * @param selector - If specified filter for children.\n * @returns The children.\n * @see {@link https://api.jquery.com/children/}\n */\nexport const children = _matcher(elem => getChildren(elem).filter(isTag), _removeDuplicates);\n/**\n * Gets the children of each element in the set of matched elements, including\n * text and comment nodes.\n *\n * @category Traversing\n * @example\n *\n * ```js\n * $('#fruits').contents().length;\n * //=> 3\n * ```\n *\n * @returns The children.\n * @see {@link https://api.jquery.com/contents/}\n */\nexport function contents() {\n  const elems = this.toArray().reduce((newElems, elem) => hasChildren(elem) ? newElems.concat(elem.children) : newElems, []);\n  return this._make(elems);\n}\n/**\n * Iterates over a cheerio object, executing a function for each matched\n * element. When the callback is fired, the function is fired in the context of\n * the DOM element, so `this` refers to the current element, which is equivalent\n * to the function parameter `element`. To break out of the `each` loop early,\n * return with `false`.\n *\n * @category Traversing\n * @example\n *\n * ```js\n * const fruits = [];\n *\n * $('li').each(function (i, elem) {\n *   fruits[i] = $(this).text();\n * });\n *\n * fruits.join(', ');\n * //=> Apple, Orange, Pear\n * ```\n *\n * @param fn - Function to execute.\n * @returns The instance itself, useful for chaining.\n * @see {@link https://api.jquery.com/each/}\n */\nexport function each(fn) {\n  let i = 0;\n  const len = this.length;\n  while (i < len && fn.call(this[i], i, this[i]) !== false) ++i;\n  return this;\n}\n/**\n * Pass each element in the current matched set through a function, producing a\n * new Cheerio object containing the return values. The function can return an\n * individual data item or an array of data items to be inserted into the\n * resulting set. If an array is returned, the elements inside the array are\n * inserted into the set. If the function returns null or undefined, no element\n * will be inserted.\n *\n * @category Traversing\n * @example\n *\n * ```js\n * $('li')\n *   .map(function (i, el) {\n *     // this === el\n *     return $(this).text();\n *   })\n *   .toArray()\n *   .join(' ');\n * //=> \"apple orange pear\"\n * ```\n *\n * @param fn - Function to execute.\n * @returns The mapped elements, wrapped in a Cheerio collection.\n * @see {@link https://api.jquery.com/map/}\n */\nexport function map(fn) {\n  let elems = [];\n  for (let i = 0; i < this.length; i++) {\n    const el = this[i];\n    const val = fn.call(el, i, el);\n    if (val != null) {\n      elems = elems.concat(val);\n    }\n  }\n  return this._make(elems);\n}\n/**\n * Creates a function to test if a filter is matched.\n *\n * @param match - A filter.\n * @returns A function that determines if a filter has been matched.\n */\nfunction getFilterFn(match) {\n  if (typeof match === 'function') {\n    return (el, i) => match.call(el, i, el);\n  }\n  if (isCheerio(match)) {\n    return el => Array.prototype.includes.call(match, el);\n  }\n  return function (el) {\n    return match === el;\n  };\n}\nexport function filter(match) {\n  var _a;\n  return this._make(filterArray(this.toArray(), match, this.options.xmlMode, (_a = this._root) === null || _a === void 0 ? void 0 : _a[0]));\n}\nexport function filterArray(nodes, match, xmlMode, root) {\n  return typeof match === 'string' ? select.filter(match, nodes, {\n    xmlMode,\n    root\n  }) : nodes.filter(getFilterFn(match));\n}\n/**\n * Checks the current list of elements and returns `true` if _any_ of the\n * elements match the selector. If using an element or Cheerio selection,\n * returns `true` if _any_ of the elements match. If using a predicate function,\n * the function is executed in the context of the selected element, so `this`\n * refers to the current element.\n *\n * @category Traversing\n * @param selector - Selector for the selection.\n * @returns Whether or not the selector matches an element of the instance.\n * @see {@link https://api.jquery.com/is/}\n */\nexport function is(selector) {\n  const nodes = this.toArray();\n  return typeof selector === 'string' ? select.some(nodes.filter(isTag), selector, this.options) : selector ? nodes.some(getFilterFn(selector)) : false;\n}\n/**\n * Remove elements from the set of matched elements. Given a Cheerio object that\n * represents a set of DOM elements, the `.not()` method constructs a new\n * Cheerio object from a subset of the matching elements. The supplied selector\n * is tested against each element; the elements that don't match the selector\n * will be included in the result.\n *\n * The `.not()` method can take a function as its argument in the same way that\n * `.filter()` does. Elements for which the function returns `true` are excluded\n * from the filtered set; all other elements are included.\n *\n * @category Traversing\n * @example <caption>Selector</caption>\n *\n * ```js\n * $('li').not('.apple').length;\n * //=> 2\n * ```\n *\n * @example <caption>Function</caption>\n *\n * ```js\n * $('li').not(function (i, el) {\n *   // this === el\n *   return $(this).attr('class') === 'orange';\n * }).length; //=> 2\n * ```\n *\n * @param match - Value to look for, following the rules above.\n * @returns The filtered collection.\n * @see {@link https://api.jquery.com/not/}\n */\nexport function not(match) {\n  let nodes = this.toArray();\n  if (typeof match === 'string') {\n    const matches = new Set(select.filter(match, nodes, this.options));\n    nodes = nodes.filter(el => !matches.has(el));\n  } else {\n    const filterFn = getFilterFn(match);\n    nodes = nodes.filter((el, i) => !filterFn(el, i));\n  }\n  return this._make(nodes);\n}\n/**\n * Filters the set of matched elements to only those which have the given DOM\n * element as a descendant or which have a descendant that matches the given\n * selector. Equivalent to `.filter(':has(selector)')`.\n *\n * @category Traversing\n * @example <caption>Selector</caption>\n *\n * ```js\n * $('ul').has('.pear').attr('id');\n * //=> fruits\n * ```\n *\n * @example <caption>Element</caption>\n *\n * ```js\n * $('ul').has($('.pear')[0]).attr('id');\n * //=> fruits\n * ```\n *\n * @param selectorOrHaystack - Element to look for.\n * @returns The filtered collection.\n * @see {@link https://api.jquery.com/has/}\n */\nexport function has(selectorOrHaystack) {\n  return this.filter(typeof selectorOrHaystack === 'string' ?\n  // Using the `:has` selector here short-circuits searches.\n  `:has(${selectorOrHaystack})` : (_, el) => this._make(el).find(selectorOrHaystack).length > 0);\n}\n/**\n * Will select the first element of a cheerio object.\n *\n * @category Traversing\n * @example\n *\n * ```js\n * $('#fruits').children().first().text();\n * //=> Apple\n * ```\n *\n * @returns The first element.\n * @see {@link https://api.jquery.com/first/}\n */\nexport function first() {\n  return this.length > 1 ? this._make(this[0]) : this;\n}\n/**\n * Will select the last element of a cheerio object.\n *\n * @category Traversing\n * @example\n *\n * ```js\n * $('#fruits').children().last().text();\n * //=> Pear\n * ```\n *\n * @returns The last element.\n * @see {@link https://api.jquery.com/last/}\n */\nexport function last() {\n  return this.length > 0 ? this._make(this[this.length - 1]) : this;\n}\n/**\n * Reduce the set of matched elements to the one at the specified index. Use\n * `.eq(-i)` to count backwards from the last selected element.\n *\n * @category Traversing\n * @example\n *\n * ```js\n * $('li').eq(0).text();\n * //=> Apple\n *\n * $('li').eq(-1).text();\n * //=> Pear\n * ```\n *\n * @param i - Index of the element to select.\n * @returns The element at the `i`th position.\n * @see {@link https://api.jquery.com/eq/}\n */\nexport function eq(i) {\n  var _a;\n  i = +i;\n  // Use the first identity optimization if possible\n  if (i === 0 && this.length <= 1) return this;\n  if (i < 0) i = this.length + i;\n  return this._make((_a = this[i]) !== null && _a !== void 0 ? _a : []);\n}\nexport function get(i) {\n  if (i == null) {\n    return this.toArray();\n  }\n  return this[i < 0 ? this.length + i : i];\n}\n/**\n * Retrieve all the DOM elements contained in the jQuery set as an array.\n *\n * @example\n *\n * ```js\n * $('li').toArray();\n * //=> [ {...}, {...}, {...} ]\n * ```\n *\n * @returns The contained items.\n */\nexport function toArray() {\n  return Array.prototype.slice.call(this);\n}\n/**\n * Search for a given element from among the matched elements.\n *\n * @category Traversing\n * @example\n *\n * ```js\n * $('.pear').index();\n * //=> 2 $('.orange').index('li');\n * //=> 1\n * $('.apple').index($('#fruit, li'));\n * //=> 1\n * ```\n *\n * @param selectorOrNeedle - Element to look for.\n * @returns The index of the element.\n * @see {@link https://api.jquery.com/index/}\n */\nexport function index(selectorOrNeedle) {\n  let $haystack;\n  let needle;\n  if (selectorOrNeedle == null) {\n    $haystack = this.parent().children();\n    needle = this[0];\n  } else if (typeof selectorOrNeedle === 'string') {\n    $haystack = this._make(selectorOrNeedle);\n    needle = this[0];\n  } else {\n    // eslint-disable-next-line @typescript-eslint/no-this-alias, unicorn/no-this-assignment\n    $haystack = this;\n    needle = isCheerio(selectorOrNeedle) ? selectorOrNeedle[0] : selectorOrNeedle;\n  }\n  return Array.prototype.indexOf.call($haystack, needle);\n}\n/**\n * Gets the elements matching the specified range (0-based position).\n *\n * @category Traversing\n * @example\n *\n * ```js\n * $('li').slice(1).eq(0).text();\n * //=> 'Orange'\n *\n * $('li').slice(1, 2).length;\n * //=> 1\n * ```\n *\n * @param start - A position at which the elements begin to be selected. If\n *   negative, it indicates an offset from the end of the set.\n * @param end - A position at which the elements stop being selected. If\n *   negative, it indicates an offset from the end of the set. If omitted, the\n *   range continues until the end of the set.\n * @returns The elements matching the specified range.\n * @see {@link https://api.jquery.com/slice/}\n */\nexport function slice(start, end) {\n  return this._make(Array.prototype.slice.call(this, start, end));\n}\n/**\n * End the most recent filtering operation in the current chain and return the\n * set of matched elements to its previous state.\n *\n * @category Traversing\n * @example\n *\n * ```js\n * $('li').eq(0).end().length;\n * //=> 3\n * ```\n *\n * @returns The previous state of the set of matched elements.\n * @see {@link https://api.jquery.com/end/}\n */\nexport function end() {\n  var _a;\n  return (_a = this.prevObject) !== null && _a !== void 0 ? _a : this._make([]);\n}\n/**\n * Add elements to the set of matched elements.\n *\n * @category Traversing\n * @example\n *\n * ```js\n * $('.apple').add('.orange').length;\n * //=> 2\n * ```\n *\n * @param other - Elements to add.\n * @param context - Optionally the context of the new selection.\n * @returns The combined set.\n * @see {@link https://api.jquery.com/add/}\n */\nexport function add(other, context) {\n  const selection = this._make(other, context);\n  const contents = uniqueSort([...this.get(), ...selection.get()]);\n  return this._make(contents);\n}\n/**\n * Add the previous set of elements on the stack to the current set, optionally\n * filtered by a selector.\n *\n * @category Traversing\n * @example\n *\n * ```js\n * $('li').eq(0).addBack('.orange').length;\n * //=> 2\n * ```\n *\n * @param selector - Selector for the elements to add.\n * @returns The combined set.\n * @see {@link https://api.jquery.com/addBack/}\n */\nexport function addBack(selector) {\n  return this.prevObject ? this.add(selector ? this.prevObject.filter(selector) : this.prevObject) : this;\n}\n", "export var SelectorType;\n(function (SelectorType) {\n  SelectorType[\"Attribute\"] = \"attribute\";\n  SelectorType[\"Pseudo\"] = \"pseudo\";\n  SelectorType[\"PseudoElement\"] = \"pseudo-element\";\n  SelectorType[\"Tag\"] = \"tag\";\n  SelectorType[\"Universal\"] = \"universal\";\n  // Traversals\n  SelectorType[\"Adjacent\"] = \"adjacent\";\n  SelectorType[\"Child\"] = \"child\";\n  SelectorType[\"Descendant\"] = \"descendant\";\n  SelectorType[\"Parent\"] = \"parent\";\n  SelectorType[\"Sibling\"] = \"sibling\";\n  SelectorType[\"ColumnCombinator\"] = \"column-combinator\";\n})(SelectorType || (SelectorType = {}));\n/**\n * Modes for ignore case.\n *\n * This could be updated to an enum, and the object is\n * the current stand-in that will allow code to be updated\n * without big changes.\n */\nexport const IgnoreCaseMode = {\n  Unknown: null,\n  QuirksMode: \"quirks\",\n  IgnoreCase: true,\n  CaseSensitive: false\n};\nexport var AttributeAction;\n(function (AttributeAction) {\n  AttributeAction[\"Any\"] = \"any\";\n  AttributeAction[\"Element\"] = \"element\";\n  AttributeAction[\"End\"] = \"end\";\n  AttributeAction[\"Equals\"] = \"equals\";\n  AttributeAction[\"Exists\"] = \"exists\";\n  AttributeAction[\"Hyphen\"] = \"hyphen\";\n  AttributeAction[\"Not\"] = \"not\";\n  AttributeAction[\"Start\"] = \"start\";\n})(AttributeAction || (AttributeAction = {}));", "import { SelectorType, AttributeAction } from \"./types\";\nconst reName = /^[^\\\\#]?(?:\\\\(?:[\\da-f]{1,6}\\s?|.)|[\\w\\-\\u00b0-\\uFFFF])+/;\nconst reEscape = /\\\\([\\da-f]{1,6}\\s?|(\\s)|.)/gi;\nconst actionTypes = new Map([[126 /* Tilde */, AttributeAction.Element], [94 /* Circumflex */, AttributeAction.Start], [36 /* Dollar */, AttributeAction.End], [42 /* Asterisk */, AttributeAction.Any], [33 /* ExclamationMark */, AttributeAction.Not], [124 /* Pipe */, AttributeAction.Hyphen]]);\n// Pseudos, whose data property is parsed as well.\nconst unpackPseudos = new Set([\"has\", \"not\", \"matches\", \"is\", \"where\", \"host\", \"host-context\"]);\n/**\n * Checks whether a specific selector is a traversal.\n * This is useful eg. in swapping the order of elements that\n * are not traversals.\n *\n * @param selector Selector to check.\n */\nexport function isTraversal(selector) {\n  switch (selector.type) {\n    case SelectorType.Adjacent:\n    case SelectorType.Child:\n    case SelectorType.Descendant:\n    case SelectorType.Parent:\n    case SelectorType.Sibling:\n    case SelectorType.ColumnCombinator:\n      return true;\n    default:\n      return false;\n  }\n}\nconst stripQuotesFromPseudos = new Set([\"contains\", \"icontains\"]);\n// Unescape function taken from https://github.com/jquery/sizzle/blob/master/src/sizzle.js#L152\nfunction funescape(_, escaped, escapedWhitespace) {\n  const high = parseInt(escaped, 16) - 0x10000;\n  // NaN means non-codepoint\n  return high !== high || escapedWhitespace ? escaped : high < 0 ?\n  // BMP codepoint\n  String.fromCharCode(high + 0x10000) :\n  // Supplemental Plane codepoint (surrogate pair)\n  String.fromCharCode(high >> 10 | 0xd800, high & 0x3ff | 0xdc00);\n}\nfunction unescapeCSS(str) {\n  return str.replace(reEscape, funescape);\n}\nfunction isQuote(c) {\n  return c === 39 /* SingleQuote */ || c === 34 /* DoubleQuote */;\n}\nfunction isWhitespace(c) {\n  return c === 32 /* Space */ || c === 9 /* Tab */ || c === 10 /* NewLine */ || c === 12 /* FormFeed */ || c === 13 /* CarriageReturn */;\n}\n/**\n * Parses `selector`, optionally with the passed `options`.\n *\n * @param selector Selector to parse.\n * @param options Options for parsing.\n * @returns Returns a two-dimensional array.\n * The first dimension represents selectors separated by commas (eg. `sub1, sub2`),\n * the second contains the relevant tokens for that selector.\n */\nexport function parse(selector) {\n  const subselects = [];\n  const endIndex = parseSelector(subselects, `${selector}`, 0);\n  if (endIndex < selector.length) {\n    throw new Error(`Unmatched selector: ${selector.slice(endIndex)}`);\n  }\n  return subselects;\n}\nfunction parseSelector(subselects, selector, selectorIndex) {\n  let tokens = [];\n  function getName(offset) {\n    const match = selector.slice(selectorIndex + offset).match(reName);\n    if (!match) {\n      throw new Error(`Expected name, found ${selector.slice(selectorIndex)}`);\n    }\n    const [name] = match;\n    selectorIndex += offset + name.length;\n    return unescapeCSS(name);\n  }\n  function stripWhitespace(offset) {\n    selectorIndex += offset;\n    while (selectorIndex < selector.length && isWhitespace(selector.charCodeAt(selectorIndex))) {\n      selectorIndex++;\n    }\n  }\n  function readValueWithParenthesis() {\n    selectorIndex += 1;\n    const start = selectorIndex;\n    let counter = 1;\n    for (; counter > 0 && selectorIndex < selector.length; selectorIndex++) {\n      if (selector.charCodeAt(selectorIndex) === 40 /* LeftParenthesis */ && !isEscaped(selectorIndex)) {\n        counter++;\n      } else if (selector.charCodeAt(selectorIndex) === 41 /* RightParenthesis */ && !isEscaped(selectorIndex)) {\n        counter--;\n      }\n    }\n    if (counter) {\n      throw new Error(\"Parenthesis not matched\");\n    }\n    return unescapeCSS(selector.slice(start, selectorIndex - 1));\n  }\n  function isEscaped(pos) {\n    let slashCount = 0;\n    while (selector.charCodeAt(--pos) === 92 /* BackSlash */) slashCount++;\n    return (slashCount & 1) === 1;\n  }\n  function ensureNotTraversal() {\n    if (tokens.length > 0 && isTraversal(tokens[tokens.length - 1])) {\n      throw new Error(\"Did not expect successive traversals.\");\n    }\n  }\n  function addTraversal(type) {\n    if (tokens.length > 0 && tokens[tokens.length - 1].type === SelectorType.Descendant) {\n      tokens[tokens.length - 1].type = type;\n      return;\n    }\n    ensureNotTraversal();\n    tokens.push({\n      type\n    });\n  }\n  function addSpecialAttribute(name, action) {\n    tokens.push({\n      type: SelectorType.Attribute,\n      name,\n      action,\n      value: getName(1),\n      namespace: null,\n      ignoreCase: \"quirks\"\n    });\n  }\n  /**\n   * We have finished parsing the current part of the selector.\n   *\n   * Remove descendant tokens at the end if they exist,\n   * and return the last index, so that parsing can be\n   * picked up from here.\n   */\n  function finalizeSubselector() {\n    if (tokens.length && tokens[tokens.length - 1].type === SelectorType.Descendant) {\n      tokens.pop();\n    }\n    if (tokens.length === 0) {\n      throw new Error(\"Empty sub-selector\");\n    }\n    subselects.push(tokens);\n  }\n  stripWhitespace(0);\n  if (selector.length === selectorIndex) {\n    return selectorIndex;\n  }\n  loop: while (selectorIndex < selector.length) {\n    const firstChar = selector.charCodeAt(selectorIndex);\n    switch (firstChar) {\n      // Whitespace\n      case 32 /* Space */:\n      case 9 /* Tab */:\n      case 10 /* NewLine */:\n      case 12 /* FormFeed */:\n      case 13 /* CarriageReturn */:\n        {\n          if (tokens.length === 0 || tokens[0].type !== SelectorType.Descendant) {\n            ensureNotTraversal();\n            tokens.push({\n              type: SelectorType.Descendant\n            });\n          }\n          stripWhitespace(1);\n          break;\n        }\n      // Traversals\n      case 62 /* GreaterThan */:\n        {\n          addTraversal(SelectorType.Child);\n          stripWhitespace(1);\n          break;\n        }\n      case 60 /* LessThan */:\n        {\n          addTraversal(SelectorType.Parent);\n          stripWhitespace(1);\n          break;\n        }\n      case 126 /* Tilde */:\n        {\n          addTraversal(SelectorType.Sibling);\n          stripWhitespace(1);\n          break;\n        }\n      case 43 /* Plus */:\n        {\n          addTraversal(SelectorType.Adjacent);\n          stripWhitespace(1);\n          break;\n        }\n      // Special attribute selectors: .class, #id\n      case 46 /* Period */:\n        {\n          addSpecialAttribute(\"class\", AttributeAction.Element);\n          break;\n        }\n      case 35 /* Hash */:\n        {\n          addSpecialAttribute(\"id\", AttributeAction.Equals);\n          break;\n        }\n      case 91 /* LeftSquareBracket */:\n        {\n          stripWhitespace(1);\n          // Determine attribute name and namespace\n          let name;\n          let namespace = null;\n          if (selector.charCodeAt(selectorIndex) === 124 /* Pipe */) {\n            // Equivalent to no namespace\n            name = getName(1);\n          } else if (selector.startsWith(\"*|\", selectorIndex)) {\n            namespace = \"*\";\n            name = getName(2);\n          } else {\n            name = getName(0);\n            if (selector.charCodeAt(selectorIndex) === 124 /* Pipe */ && selector.charCodeAt(selectorIndex + 1) !== 61 /* Equal */) {\n              namespace = name;\n              name = getName(1);\n            }\n          }\n          stripWhitespace(0);\n          // Determine comparison operation\n          let action = AttributeAction.Exists;\n          const possibleAction = actionTypes.get(selector.charCodeAt(selectorIndex));\n          if (possibleAction) {\n            action = possibleAction;\n            if (selector.charCodeAt(selectorIndex + 1) !== 61 /* Equal */) {\n              throw new Error(\"Expected `=`\");\n            }\n            stripWhitespace(2);\n          } else if (selector.charCodeAt(selectorIndex) === 61 /* Equal */) {\n            action = AttributeAction.Equals;\n            stripWhitespace(1);\n          }\n          // Determine value\n          let value = \"\";\n          let ignoreCase = null;\n          if (action !== \"exists\") {\n            if (isQuote(selector.charCodeAt(selectorIndex))) {\n              const quote = selector.charCodeAt(selectorIndex);\n              let sectionEnd = selectorIndex + 1;\n              while (sectionEnd < selector.length && (selector.charCodeAt(sectionEnd) !== quote || isEscaped(sectionEnd))) {\n                sectionEnd += 1;\n              }\n              if (selector.charCodeAt(sectionEnd) !== quote) {\n                throw new Error(\"Attribute value didn't end\");\n              }\n              value = unescapeCSS(selector.slice(selectorIndex + 1, sectionEnd));\n              selectorIndex = sectionEnd + 1;\n            } else {\n              const valueStart = selectorIndex;\n              while (selectorIndex < selector.length && (!isWhitespace(selector.charCodeAt(selectorIndex)) && selector.charCodeAt(selectorIndex) !== 93 /* RightSquareBracket */ || isEscaped(selectorIndex))) {\n                selectorIndex += 1;\n              }\n              value = unescapeCSS(selector.slice(valueStart, selectorIndex));\n            }\n            stripWhitespace(0);\n            // See if we have a force ignore flag\n            const forceIgnore = selector.charCodeAt(selectorIndex) | 0x20;\n            // If the forceIgnore flag is set (either `i` or `s`), use that value\n            if (forceIgnore === 115 /* LowerS */) {\n              ignoreCase = false;\n              stripWhitespace(1);\n            } else if (forceIgnore === 105 /* LowerI */) {\n              ignoreCase = true;\n              stripWhitespace(1);\n            }\n          }\n          if (selector.charCodeAt(selectorIndex) !== 93 /* RightSquareBracket */) {\n            throw new Error(\"Attribute selector didn't terminate\");\n          }\n          selectorIndex += 1;\n          const attributeSelector = {\n            type: SelectorType.Attribute,\n            name,\n            action,\n            value,\n            namespace,\n            ignoreCase\n          };\n          tokens.push(attributeSelector);\n          break;\n        }\n      case 58 /* Colon */:\n        {\n          if (selector.charCodeAt(selectorIndex + 1) === 58 /* Colon */) {\n            tokens.push({\n              type: SelectorType.PseudoElement,\n              name: getName(2).toLowerCase(),\n              data: selector.charCodeAt(selectorIndex) === 40 /* LeftParenthesis */ ? readValueWithParenthesis() : null\n            });\n            continue;\n          }\n          const name = getName(1).toLowerCase();\n          let data = null;\n          if (selector.charCodeAt(selectorIndex) === 40 /* LeftParenthesis */) {\n            if (unpackPseudos.has(name)) {\n              if (isQuote(selector.charCodeAt(selectorIndex + 1))) {\n                throw new Error(`Pseudo-selector ${name} cannot be quoted`);\n              }\n              data = [];\n              selectorIndex = parseSelector(data, selector, selectorIndex + 1);\n              if (selector.charCodeAt(selectorIndex) !== 41 /* RightParenthesis */) {\n                throw new Error(`Missing closing parenthesis in :${name} (${selector})`);\n              }\n              selectorIndex += 1;\n            } else {\n              data = readValueWithParenthesis();\n              if (stripQuotesFromPseudos.has(name)) {\n                const quot = data.charCodeAt(0);\n                if (quot === data.charCodeAt(data.length - 1) && isQuote(quot)) {\n                  data = data.slice(1, -1);\n                }\n              }\n              data = unescapeCSS(data);\n            }\n          }\n          tokens.push({\n            type: SelectorType.Pseudo,\n            name,\n            data\n          });\n          break;\n        }\n      case 44 /* Comma */:\n        {\n          finalizeSubselector();\n          tokens = [];\n          stripWhitespace(1);\n          break;\n        }\n      default:\n        {\n          if (selector.startsWith(\"/*\", selectorIndex)) {\n            const endIndex = selector.indexOf(\"*/\", selectorIndex + 2);\n            if (endIndex < 0) {\n              throw new Error(\"Comment was not terminated\");\n            }\n            selectorIndex = endIndex + 2;\n            // Remove leading whitespace\n            if (tokens.length === 0) {\n              stripWhitespace(0);\n            }\n            break;\n          }\n          let namespace = null;\n          let name;\n          if (firstChar === 42 /* Asterisk */) {\n            selectorIndex += 1;\n            name = \"*\";\n          } else if (firstChar === 124 /* Pipe */) {\n            name = \"\";\n            if (selector.charCodeAt(selectorIndex + 1) === 124 /* Pipe */) {\n              addTraversal(SelectorType.ColumnCombinator);\n              stripWhitespace(2);\n              break;\n            }\n          } else if (reName.test(selector.slice(selectorIndex))) {\n            name = getName(0);\n          } else {\n            break loop;\n          }\n          if (selector.charCodeAt(selectorIndex) === 124 /* Pipe */ && selector.charCodeAt(selectorIndex + 1) !== 124 /* Pipe */) {\n            namespace = name;\n            if (selector.charCodeAt(selectorIndex + 1) === 42 /* Asterisk */) {\n              name = \"*\";\n              selectorIndex += 2;\n            } else {\n              name = getName(1);\n            }\n          }\n          tokens.push(name === \"*\" ? {\n            type: SelectorType.Universal,\n            namespace\n          } : {\n            type: SelectorType.Tag,\n            name,\n            namespace\n          });\n        }\n    }\n  }\n  finalizeSubselector();\n  return selectorIndex;\n}", "import { SelectorType, AttributeAction } from \"./types\";\nconst attribValChars = [\"\\\\\", '\"'];\nconst pseudoValChars = [...attribValChars, \"(\", \")\"];\nconst charsToEscapeInAttributeValue = new Set(attribValChars.map(c => c.charCodeAt(0)));\nconst charsToEscapeInPseudoValue = new Set(pseudoValChars.map(c => c.charCodeAt(0)));\nconst charsToEscapeInName = new Set([...pseudoValChars, \"~\", \"^\", \"$\", \"*\", \"+\", \"!\", \"|\", \":\", \"[\", \"]\", \" \", \".\"].map(c => c.charCodeAt(0)));\n/**\n * Turns `selector` back into a string.\n *\n * @param selector Selector to stringify.\n */\nexport function stringify(selector) {\n  return selector.map(token => token.map(stringifyToken).join(\"\")).join(\", \");\n}\nfunction stringifyToken(token, index, arr) {\n  switch (token.type) {\n    // Simple types\n    case SelectorType.Child:\n      return index === 0 ? \"> \" : \" > \";\n    case SelectorType.Parent:\n      return index === 0 ? \"< \" : \" < \";\n    case SelectorType.Sibling:\n      return index === 0 ? \"~ \" : \" ~ \";\n    case SelectorType.Adjacent:\n      return index === 0 ? \"+ \" : \" + \";\n    case SelectorType.Descendant:\n      return \" \";\n    case SelectorType.ColumnCombinator:\n      return index === 0 ? \"|| \" : \" || \";\n    case SelectorType.Universal:\n      // Return an empty string if the selector isn't needed.\n      return token.namespace === \"*\" && index + 1 < arr.length && \"name\" in arr[index + 1] ? \"\" : `${getNamespace(token.namespace)}*`;\n    case SelectorType.Tag:\n      return getNamespacedName(token);\n    case SelectorType.PseudoElement:\n      return `::${escapeName(token.name, charsToEscapeInName)}${token.data === null ? \"\" : `(${escapeName(token.data, charsToEscapeInPseudoValue)})`}`;\n    case SelectorType.Pseudo:\n      return `:${escapeName(token.name, charsToEscapeInName)}${token.data === null ? \"\" : `(${typeof token.data === \"string\" ? escapeName(token.data, charsToEscapeInPseudoValue) : stringify(token.data)})`}`;\n    case SelectorType.Attribute:\n      {\n        if (token.name === \"id\" && token.action === AttributeAction.Equals && token.ignoreCase === \"quirks\" && !token.namespace) {\n          return `#${escapeName(token.value, charsToEscapeInName)}`;\n        }\n        if (token.name === \"class\" && token.action === AttributeAction.Element && token.ignoreCase === \"quirks\" && !token.namespace) {\n          return `.${escapeName(token.value, charsToEscapeInName)}`;\n        }\n        const name = getNamespacedName(token);\n        if (token.action === AttributeAction.Exists) {\n          return `[${name}]`;\n        }\n        return `[${name}${getActionValue(token.action)}=\"${escapeName(token.value, charsToEscapeInAttributeValue)}\"${token.ignoreCase === null ? \"\" : token.ignoreCase ? \" i\" : \" s\"}]`;\n      }\n  }\n}\nfunction getActionValue(action) {\n  switch (action) {\n    case AttributeAction.Equals:\n      return \"\";\n    case AttributeAction.Element:\n      return \"~\";\n    case AttributeAction.Start:\n      return \"^\";\n    case AttributeAction.End:\n      return \"$\";\n    case AttributeAction.Any:\n      return \"*\";\n    case AttributeAction.Not:\n      return \"!\";\n    case AttributeAction.Hyphen:\n      return \"|\";\n    case AttributeAction.Exists:\n      throw new Error(\"Shouldn't be here\");\n  }\n}\nfunction getNamespacedName(token) {\n  return `${getNamespace(token.namespace)}${escapeName(token.name, charsToEscapeInName)}`;\n}\nfunction getNamespace(namespace) {\n  return namespace !== null ? `${namespace === \"*\" ? \"*\" : escapeName(namespace, charsToEscapeInName)}|` : \"\";\n}\nfunction escapeName(str, charsToEscape) {\n  let lastIdx = 0;\n  let ret = \"\";\n  for (let i = 0; i < str.length; i++) {\n    if (charsToEscape.has(str.charCodeAt(i))) {\n      ret += `${str.slice(lastIdx, i)}\\\\${str.charAt(i)}`;\n      lastIdx = i + 1;\n    }\n  }\n  return ret.length > 0 ? ret + str.slice(lastIdx) : str;\n}", "import * as DomUtils from \"domutils\";\nimport boolbase from \"boolbase\";\nimport { compile as compileRaw, compileUnsafe, compileToken } from \"./compile.js\";\nimport { getNextSiblings } from \"./pseudo-selectors/subselects.js\";\nconst defaultEquals = (a, b) => a === b;\nconst defaultOptions = {\n  adapter: DomUtils,\n  equals: defaultEquals\n};\nfunction convertOptionFormats(options) {\n  var _a, _b, _c, _d;\n  /*\n   * We force one format of options to the other one.\n   */\n  // @ts-expect-error Default options may have incompatible `Node` / `ElementNode`.\n  const opts = options !== null && options !== void 0 ? options : defaultOptions;\n  // @ts-expect-error Same as above.\n  (_a = opts.adapter) !== null && _a !== void 0 ? _a : opts.adapter = DomUtils;\n  // @ts-expect-error `equals` does not exist on `Options`\n  (_b = opts.equals) !== null && _b !== void 0 ? _b : opts.equals = (_d = (_c = opts.adapter) === null || _c === void 0 ? void 0 : _c.equals) !== null && _d !== void 0 ? _d : defaultEquals;\n  return opts;\n}\nfunction wrapCompile(func) {\n  return function addAdapter(selector, options, context) {\n    const opts = convertOptionFormats(options);\n    return func(selector, opts, context);\n  };\n}\n/**\n * Compiles the query, returns a function.\n */\nexport const compile = wrapCompile(compileRaw);\nexport const _compileUnsafe = wrapCompile(compileUnsafe);\nexport const _compileToken = wrapCompile(compileToken);\nfunction getSelectorFunc(searchFunc) {\n  return function select(query, elements, options) {\n    const opts = convertOptionFormats(options);\n    if (typeof query !== \"function\") {\n      query = compileUnsafe(query, opts, elements);\n    }\n    const filteredElements = prepareContext(elements, opts.adapter, query.shouldTestNextSiblings);\n    return searchFunc(query, filteredElements, opts);\n  };\n}\nexport function prepareContext(elems, adapter, shouldTestNextSiblings = false) {\n  /*\n   * Add siblings if the query requires them.\n   * See https://github.com/fb55/css-select/pull/43#issuecomment-225414692\n   */\n  if (shouldTestNextSiblings) {\n    elems = appendNextSiblings(elems, adapter);\n  }\n  return Array.isArray(elems) ? adapter.removeSubsets(elems) : adapter.getChildren(elems);\n}\nfunction appendNextSiblings(elem, adapter) {\n  // Order matters because jQuery seems to check the children before the siblings\n  const elems = Array.isArray(elem) ? elem.slice(0) : [elem];\n  const elemsLength = elems.length;\n  for (let i = 0; i < elemsLength; i++) {\n    const nextSiblings = getNextSiblings(elems[i], adapter);\n    elems.push(...nextSiblings);\n  }\n  return elems;\n}\n/**\n * @template Node The generic Node type for the DOM adapter being used.\n * @template ElementNode The Node type for elements for the DOM adapter being used.\n * @param elems Elements to query. If it is an element, its children will be queried..\n * @param query can be either a CSS selector string or a compiled query function.\n * @param [options] options for querying the document.\n * @see compile for supported selector queries.\n * @returns All matching elements.\n *\n */\nexport const selectAll = getSelectorFunc((query, elems, options) => query === boolbase.falseFunc || !elems || elems.length === 0 ? [] : options.adapter.findAll(query, elems));\n/**\n * @template Node The generic Node type for the DOM adapter being used.\n * @template ElementNode The Node type for elements for the DOM adapter being used.\n * @param elems Elements to query. If it is an element, its children will be queried..\n * @param query can be either a CSS selector string or a compiled query function.\n * @param [options] options for querying the document.\n * @see compile for supported selector queries.\n * @returns the first match, or null if there was no match.\n */\nexport const selectOne = getSelectorFunc((query, elems, options) => query === boolbase.falseFunc || !elems || elems.length === 0 ? null : options.adapter.findOne(query, elems));\n/**\n * Tests whether or not an element is matched by query.\n *\n * @template Node The generic Node type for the DOM adapter being used.\n * @template ElementNode The Node type for elements for the DOM adapter being used.\n * @param elem The element to test if it matches the query.\n * @param query can be either a CSS selector string or a compiled query function.\n * @param [options] options for querying the document.\n * @see compile for supported selector queries.\n * @returns\n */\nexport function is(elem, query, options) {\n  const opts = convertOptionFormats(options);\n  return (typeof query === \"function\" ? query : compileRaw(query, opts))(elem);\n}\n/**\n * Alias for selectAll(query, elems, options).\n * @see [compile] for supported selector queries.\n */\nexport default selectAll;\n// Export filters, pseudos and aliases to allow users to supply their own.\n/** @deprecated Use the `pseudos` option instead. */\nexport { filters, pseudos, aliases } from \"./pseudo-selectors/index.js\";\n", "import { parse, SelectorType } from \"css-what\";\nimport boolbase from \"boolbase\";\nimport sortRules, { isTraversal } from \"./sort.js\";\nimport { compileGeneralSelector } from \"./general.js\";\nimport { ensureIsTag, PLACEHOLDER_ELEMENT } from \"./pseudo-selectors/subselects.js\";\n/**\n * Compiles a selector to an executable function.\n *\n * @param selector Selector to compile.\n * @param options Compilation options.\n * @param context Optional context for the selector.\n */\nexport function compile(selector, options, context) {\n  const next = compileUnsafe(selector, options, context);\n  return ensureIsTag(next, options.adapter);\n}\nexport function compileUnsafe(selector, options, context) {\n  const token = typeof selector === \"string\" ? parse(selector) : selector;\n  return compileToken(token, options, context);\n}\nfunction includesScopePseudo(t) {\n  return t.type === SelectorType.Pseudo && (t.name === \"scope\" || Array.isArray(t.data) && t.data.some(data => data.some(includesScopePseudo)));\n}\nconst DESCENDANT_TOKEN = {\n  type: SelectorType.Descendant\n};\nconst FLEXIBLE_DESCENDANT_TOKEN = {\n  type: \"_flexibleDescendant\"\n};\nconst SCOPE_TOKEN = {\n  type: SelectorType.Pseudo,\n  name: \"scope\",\n  data: null\n};\n/*\n * CSS 4 Spec (Draft): 3.4.1. Absolutizing a Relative Selector\n * http://www.w3.org/TR/selectors4/#absolutizing\n */\nfunction absolutize(token, {\n  adapter\n}, context) {\n  // TODO Use better check if the context is a document\n  const hasContext = !!(context === null || context === void 0 ? void 0 : context.every(e => {\n    const parent = adapter.isTag(e) && adapter.getParent(e);\n    return e === PLACEHOLDER_ELEMENT || parent && adapter.isTag(parent);\n  }));\n  for (const t of token) {\n    if (t.length > 0 && isTraversal(t[0]) && t[0].type !== SelectorType.Descendant) {\n      // Don't continue in else branch\n    } else if (hasContext && !t.some(includesScopePseudo)) {\n      t.unshift(DESCENDANT_TOKEN);\n    } else {\n      continue;\n    }\n    t.unshift(SCOPE_TOKEN);\n  }\n}\nexport function compileToken(token, options, context) {\n  var _a;\n  token.forEach(sortRules);\n  context = (_a = options.context) !== null && _a !== void 0 ? _a : context;\n  const isArrayContext = Array.isArray(context);\n  const finalContext = context && (Array.isArray(context) ? context : [context]);\n  // Check if the selector is relative\n  if (options.relativeSelector !== false) {\n    absolutize(token, options, finalContext);\n  } else if (token.some(t => t.length > 0 && isTraversal(t[0]))) {\n    throw new Error(\"Relative selectors are not allowed when the `relativeSelector` option is disabled\");\n  }\n  let shouldTestNextSiblings = false;\n  const query = token.map(rules => {\n    if (rules.length >= 2) {\n      const [first, second] = rules;\n      if (first.type !== SelectorType.Pseudo || first.name !== \"scope\") {\n        // Ignore\n      } else if (isArrayContext && second.type === SelectorType.Descendant) {\n        rules[1] = FLEXIBLE_DESCENDANT_TOKEN;\n      } else if (second.type === SelectorType.Adjacent || second.type === SelectorType.Sibling) {\n        shouldTestNextSiblings = true;\n      }\n    }\n    return compileRules(rules, options, finalContext);\n  }).reduce(reduceRules, boolbase.falseFunc);\n  query.shouldTestNextSiblings = shouldTestNextSiblings;\n  return query;\n}\nfunction compileRules(rules, options, context) {\n  var _a;\n  return rules.reduce((previous, rule) => previous === boolbase.falseFunc ? boolbase.falseFunc : compileGeneralSelector(previous, rule, options, context, compileToken), (_a = options.rootFunc) !== null && _a !== void 0 ? _a : boolbase.trueFunc);\n}\nfunction reduceRules(a, b) {\n  if (b === boolbase.falseFunc || a === boolbase.trueFunc) {\n    return a;\n  }\n  if (a === boolbase.falseFunc || b === boolbase.trueFunc) {\n    return b;\n  }\n  return function combine(elem) {\n    return a(elem) || b(elem);\n  };\n}\n", "import { AttributeAction, SelectorType } from \"css-what\";\nconst procedure = new Map([[SelectorType.Universal, 50], [SelectorType.Tag, 30], [SelectorType.Attribute, 1], [SelectorType.Pseudo, 0]]);\nexport function isTraversal(token) {\n  return !procedure.has(token.type);\n}\nconst attributes = new Map([[AttributeAction.Exists, 10], [AttributeAction.Equals, 8], [AttributeAction.Not, 7], [AttributeAction.Start, 6], [AttributeAction.End, 6], [AttributeAction.Any, 5]]);\n/**\n * Sort the parts of the passed selector,\n * as there is potential for optimization\n * (some types of selectors are faster than others)\n *\n * @param arr Selector to sort\n */\nexport default function sortByProcedure(arr) {\n  const procs = arr.map(getProcedure);\n  for (let i = 1; i < arr.length; i++) {\n    const procNew = procs[i];\n    if (procNew < 0) continue;\n    for (let j = i - 1; j >= 0 && procNew < procs[j]; j--) {\n      const token = arr[j + 1];\n      arr[j + 1] = arr[j];\n      arr[j] = token;\n      procs[j + 1] = procs[j];\n      procs[j] = procNew;\n    }\n  }\n}\nfunction getProcedure(token) {\n  var _a, _b;\n  let proc = (_a = procedure.get(token.type)) !== null && _a !== void 0 ? _a : -1;\n  if (token.type === SelectorType.Attribute) {\n    proc = (_b = attributes.get(token.action)) !== null && _b !== void 0 ? _b : 4;\n    if (token.action === AttributeAction.Equals && token.name === \"id\") {\n      // Prefer ID selectors (eg. #ID)\n      proc = 9;\n    }\n    if (token.ignoreCase) {\n      /*\n       * IgnoreCase adds some overhead, prefer \"normal\" token\n       * this is a binary operation, to ensure it's still an int\n       */\n      proc >>= 1;\n    }\n  } else if (token.type === SelectorType.Pseudo) {\n    if (!token.data) {\n      proc = 3;\n    } else if (token.name === \"has\" || token.name === \"contains\") {\n      proc = 0; // Expensive in any case\n    } else if (Array.isArray(token.data)) {\n      // Eg. :matches, :not\n      proc = Math.min(...token.data.map(d => Math.min(...d.map(getProcedure))));\n      // If we have traversals, try to avoid executing this selector\n      if (proc < 0) {\n        proc = 0;\n      }\n    } else {\n      proc = 2;\n    }\n  }\n  return proc;\n}\n", "import boolbase from \"boolbase\";\n/**\n * All reserved characters in a regex, used for escaping.\n *\n * Taken from XRegExp, (c) 2007-2020 Steven Levithan under the MIT license\n * https://github.com/slevithan/xregexp/blob/95eeebeb8fac8754d54eafe2b4743661ac1cf028/src/xregexp.js#L794\n */\nconst reChars = /[-[\\]{}()*+?.,\\\\^$|#\\s]/g;\nfunction escapeRegex(value) {\n  return value.replace(reChars, \"\\\\$&\");\n}\n/**\n * Attributes that are case-insensitive in HTML.\n *\n * @private\n * @see https://html.spec.whatwg.org/multipage/semantics-other.html#case-sensitivity-of-selectors\n */\nconst caseInsensitiveAttributes = new Set([\"accept\", \"accept-charset\", \"align\", \"alink\", \"axis\", \"bgcolor\", \"charset\", \"checked\", \"clear\", \"codetype\", \"color\", \"compact\", \"declare\", \"defer\", \"dir\", \"direction\", \"disabled\", \"enctype\", \"face\", \"frame\", \"hreflang\", \"http-equiv\", \"lang\", \"language\", \"link\", \"media\", \"method\", \"multiple\", \"nohref\", \"noresize\", \"noshade\", \"nowrap\", \"readonly\", \"rel\", \"rev\", \"rules\", \"scope\", \"scrolling\", \"selected\", \"shape\", \"target\", \"text\", \"type\", \"valign\", \"valuetype\", \"vlink\"]);\nfunction shouldIgnoreCase(selector, options) {\n  return typeof selector.ignoreCase === \"boolean\" ? selector.ignoreCase : selector.ignoreCase === \"quirks\" ? !!options.quirksMode : !options.xmlMode && caseInsensitiveAttributes.has(selector.name);\n}\n/**\n * Attribute selectors\n */\nexport const attributeRules = {\n  equals(next, data, options) {\n    const {\n      adapter\n    } = options;\n    const {\n      name\n    } = data;\n    let {\n      value\n    } = data;\n    if (shouldIgnoreCase(data, options)) {\n      value = value.toLowerCase();\n      return elem => {\n        const attr = adapter.getAttributeValue(elem, name);\n        return attr != null && attr.length === value.length && attr.toLowerCase() === value && next(elem);\n      };\n    }\n    return elem => adapter.getAttributeValue(elem, name) === value && next(elem);\n  },\n  hyphen(next, data, options) {\n    const {\n      adapter\n    } = options;\n    const {\n      name\n    } = data;\n    let {\n      value\n    } = data;\n    const len = value.length;\n    if (shouldIgnoreCase(data, options)) {\n      value = value.toLowerCase();\n      return function hyphenIC(elem) {\n        const attr = adapter.getAttributeValue(elem, name);\n        return attr != null && (attr.length === len || attr.charAt(len) === \"-\") && attr.substr(0, len).toLowerCase() === value && next(elem);\n      };\n    }\n    return function hyphen(elem) {\n      const attr = adapter.getAttributeValue(elem, name);\n      return attr != null && (attr.length === len || attr.charAt(len) === \"-\") && attr.substr(0, len) === value && next(elem);\n    };\n  },\n  element(next, data, options) {\n    const {\n      adapter\n    } = options;\n    const {\n      name,\n      value\n    } = data;\n    if (/\\s/.test(value)) {\n      return boolbase.falseFunc;\n    }\n    const regex = new RegExp(`(?:^|\\\\s)${escapeRegex(value)}(?:$|\\\\s)`, shouldIgnoreCase(data, options) ? \"i\" : \"\");\n    return function element(elem) {\n      const attr = adapter.getAttributeValue(elem, name);\n      return attr != null && attr.length >= value.length && regex.test(attr) && next(elem);\n    };\n  },\n  exists(next, {\n    name\n  }, {\n    adapter\n  }) {\n    return elem => adapter.hasAttrib(elem, name) && next(elem);\n  },\n  start(next, data, options) {\n    const {\n      adapter\n    } = options;\n    const {\n      name\n    } = data;\n    let {\n      value\n    } = data;\n    const len = value.length;\n    if (len === 0) {\n      return boolbase.falseFunc;\n    }\n    if (shouldIgnoreCase(data, options)) {\n      value = value.toLowerCase();\n      return elem => {\n        const attr = adapter.getAttributeValue(elem, name);\n        return attr != null && attr.length >= len && attr.substr(0, len).toLowerCase() === value && next(elem);\n      };\n    }\n    return elem => {\n      var _a;\n      return !!((_a = adapter.getAttributeValue(elem, name)) === null || _a === void 0 ? void 0 : _a.startsWith(value)) && next(elem);\n    };\n  },\n  end(next, data, options) {\n    const {\n      adapter\n    } = options;\n    const {\n      name\n    } = data;\n    let {\n      value\n    } = data;\n    const len = -value.length;\n    if (len === 0) {\n      return boolbase.falseFunc;\n    }\n    if (shouldIgnoreCase(data, options)) {\n      value = value.toLowerCase();\n      return elem => {\n        var _a;\n        return ((_a = adapter.getAttributeValue(elem, name)) === null || _a === void 0 ? void 0 : _a.substr(len).toLowerCase()) === value && next(elem);\n      };\n    }\n    return elem => {\n      var _a;\n      return !!((_a = adapter.getAttributeValue(elem, name)) === null || _a === void 0 ? void 0 : _a.endsWith(value)) && next(elem);\n    };\n  },\n  any(next, data, options) {\n    const {\n      adapter\n    } = options;\n    const {\n      name,\n      value\n    } = data;\n    if (value === \"\") {\n      return boolbase.falseFunc;\n    }\n    if (shouldIgnoreCase(data, options)) {\n      const regex = new RegExp(escapeRegex(value), \"i\");\n      return function anyIC(elem) {\n        const attr = adapter.getAttributeValue(elem, name);\n        return attr != null && attr.length >= value.length && regex.test(attr) && next(elem);\n      };\n    }\n    return elem => {\n      var _a;\n      return !!((_a = adapter.getAttributeValue(elem, name)) === null || _a === void 0 ? void 0 : _a.includes(value)) && next(elem);\n    };\n  },\n  not(next, data, options) {\n    const {\n      adapter\n    } = options;\n    const {\n      name\n    } = data;\n    let {\n      value\n    } = data;\n    if (value === \"\") {\n      return elem => !!adapter.getAttributeValue(elem, name) && next(elem);\n    } else if (shouldIgnoreCase(data, options)) {\n      value = value.toLowerCase();\n      return elem => {\n        const attr = adapter.getAttributeValue(elem, name);\n        return (attr == null || attr.length !== value.length || attr.toLowerCase() !== value) && next(elem);\n      };\n    }\n    return elem => adapter.getAttributeValue(elem, name) !== value && next(elem);\n  }\n};\n", "// Following http://www.w3.org/TR/css3-selectors/#nth-child-pseudo\n// Whitespace as per https://www.w3.org/TR/selectors-3/#lex is \" \\t\\r\\n\\f\"\nconst whitespace = new Set([9, 10, 12, 13, 32]);\nconst ZERO = \"0\".charCodeAt(0);\nconst NINE = \"9\".charCodeAt(0);\n/**\n * Parses an expression.\n *\n * @throws An `Error` if parsing fails.\n * @returns An array containing the integer step size and the integer offset of the nth rule.\n * @example nthCheck.parse(\"2n+3\"); // returns [2, 3]\n */\nexport function parse(formula) {\n  formula = formula.trim().toLowerCase();\n  if (formula === \"even\") {\n    return [2, 0];\n  } else if (formula === \"odd\") {\n    return [2, 1];\n  }\n  // Parse [ ['-'|'+']? INTEGER? {N} [ S* ['-'|'+'] S* INTEGER ]?\n  let idx = 0;\n  let a = 0;\n  let sign = readSign();\n  let number = readNumber();\n  if (idx < formula.length && formula.charAt(idx) === \"n\") {\n    idx++;\n    a = sign * (number !== null && number !== void 0 ? number : 1);\n    skipWhitespace();\n    if (idx < formula.length) {\n      sign = readSign();\n      skipWhitespace();\n      number = readNumber();\n    } else {\n      sign = number = 0;\n    }\n  }\n  // Throw if there is anything else\n  if (number === null || idx < formula.length) {\n    throw new Error(`n-th rule couldn't be parsed ('${formula}')`);\n  }\n  return [a, sign * number];\n  function readSign() {\n    if (formula.charAt(idx) === \"-\") {\n      idx++;\n      return -1;\n    }\n    if (formula.charAt(idx) === \"+\") {\n      idx++;\n    }\n    return 1;\n  }\n  function readNumber() {\n    const start = idx;\n    let value = 0;\n    while (idx < formula.length && formula.charCodeAt(idx) >= ZERO && formula.charCodeAt(idx) <= NINE) {\n      value = value * 10 + (formula.charCodeAt(idx) - ZERO);\n      idx++;\n    }\n    // Return `null` if we didn't read anything.\n    return idx === start ? null : value;\n  }\n  function skipWhitespace() {\n    while (idx < formula.length && whitespace.has(formula.charCodeAt(idx))) {\n      idx++;\n    }\n  }\n}\n", "import boolbase from \"boolbase\";\n/**\n * Returns a function that checks if an elements index matches the given rule\n * highly optimized to return the fastest solution.\n *\n * @param parsed A tuple [a, b], as returned by `parse`.\n * @returns A highly optimized function that returns whether an index matches the nth-check.\n * @example\n *\n * ```js\n * const check = nthCheck.compile([2, 3]);\n *\n * check(0); // `false`\n * check(1); // `false`\n * check(2); // `true`\n * check(3); // `false`\n * check(4); // `true`\n * check(5); // `false`\n * check(6); // `true`\n * ```\n */\nexport function compile(parsed) {\n  const a = parsed[0];\n  // Subtract 1 from `b`, to convert from one- to zero-indexed.\n  const b = parsed[1] - 1;\n  /*\n   * When `b <= 0`, `a * n` won't be lead to any matches for `a < 0`.\n   * Besides, the specification states that no elements are\n   * matched when `a` and `b` are 0.\n   *\n   * `b < 0` here as we subtracted 1 from `b` above.\n   */\n  if (b < 0 && a <= 0) return boolbase.falseFunc;\n  // When `a` is in the range -1..1, it matches any element (so only `b` is checked).\n  if (a === -1) return index => index <= b;\n  if (a === 0) return index => index === b;\n  // When `b <= 0` and `a === 1`, they match any element.\n  if (a === 1) return b < 0 ? boolbase.trueFunc : index => index >= b;\n  /*\n   * Otherwise, modulo can be used to check if there is a match.\n   *\n   * Modulo doesn't care about the sign, so let's use `a`s absolute value.\n   */\n  const absA = Math.abs(a);\n  // Get `b mod a`, + a if this is negative.\n  const bMod = (b % absA + absA) % absA;\n  return a > 1 ? index => index >= b && index % absA === bMod : index => index <= b && index % absA === bMod;\n}\n/**\n * Returns a function that produces a monotonously increasing sequence of indices.\n *\n * If the sequence has an end, the returned function will return `null` after\n * the last index in the sequence.\n *\n * @param parsed A tuple [a, b], as returned by `parse`.\n * @returns A function that produces a sequence of indices.\n * @example <caption>Always increasing (2n+3)</caption>\n *\n * ```js\n * const gen = nthCheck.generate([2, 3])\n *\n * gen() // `1`\n * gen() // `3`\n * gen() // `5`\n * gen() // `8`\n * gen() // `11`\n * ```\n *\n * @example <caption>With end value (-2n+10)</caption>\n *\n * ```js\n *\n * const gen = nthCheck.generate([-2, 5]);\n *\n * gen() // 0\n * gen() // 2\n * gen() // 4\n * gen() // null\n * ```\n */\nexport function generate(parsed) {\n  const a = parsed[0];\n  // Subtract 1 from `b`, to convert from one- to zero-indexed.\n  let b = parsed[1] - 1;\n  let n = 0;\n  // Make sure to always return an increasing sequence\n  if (a < 0) {\n    const aPos = -a;\n    // Get `b mod a`\n    const minValue = (b % aPos + aPos) % aPos;\n    return () => {\n      const val = minValue + aPos * n++;\n      return val > b ? null : val;\n    };\n  }\n  if (a === 0) return b < 0 ?\n  // There are no result — always return `null`\n  () => null :\n  // Return `b` exactly once\n  () => n++ === 0 ? b : null;\n  if (b < 0) {\n    b += a * Math.ceil(-b / a);\n  }\n  return () => a * n++ + b;\n}\n", "import { parse } from \"./parse.js\";\nimport { compile, generate } from \"./compile.js\";\nexport { parse, compile, generate };\n/**\n * Parses and compiles a formula to a highly optimized function.\n * Combination of {@link parse} and {@link compile}.\n *\n * If the formula doesn't match any elements,\n * it returns [`boolbase`](https://github.com/fb55/boolbase)'s `falseFunc`.\n * Otherwise, a function accepting an _index_ is returned, which returns\n * whether or not the passed _index_ matches the formula.\n *\n * Note: The nth-rule starts counting at `1`, the returned function at `0`.\n *\n * @param formula The formula to compile.\n * @example\n * const check = nthCheck(\"2n+3\");\n *\n * check(0); // `false`\n * check(1); // `false`\n * check(2); // `true`\n * check(3); // `false`\n * check(4); // `true`\n * check(5); // `false`\n * check(6); // `true`\n */\nexport default function nthCheck(formula) {\n  return compile(parse(formula));\n}\n/**\n * Parses and compiles a formula to a generator that produces a sequence of indices.\n * Combination of {@link parse} and {@link generate}.\n *\n * @param formula The formula to compile.\n * @returns A function that produces a sequence of indices.\n * @example <caption>Always increasing</caption>\n *\n * ```js\n * const gen = nthCheck.sequence('2n+3')\n *\n * gen() // `1`\n * gen() // `3`\n * gen() // `5`\n * gen() // `8`\n * gen() // `11`\n * ```\n *\n * @example <caption>With end value</caption>\n *\n * ```js\n *\n * const gen = nthCheck.sequence('-2n+5');\n *\n * gen() // 0\n * gen() // 2\n * gen() // 4\n * gen() // null\n * ```\n */\nexport function sequence(formula) {\n  return generate(parse(formula));\n}\n", "import getNCheck from \"nth-check\";\nimport boolbase from \"boolbase\";\nfunction getChildFunc(next, adapter) {\n  return elem => {\n    const parent = adapter.getParent(elem);\n    return parent != null && adapter.isTag(parent) && next(elem);\n  };\n}\nexport const filters = {\n  contains(next, text, {\n    adapter\n  }) {\n    return function contains(elem) {\n      return next(elem) && adapter.getText(elem).includes(text);\n    };\n  },\n  icontains(next, text, {\n    adapter\n  }) {\n    const itext = text.toLowerCase();\n    return function icontains(elem) {\n      return next(elem) && adapter.getText(elem).toLowerCase().includes(itext);\n    };\n  },\n  // Location specific methods\n  \"nth-child\"(next, rule, {\n    adapter,\n    equals\n  }) {\n    const func = getNCheck(rule);\n    if (func === boolbase.falseFunc) return boolbase.falseFunc;\n    if (func === boolbase.trueFunc) return getChildFunc(next, adapter);\n    return function nthChild(elem) {\n      const siblings = adapter.getSiblings(elem);\n      let pos = 0;\n      for (let i = 0; i < siblings.length; i++) {\n        if (equals(elem, siblings[i])) break;\n        if (adapter.isTag(siblings[i])) {\n          pos++;\n        }\n      }\n      return func(pos) && next(elem);\n    };\n  },\n  \"nth-last-child\"(next, rule, {\n    adapter,\n    equals\n  }) {\n    const func = getNCheck(rule);\n    if (func === boolbase.falseFunc) return boolbase.falseFunc;\n    if (func === boolbase.trueFunc) return getChildFunc(next, adapter);\n    return function nthLastChild(elem) {\n      const siblings = adapter.getSiblings(elem);\n      let pos = 0;\n      for (let i = siblings.length - 1; i >= 0; i--) {\n        if (equals(elem, siblings[i])) break;\n        if (adapter.isTag(siblings[i])) {\n          pos++;\n        }\n      }\n      return func(pos) && next(elem);\n    };\n  },\n  \"nth-of-type\"(next, rule, {\n    adapter,\n    equals\n  }) {\n    const func = getNCheck(rule);\n    if (func === boolbase.falseFunc) return boolbase.falseFunc;\n    if (func === boolbase.trueFunc) return getChildFunc(next, adapter);\n    return function nthOfType(elem) {\n      const siblings = adapter.getSiblings(elem);\n      let pos = 0;\n      for (let i = 0; i < siblings.length; i++) {\n        const currentSibling = siblings[i];\n        if (equals(elem, currentSibling)) break;\n        if (adapter.isTag(currentSibling) && adapter.getName(currentSibling) === adapter.getName(elem)) {\n          pos++;\n        }\n      }\n      return func(pos) && next(elem);\n    };\n  },\n  \"nth-last-of-type\"(next, rule, {\n    adapter,\n    equals\n  }) {\n    const func = getNCheck(rule);\n    if (func === boolbase.falseFunc) return boolbase.falseFunc;\n    if (func === boolbase.trueFunc) return getChildFunc(next, adapter);\n    return function nthLastOfType(elem) {\n      const siblings = adapter.getSiblings(elem);\n      let pos = 0;\n      for (let i = siblings.length - 1; i >= 0; i--) {\n        const currentSibling = siblings[i];\n        if (equals(elem, currentSibling)) break;\n        if (adapter.isTag(currentSibling) && adapter.getName(currentSibling) === adapter.getName(elem)) {\n          pos++;\n        }\n      }\n      return func(pos) && next(elem);\n    };\n  },\n  // TODO determine the actual root element\n  root(next, _rule, {\n    adapter\n  }) {\n    return elem => {\n      const parent = adapter.getParent(elem);\n      return (parent == null || !adapter.isTag(parent)) && next(elem);\n    };\n  },\n  scope(next, rule, options, context) {\n    const {\n      equals\n    } = options;\n    if (!context || context.length === 0) {\n      // Equivalent to :root\n      return filters[\"root\"](next, rule, options);\n    }\n    if (context.length === 1) {\n      // NOTE: can't be unpacked, as :has uses this for side-effects\n      return elem => equals(context[0], elem) && next(elem);\n    }\n    return elem => context.includes(elem) && next(elem);\n  },\n  hover: dynamicStatePseudo(\"isHovered\"),\n  visited: dynamicStatePseudo(\"isVisited\"),\n  active: dynamicStatePseudo(\"isActive\")\n};\n/**\n * Dynamic state pseudos. These depend on optional Adapter methods.\n *\n * @param name The name of the adapter method to call.\n * @returns Pseudo for the `filters` object.\n */\nfunction dynamicStatePseudo(name) {\n  return function dynamicPseudo(next, _rule, {\n    adapter\n  }) {\n    const func = adapter[name];\n    if (typeof func !== \"function\") {\n      return boolbase.falseFunc;\n    }\n    return function active(elem) {\n      return func(elem) && next(elem);\n    };\n  };\n}\n", "// While filters are precompiled, pseudos get called when they are needed\nexport const pseudos = {\n  empty(elem, {\n    adapter\n  }) {\n    return !adapter.getChildren(elem).some(elem =>\n    // FIXME: `getText` call is potentially expensive.\n    adapter.isTag(elem) || adapter.getText(elem) !== \"\");\n  },\n  \"first-child\"(elem, {\n    adapter,\n    equals\n  }) {\n    if (adapter.prevElementSibling) {\n      return adapter.prevElementSibling(elem) == null;\n    }\n    const firstChild = adapter.getSiblings(elem).find(elem => adapter.isTag(elem));\n    return firstChild != null && equals(elem, firstChild);\n  },\n  \"last-child\"(elem, {\n    adapter,\n    equals\n  }) {\n    const siblings = adapter.getSiblings(elem);\n    for (let i = siblings.length - 1; i >= 0; i--) {\n      if (equals(elem, siblings[i])) return true;\n      if (adapter.isTag(siblings[i])) break;\n    }\n    return false;\n  },\n  \"first-of-type\"(elem, {\n    adapter,\n    equals\n  }) {\n    const siblings = adapter.getSiblings(elem);\n    const elemName = adapter.getName(elem);\n    for (let i = 0; i < siblings.length; i++) {\n      const currentSibling = siblings[i];\n      if (equals(elem, currentSibling)) return true;\n      if (adapter.isTag(currentSibling) && adapter.getName(currentSibling) === elemName) {\n        break;\n      }\n    }\n    return false;\n  },\n  \"last-of-type\"(elem, {\n    adapter,\n    equals\n  }) {\n    const siblings = adapter.getSiblings(elem);\n    const elemName = adapter.getName(elem);\n    for (let i = siblings.length - 1; i >= 0; i--) {\n      const currentSibling = siblings[i];\n      if (equals(elem, currentSibling)) return true;\n      if (adapter.isTag(currentSibling) && adapter.getName(currentSibling) === elemName) {\n        break;\n      }\n    }\n    return false;\n  },\n  \"only-of-type\"(elem, {\n    adapter,\n    equals\n  }) {\n    const elemName = adapter.getName(elem);\n    return adapter.getSiblings(elem).every(sibling => equals(elem, sibling) || !adapter.isTag(sibling) || adapter.getName(sibling) !== elemName);\n  },\n  \"only-child\"(elem, {\n    adapter,\n    equals\n  }) {\n    return adapter.getSiblings(elem).every(sibling => equals(elem, sibling) || !adapter.isTag(sibling));\n  }\n};\nexport function verifyPseudoArgs(func, name, subselect, argIndex) {\n  if (subselect === null) {\n    if (func.length > argIndex) {\n      throw new Error(`Pseudo-class :${name} requires an argument`);\n    }\n  } else if (func.length === argIndex) {\n    throw new Error(`Pseudo-class :${name} doesn't have any arguments`);\n  }\n}\n", "/**\n * Aliases are pseudos that are expressed as selectors.\n */\nexport const aliases = {\n  // Links\n  \"any-link\": \":is(a, area, link)[href]\",\n  link: \":any-link:not(:visited)\",\n  // Forms\n  // https://html.spec.whatwg.org/multipage/scripting.html#disabled-elements\n  disabled: `:is(\n        :is(button, input, select, textarea, optgroup, option)[disabled],\n        optgroup[disabled] > option,\n        fieldset[disabled]:not(fieldset[disabled] legend:first-of-type *)\n    )`,\n  enabled: \":not(:disabled)\",\n  checked: \":is(:is(input[type=radio], input[type=checkbox])[checked], option:selected)\",\n  required: \":is(input, select, textarea)[required]\",\n  optional: \":is(input, select, textarea):not([required])\",\n  // JQuery extensions\n  // https://html.spec.whatwg.org/multipage/form-elements.html#concept-option-selectedness\n  selected: \"option:is([selected], select:not([multiple]):not(:has(> option[selected])) > :first-of-type)\",\n  checkbox: \"[type=checkbox]\",\n  file: \"[type=file]\",\n  password: \"[type=password]\",\n  radio: \"[type=radio]\",\n  reset: \"[type=reset]\",\n  image: \"[type=image]\",\n  submit: \"[type=submit]\",\n  parent: \":not(:empty)\",\n  header: \":is(h1, h2, h3, h4, h5, h6)\",\n  button: \":is(button, input[type=button])\",\n  input: \":is(input, textarea, select, button)\",\n  text: \"input:is(:not([type!='']), [type=text])\"\n};\n", "import boolbase from \"boolbase\";\nimport { isTraversal } from \"../sort.js\";\n/** Used as a placeholder for :has. Will be replaced with the actual element. */\nexport const PLACEHOLDER_ELEMENT = {};\nexport function ensureIsTag(next, adapter) {\n  if (next === boolbase.falseFunc) return boolbase.falseFunc;\n  return elem => adapter.isTag(elem) && next(elem);\n}\nexport function getNextSiblings(elem, adapter) {\n  const siblings = adapter.getSiblings(elem);\n  if (siblings.length <= 1) return [];\n  const elemIndex = siblings.indexOf(elem);\n  if (elemIndex < 0 || elemIndex === siblings.length - 1) return [];\n  return siblings.slice(elemIndex + 1).filter(adapter.isTag);\n}\nfunction copyOptions(options) {\n  // Not copied: context, rootFunc\n  return {\n    xmlMode: !!options.xmlMode,\n    lowerCaseAttributeNames: !!options.lowerCaseAttributeNames,\n    lowerCaseTags: !!options.lowerCaseTags,\n    quirksMode: !!options.quirksMode,\n    cacheResults: !!options.cacheResults,\n    pseudos: options.pseudos,\n    adapter: options.adapter,\n    equals: options.equals\n  };\n}\nconst is = (next, token, options, context, compileToken) => {\n  const func = compileToken(token, copyOptions(options), context);\n  return func === boolbase.trueFunc ? next : func === boolbase.falseFunc ? boolbase.falseFunc : elem => func(elem) && next(elem);\n};\n/*\n * :not, :has, :is, :matches and :where have to compile selectors\n * doing this in src/pseudos.ts would lead to circular dependencies,\n * so we add them here\n */\nexport const subselects = {\n  is,\n  /**\n   * `:matches` and `:where` are aliases for `:is`.\n   */\n  matches: is,\n  where: is,\n  not(next, token, options, context, compileToken) {\n    const func = compileToken(token, copyOptions(options), context);\n    return func === boolbase.falseFunc ? next : func === boolbase.trueFunc ? boolbase.falseFunc : elem => !func(elem) && next(elem);\n  },\n  has(next, subselect, options, _context, compileToken) {\n    const {\n      adapter\n    } = options;\n    const opts = copyOptions(options);\n    opts.relativeSelector = true;\n    const context = subselect.some(s => s.some(isTraversal)) ?\n    // Used as a placeholder. Will be replaced with the actual element.\n    [PLACEHOLDER_ELEMENT] : undefined;\n    const compiled = compileToken(subselect, opts, context);\n    if (compiled === boolbase.falseFunc) return boolbase.falseFunc;\n    const hasElement = ensureIsTag(compiled, adapter);\n    // If `compiled` is `trueFunc`, we can skip this.\n    if (context && compiled !== boolbase.trueFunc) {\n      /*\n       * `shouldTestNextSiblings` will only be true if the query starts with\n       * a traversal (sibling or adjacent). That means we will always have a context.\n       */\n      const {\n        shouldTestNextSiblings = false\n      } = compiled;\n      return elem => {\n        if (!next(elem)) return false;\n        context[0] = elem;\n        const childs = adapter.getChildren(elem);\n        const nextElements = shouldTestNextSiblings ? [...childs, ...getNextSiblings(elem, adapter)] : childs;\n        return adapter.existsOne(hasElement, nextElements);\n      };\n    }\n    return elem => next(elem) && adapter.existsOne(hasElement, adapter.getChildren(elem));\n  }\n};\n", "import { parse } from \"css-what\";\nimport { filters } from \"./filters.js\";\nimport { pseudos, verifyPseudoArgs } from \"./pseudos.js\";\nimport { aliases } from \"./aliases.js\";\nimport { subselects } from \"./subselects.js\";\nexport { filters, pseudos, aliases };\nexport function compilePseudoSelector(next, selector, options, context, compileToken) {\n  var _a;\n  const {\n    name,\n    data\n  } = selector;\n  if (Array.isArray(data)) {\n    if (!(name in subselects)) {\n      throw new Error(`Unknown pseudo-class :${name}(${data})`);\n    }\n    return subselects[name](next, data, options, context, compileToken);\n  }\n  const userPseudo = (_a = options.pseudos) === null || _a === void 0 ? void 0 : _a[name];\n  const stringPseudo = typeof userPseudo === \"string\" ? userPseudo : aliases[name];\n  if (typeof stringPseudo === \"string\") {\n    if (data != null) {\n      throw new Error(`Pseudo ${name} doesn't have any arguments`);\n    }\n    // The alias has to be parsed here, to make sure options are respected.\n    const alias = parse(stringPseudo);\n    return subselects[\"is\"](next, alias, options, context, compileToken);\n  }\n  if (typeof userPseudo === \"function\") {\n    verifyPseudoArgs(userPseudo, name, data, 1);\n    return elem => userPseudo(elem, data) && next(elem);\n  }\n  if (name in filters) {\n    return filters[name](next, data, options, context);\n  }\n  if (name in pseudos) {\n    const pseudo = pseudos[name];\n    verifyPseudoArgs(pseudo, name, data, 2);\n    return elem => pseudo(elem, options, data) && next(elem);\n  }\n  throw new Error(`Unknown pseudo-class :${name}`);\n}\n", "import { attributeRules } from \"./attributes.js\";\nimport { compilePseudoSelector } from \"./pseudo-selectors/index.js\";\nimport { SelectorType } from \"css-what\";\nfunction getElementParent(node, adapter) {\n  const parent = adapter.getParent(node);\n  if (parent && adapter.isTag(parent)) {\n    return parent;\n  }\n  return null;\n}\n/*\n * All available rules\n */\nexport function compileGeneralSelector(next, selector, options, context, compileToken) {\n  const {\n    adapter,\n    equals\n  } = options;\n  switch (selector.type) {\n    case SelectorType.PseudoElement:\n      {\n        throw new Error(\"Pseudo-elements are not supported by css-select\");\n      }\n    case SelectorType.ColumnCombinator:\n      {\n        throw new Error(\"Column combinators are not yet supported by css-select\");\n      }\n    case SelectorType.Attribute:\n      {\n        if (selector.namespace != null) {\n          throw new Error(\"Namespaced attributes are not yet supported by css-select\");\n        }\n        if (!options.xmlMode || options.lowerCaseAttributeNames) {\n          selector.name = selector.name.toLowerCase();\n        }\n        return attributeRules[selector.action](next, selector, options);\n      }\n    case SelectorType.Pseudo:\n      {\n        return compilePseudoSelector(next, selector, options, context, compileToken);\n      }\n    // Tags\n    case SelectorType.Tag:\n      {\n        if (selector.namespace != null) {\n          throw new Error(\"Namespaced tag names are not yet supported by css-select\");\n        }\n        let {\n          name\n        } = selector;\n        if (!options.xmlMode || options.lowerCaseTags) {\n          name = name.toLowerCase();\n        }\n        return function tag(elem) {\n          return adapter.getName(elem) === name && next(elem);\n        };\n      }\n    // Traversal\n    case SelectorType.Descendant:\n      {\n        if (options.cacheResults === false || typeof WeakSet === \"undefined\") {\n          return function descendant(elem) {\n            let current = elem;\n            while (current = getElementParent(current, adapter)) {\n              if (next(current)) {\n                return true;\n              }\n            }\n            return false;\n          };\n        }\n        // @ts-expect-error `ElementNode` is not extending object\n        const isFalseCache = new WeakSet();\n        return function cachedDescendant(elem) {\n          let current = elem;\n          while (current = getElementParent(current, adapter)) {\n            if (!isFalseCache.has(current)) {\n              if (adapter.isTag(current) && next(current)) {\n                return true;\n              }\n              isFalseCache.add(current);\n            }\n          }\n          return false;\n        };\n      }\n    case \"_flexibleDescendant\":\n      {\n        // Include element itself, only used while querying an array\n        return function flexibleDescendant(elem) {\n          let current = elem;\n          do {\n            if (next(current)) return true;\n          } while (current = getElementParent(current, adapter));\n          return false;\n        };\n      }\n    case SelectorType.Parent:\n      {\n        return function parent(elem) {\n          return adapter.getChildren(elem).some(elem => adapter.isTag(elem) && next(elem));\n        };\n      }\n    case SelectorType.Child:\n      {\n        return function child(elem) {\n          const parent = adapter.getParent(elem);\n          return parent != null && adapter.isTag(parent) && next(parent);\n        };\n      }\n    case SelectorType.Sibling:\n      {\n        return function sibling(elem) {\n          const siblings = adapter.getSiblings(elem);\n          for (let i = 0; i < siblings.length; i++) {\n            const currentSibling = siblings[i];\n            if (equals(elem, currentSibling)) break;\n            if (adapter.isTag(currentSibling) && next(currentSibling)) {\n              return true;\n            }\n          }\n          return false;\n        };\n      }\n    case SelectorType.Adjacent:\n      {\n        if (adapter.prevElementSibling) {\n          return function adjacent(elem) {\n            const previous = adapter.prevElementSibling(elem);\n            return previous != null && next(previous);\n          };\n        }\n        return function adjacent(elem) {\n          const siblings = adapter.getSiblings(elem);\n          let lastElement;\n          for (let i = 0; i < siblings.length; i++) {\n            const currentSibling = siblings[i];\n            if (equals(elem, currentSibling)) break;\n            if (adapter.isTag(currentSibling)) {\n              lastElement = currentSibling;\n            }\n          }\n          return !!lastElement && next(lastElement);\n        };\n      }\n    case SelectorType.Universal:\n      {\n        if (selector.namespace != null && selector.namespace !== \"*\") {\n          throw new Error(\"Namespaced universal selectors are not yet supported by css-select\");\n        }\n        return next;\n      }\n  }\n}\n", "import { parse, SelectorType, isTraversal } from \"css-what\";\nimport { _compileToken as compileToken, prepareContext } from \"css-select\";\nimport * as DomUtils from \"domutils\";\nimport * as boolbase from \"boolbase\";\nimport { getDocumentRoot, groupSelectors } from \"./helpers.js\";\nimport { isFilter, getLimit } from \"./positionals.js\";\n// Re-export pseudo extension points\nexport { filters, pseudos, aliases } from \"css-select\";\nconst UNIVERSAL_SELECTOR = {\n  type: SelectorType.Universal,\n  namespace: null\n};\nconst SCOPE_PSEUDO = {\n  type: SelectorType.Pseudo,\n  name: \"scope\",\n  data: null\n};\nexport function is(element, selector, options = {}) {\n  return some([element], selector, options);\n}\nexport function some(elements, selector, options = {}) {\n  if (typeof selector === \"function\") return elements.some(selector);\n  const [plain, filtered] = groupSelectors(parse(selector));\n  return plain.length > 0 && elements.some(compileToken(plain, options)) || filtered.some(sel => filterBySelector(sel, elements, options).length > 0);\n}\nfunction filterByPosition(filter, elems, data, options) {\n  const num = typeof data === \"string\" ? parseInt(data, 10) : NaN;\n  switch (filter) {\n    case \"first\":\n    case \"lt\":\n      // Already done in `getLimit`\n      return elems;\n    case \"last\":\n      return elems.length > 0 ? [elems[elems.length - 1]] : elems;\n    case \"nth\":\n    case \"eq\":\n      return isFinite(num) && Math.abs(num) < elems.length ? [num < 0 ? elems[elems.length + num] : elems[num]] : [];\n    case \"gt\":\n      return isFinite(num) ? elems.slice(num + 1) : [];\n    case \"even\":\n      return elems.filter((_, i) => i % 2 === 0);\n    case \"odd\":\n      return elems.filter((_, i) => i % 2 === 1);\n    case \"not\":\n      {\n        const filtered = new Set(filterParsed(data, elems, options));\n        return elems.filter(e => !filtered.has(e));\n      }\n  }\n}\nexport function filter(selector, elements, options = {}) {\n  return filterParsed(parse(selector), elements, options);\n}\n/**\n * Filter a set of elements by a selector.\n *\n * Will return elements in the original order.\n *\n * @param selector Selector to filter by.\n * @param elements Elements to filter.\n * @param options Options for selector.\n */\nfunction filterParsed(selector, elements, options) {\n  if (elements.length === 0) return [];\n  const [plainSelectors, filteredSelectors] = groupSelectors(selector);\n  let found;\n  if (plainSelectors.length) {\n    const filtered = filterElements(elements, plainSelectors, options);\n    // If there are no filters, just return\n    if (filteredSelectors.length === 0) {\n      return filtered;\n    }\n    // Otherwise, we have to do some filtering\n    if (filtered.length) {\n      found = new Set(filtered);\n    }\n  }\n  for (let i = 0; i < filteredSelectors.length && (found === null || found === void 0 ? void 0 : found.size) !== elements.length; i++) {\n    const filteredSelector = filteredSelectors[i];\n    const missing = found ? elements.filter(e => DomUtils.isTag(e) && !found.has(e)) : elements;\n    if (missing.length === 0) break;\n    const filtered = filterBySelector(filteredSelector, elements, options);\n    if (filtered.length) {\n      if (!found) {\n        /*\n         * If we haven't found anything before the last selector,\n         * just return what we found now.\n         */\n        if (i === filteredSelectors.length - 1) {\n          return filtered;\n        }\n        found = new Set(filtered);\n      } else {\n        filtered.forEach(el => found.add(el));\n      }\n    }\n  }\n  return typeof found !== \"undefined\" ? found.size === elements.length ? elements :\n  // Filter elements to preserve order\n  elements.filter(el => found.has(el)) : [];\n}\nfunction filterBySelector(selector, elements, options) {\n  var _a;\n  if (selector.some(isTraversal)) {\n    /*\n     * Get root node, run selector with the scope\n     * set to all of our nodes.\n     */\n    const root = (_a = options.root) !== null && _a !== void 0 ? _a : getDocumentRoot(elements[0]);\n    const opts = {\n      ...options,\n      context: elements,\n      relativeSelector: false\n    };\n    selector.push(SCOPE_PSEUDO);\n    return findFilterElements(root, selector, opts, true, elements.length);\n  }\n  // Performance optimization: If we don't have to traverse, just filter set.\n  return findFilterElements(elements, selector, options, false, elements.length);\n}\nexport function select(selector, root, options = {}, limit = Infinity) {\n  if (typeof selector === \"function\") {\n    return find(root, selector);\n  }\n  const [plain, filtered] = groupSelectors(parse(selector));\n  const results = filtered.map(sel => findFilterElements(root, sel, options, true, limit));\n  // Plain selectors can be queried in a single go\n  if (plain.length) {\n    results.push(findElements(root, plain, options, limit));\n  }\n  if (results.length === 0) {\n    return [];\n  }\n  // If there was only a single selector, just return the result\n  if (results.length === 1) {\n    return results[0];\n  }\n  // Sort results, filtering for duplicates\n  return DomUtils.uniqueSort(results.reduce((a, b) => [...a, ...b]));\n}\n/**\n *\n * @param root Element(s) to search from.\n * @param selector Selector to look for.\n * @param options Options for querying.\n * @param queryForSelector Query multiple levels deep for the initial selector, even if it doesn't contain a traversal.\n */\nfunction findFilterElements(root, selector, options, queryForSelector, totalLimit) {\n  const filterIndex = selector.findIndex(isFilter);\n  const sub = selector.slice(0, filterIndex);\n  const filter = selector[filterIndex];\n  // If we are at the end of the selector, we can limit the number of elements to retrieve.\n  const partLimit = selector.length - 1 === filterIndex ? totalLimit : Infinity;\n  /*\n   * Set the number of elements to retrieve.\n   * Eg. for :first, we only have to get a single element.\n   */\n  const limit = getLimit(filter.name, filter.data, partLimit);\n  if (limit === 0) return [];\n  /*\n   * Skip `findElements` call if our selector starts with a positional\n   * pseudo.\n   */\n  const elemsNoLimit = sub.length === 0 && !Array.isArray(root) ? DomUtils.getChildren(root).filter(DomUtils.isTag) : sub.length === 0 ? (Array.isArray(root) ? root : [root]).filter(DomUtils.isTag) : queryForSelector || sub.some(isTraversal) ? findElements(root, [sub], options, limit) : filterElements(root, [sub], options);\n  const elems = elemsNoLimit.slice(0, limit);\n  let result = filterByPosition(filter.name, elems, filter.data, options);\n  if (result.length === 0 || selector.length === filterIndex + 1) {\n    return result;\n  }\n  const remainingSelector = selector.slice(filterIndex + 1);\n  const remainingHasTraversal = remainingSelector.some(isTraversal);\n  if (remainingHasTraversal) {\n    if (isTraversal(remainingSelector[0])) {\n      const {\n        type\n      } = remainingSelector[0];\n      if (type === SelectorType.Sibling || type === SelectorType.Adjacent) {\n        // If we have a sibling traversal, we need to also look at the siblings.\n        result = prepareContext(result, DomUtils, true);\n      }\n      // Avoid a traversal-first selector error.\n      remainingSelector.unshift(UNIVERSAL_SELECTOR);\n    }\n    options = {\n      ...options,\n      // Avoid absolutizing the selector\n      relativeSelector: false,\n      /*\n       * Add a custom root func, to make sure traversals don't match elements\n       * that aren't a part of the considered tree.\n       */\n      rootFunc: el => result.includes(el)\n    };\n  } else if (options.rootFunc && options.rootFunc !== boolbase.trueFunc) {\n    options = {\n      ...options,\n      rootFunc: boolbase.trueFunc\n    };\n  }\n  /*\n   * If we have another filter, recursively call `findFilterElements`,\n   * with the `recursive` flag disabled. We only have to look for more\n   * elements when we see a traversal.\n   *\n   * Otherwise,\n   */\n  return remainingSelector.some(isFilter) ? findFilterElements(result, remainingSelector, options, false, totalLimit) : remainingHasTraversal ?\n  // Query existing elements to resolve traversal.\n  findElements(result, [remainingSelector], options, totalLimit) :\n  // If we don't have any more traversals, simply filter elements.\n  filterElements(result, [remainingSelector], options);\n}\nfunction findElements(root, sel, options, limit) {\n  const query = compileToken(sel, options, root);\n  return find(root, query, limit);\n}\nfunction find(root, query, limit = Infinity) {\n  const elems = prepareContext(root, DomUtils, query.shouldTestNextSiblings);\n  return DomUtils.find(node => DomUtils.isTag(node) && query(node), elems, true, limit);\n}\nfunction filterElements(elements, sel, options) {\n  const els = (Array.isArray(elements) ? elements : [elements]).filter(DomUtils.isTag);\n  if (els.length === 0) return els;\n  const query = compileToken(sel, options);\n  return query === boolbase.trueFunc ? els : els.filter(query);\n}\n", "export const filterNames = new Set([\"first\", \"last\", \"eq\", \"gt\", \"nth\", \"lt\", \"even\", \"odd\"]);\nexport function isFilter(s) {\n  if (s.type !== \"pseudo\") return false;\n  if (filterNames.has(s.name)) return true;\n  if (s.name === \"not\" && Array.isArray(s.data)) {\n    // Only consider `:not` with embedded filters\n    return s.data.some(s => s.some(isFilter));\n  }\n  return false;\n}\nexport function getLimit(filter, data, partLimit) {\n  const num = data != null ? parseInt(data, 10) : NaN;\n  switch (filter) {\n    case \"first\":\n      return 1;\n    case \"nth\":\n    case \"eq\":\n      return isFinite(num) ? num >= 0 ? num + 1 : Infinity : 0;\n    case \"lt\":\n      return isFinite(num) ? num >= 0 ? Math.min(num, partLimit) : Infinity : 0;\n    case \"gt\":\n      return isFinite(num) ? Infinity : 0;\n    case \"odd\":\n      return 2 * partLimit;\n    case \"even\":\n      return 2 * partLimit - 1;\n    case \"last\":\n    case \"not\":\n      return Infinity;\n  }\n}\n", "import { isFilter } from \"./positionals.js\";\nexport function getDocumentRoot(node) {\n  while (node.parent) node = node.parent;\n  return node;\n}\nexport function groupSelectors(selectors) {\n  const filteredSelectors = [];\n  const plainSelectors = [];\n  for (const selector of selectors) {\n    if (selector.some(isFilter)) {\n      filteredSelectors.push(selector);\n    } else {\n      plainSelectors.push(selector);\n    }\n  }\n  return [plainSelectors, filteredSelectors];\n}\n", "/**\n * Methods for modifying the DOM structure.\n *\n * @module cheerio/manipulation\n */\nimport { isTag, Text, hasChildren, cloneNode, Document } from 'domhandler';\nimport { update as updateDOM } from '../parse.js';\nimport { text as staticText } from '../static.js';\nimport { domEach, isHtml, isCheerio } from '../utils.js';\nimport { removeElement } from 'domutils';\n/**\n * Create an array of nodes, recursing into arrays and parsing strings if\n * necessary.\n *\n * @private\n * @category Manipulation\n * @param elem - Elements to make an array of.\n * @param clone - Optionally clone nodes.\n * @returns The array of nodes.\n */\nexport function _makeDomArray(elem, clone) {\n  if (elem == null) {\n    return [];\n  }\n  if (typeof elem === 'string') {\n    return this._parse(elem, this.options, false, null).children.slice(0);\n  }\n  if ('length' in elem) {\n    if (elem.length === 1) {\n      return this._makeDomArray(elem[0], clone);\n    }\n    const result = [];\n    for (let i = 0; i < elem.length; i++) {\n      const el = elem[i];\n      if (typeof el === 'object') {\n        if (el == null) {\n          continue;\n        }\n        if (!('length' in el)) {\n          result.push(clone ? cloneNode(el, true) : el);\n          continue;\n        }\n      }\n      result.push(...this._makeDomArray(el, clone));\n    }\n    return result;\n  }\n  return [clone ? cloneNode(elem, true) : elem];\n}\nfunction _insert(concatenator) {\n  return function (...elems) {\n    const lastIdx = this.length - 1;\n    return domEach(this, (el, i) => {\n      if (!hasChildren(el)) return;\n      const domSrc = typeof elems[0] === 'function' ? elems[0].call(el, i, this._render(el.children)) : elems;\n      const dom = this._makeDomArray(domSrc, i < lastIdx);\n      concatenator(dom, el.children, el);\n    });\n  };\n}\n/**\n * Modify an array in-place, removing some number of elements and adding new\n * elements directly following them.\n *\n * @private\n * @category Manipulation\n * @param array - Target array to splice.\n * @param spliceIdx - Index at which to begin changing the array.\n * @param spliceCount - Number of elements to remove from the array.\n * @param newElems - Elements to insert into the array.\n * @param parent - The parent of the node.\n * @returns The spliced array.\n */\nfunction uniqueSplice(array, spliceIdx, spliceCount, newElems, parent) {\n  var _a, _b;\n  const spliceArgs = [spliceIdx, spliceCount, ...newElems];\n  const prev = spliceIdx === 0 ? null : array[spliceIdx - 1];\n  const next = spliceIdx + spliceCount >= array.length ? null : array[spliceIdx + spliceCount];\n  /*\n   * Before splicing in new elements, ensure they do not already appear in the\n   * current array.\n   */\n  for (let idx = 0; idx < newElems.length; ++idx) {\n    const node = newElems[idx];\n    const oldParent = node.parent;\n    if (oldParent) {\n      const oldSiblings = oldParent.children;\n      const prevIdx = oldSiblings.indexOf(node);\n      if (prevIdx > -1) {\n        oldParent.children.splice(prevIdx, 1);\n        if (parent === oldParent && spliceIdx > prevIdx) {\n          spliceArgs[0]--;\n        }\n      }\n    }\n    node.parent = parent;\n    if (node.prev) {\n      node.prev.next = (_a = node.next) !== null && _a !== void 0 ? _a : null;\n    }\n    if (node.next) {\n      node.next.prev = (_b = node.prev) !== null && _b !== void 0 ? _b : null;\n    }\n    node.prev = idx === 0 ? prev : newElems[idx - 1];\n    node.next = idx === newElems.length - 1 ? next : newElems[idx + 1];\n  }\n  if (prev) {\n    prev.next = newElems[0];\n  }\n  if (next) {\n    next.prev = newElems[newElems.length - 1];\n  }\n  return array.splice(...spliceArgs);\n}\n/**\n * Insert every element in the set of matched elements to the end of the target.\n *\n * @category Manipulation\n * @example\n *\n * ```js\n * $('<li class=\"plum\">Plum</li>').appendTo('#fruits');\n * $.html();\n * //=>  <ul id=\"fruits\">\n * //      <li class=\"apple\">Apple</li>\n * //      <li class=\"orange\">Orange</li>\n * //      <li class=\"pear\">Pear</li>\n * //      <li class=\"plum\">Plum</li>\n * //    </ul>\n * ```\n *\n * @param target - Element to append elements to.\n * @returns The instance itself.\n * @see {@link https://api.jquery.com/appendTo/}\n */\nexport function appendTo(target) {\n  const appendTarget = isCheerio(target) ? target : this._make(target);\n  appendTarget.append(this);\n  return this;\n}\n/**\n * Insert every element in the set of matched elements to the beginning of the\n * target.\n *\n * @category Manipulation\n * @example\n *\n * ```js\n * $('<li class=\"plum\">Plum</li>').prependTo('#fruits');\n * $.html();\n * //=>  <ul id=\"fruits\">\n * //      <li class=\"plum\">Plum</li>\n * //      <li class=\"apple\">Apple</li>\n * //      <li class=\"orange\">Orange</li>\n * //      <li class=\"pear\">Pear</li>\n * //    </ul>\n * ```\n *\n * @param target - Element to prepend elements to.\n * @returns The instance itself.\n * @see {@link https://api.jquery.com/prependTo/}\n */\nexport function prependTo(target) {\n  const prependTarget = isCheerio(target) ? target : this._make(target);\n  prependTarget.prepend(this);\n  return this;\n}\n/**\n * Inserts content as the _last_ child of each of the selected elements.\n *\n * @category Manipulation\n * @example\n *\n * ```js\n * $('ul').append('<li class=\"plum\">Plum</li>');\n * $.html();\n * //=>  <ul id=\"fruits\">\n * //      <li class=\"apple\">Apple</li>\n * //      <li class=\"orange\">Orange</li>\n * //      <li class=\"pear\">Pear</li>\n * //      <li class=\"plum\">Plum</li>\n * //    </ul>\n * ```\n *\n * @see {@link https://api.jquery.com/append/}\n */\nexport const append = _insert((dom, children, parent) => {\n  uniqueSplice(children, children.length, 0, dom, parent);\n});\n/**\n * Inserts content as the _first_ child of each of the selected elements.\n *\n * @category Manipulation\n * @example\n *\n * ```js\n * $('ul').prepend('<li class=\"plum\">Plum</li>');\n * $.html();\n * //=>  <ul id=\"fruits\">\n * //      <li class=\"plum\">Plum</li>\n * //      <li class=\"apple\">Apple</li>\n * //      <li class=\"orange\">Orange</li>\n * //      <li class=\"pear\">Pear</li>\n * //    </ul>\n * ```\n *\n * @see {@link https://api.jquery.com/prepend/}\n */\nexport const prepend = _insert((dom, children, parent) => {\n  uniqueSplice(children, 0, 0, dom, parent);\n});\nfunction _wrap(insert) {\n  return function (wrapper) {\n    const lastIdx = this.length - 1;\n    const lastParent = this.parents().last();\n    for (let i = 0; i < this.length; i++) {\n      const el = this[i];\n      const wrap = typeof wrapper === 'function' ? wrapper.call(el, i, el) : typeof wrapper === 'string' && !isHtml(wrapper) ? lastParent.find(wrapper).clone() : wrapper;\n      const [wrapperDom] = this._makeDomArray(wrap, i < lastIdx);\n      if (!wrapperDom || !hasChildren(wrapperDom)) continue;\n      let elInsertLocation = wrapperDom;\n      /*\n       * Find the deepest child. Only consider the first tag child of each node\n       * (ignore text); stop if no children are found.\n       */\n      let j = 0;\n      while (j < elInsertLocation.children.length) {\n        const child = elInsertLocation.children[j];\n        if (isTag(child)) {\n          elInsertLocation = child;\n          j = 0;\n        } else {\n          j++;\n        }\n      }\n      insert(el, elInsertLocation, [wrapperDom]);\n    }\n    return this;\n  };\n}\n/**\n * The .wrap() function can take any string or object that could be passed to\n * the $() factory function to specify a DOM structure. This structure may be\n * nested several levels deep, but should contain only one inmost element. A\n * copy of this structure will be wrapped around each of the elements in the set\n * of matched elements. This method returns the original set of elements for\n * chaining purposes.\n *\n * @category Manipulation\n * @example\n *\n * ```js\n * const redFruit = $('<div class=\"red-fruit\"></div>');\n * $('.apple').wrap(redFruit);\n *\n * //=> <ul id=\"fruits\">\n * //     <div class=\"red-fruit\">\n * //      <li class=\"apple\">Apple</li>\n * //     </div>\n * //     <li class=\"orange\">Orange</li>\n * //     <li class=\"plum\">Plum</li>\n * //   </ul>\n *\n * const healthy = $('<div class=\"healthy\"></div>');\n * $('li').wrap(healthy);\n *\n * //=> <ul id=\"fruits\">\n * //     <div class=\"healthy\">\n * //       <li class=\"apple\">Apple</li>\n * //     </div>\n * //     <div class=\"healthy\">\n * //       <li class=\"orange\">Orange</li>\n * //     </div>\n * //     <div class=\"healthy\">\n * //        <li class=\"plum\">Plum</li>\n * //     </div>\n * //   </ul>\n * ```\n *\n * @param wrapper - The DOM structure to wrap around each element in the\n *   selection.\n * @see {@link https://api.jquery.com/wrap/}\n */\nexport const wrap = _wrap((el, elInsertLocation, wrapperDom) => {\n  const {\n    parent\n  } = el;\n  if (!parent) return;\n  const siblings = parent.children;\n  const index = siblings.indexOf(el);\n  updateDOM([el], elInsertLocation);\n  /*\n   * The previous operation removed the current element from the `siblings`\n   * array, so the `dom` array can be inserted without removing any\n   * additional elements.\n   */\n  uniqueSplice(siblings, index, 0, wrapperDom, parent);\n});\n/**\n * The .wrapInner() function can take any string or object that could be passed\n * to the $() factory function to specify a DOM structure. This structure may be\n * nested several levels deep, but should contain only one inmost element. The\n * structure will be wrapped around the content of each of the elements in the\n * set of matched elements.\n *\n * @category Manipulation\n * @example\n *\n * ```js\n * const redFruit = $('<div class=\"red-fruit\"></div>');\n * $('.apple').wrapInner(redFruit);\n *\n * //=> <ul id=\"fruits\">\n * //     <li class=\"apple\">\n * //       <div class=\"red-fruit\">Apple</div>\n * //     </li>\n * //     <li class=\"orange\">Orange</li>\n * //     <li class=\"pear\">Pear</li>\n * //   </ul>\n *\n * const healthy = $('<div class=\"healthy\"></div>');\n * $('li').wrapInner(healthy);\n *\n * //=> <ul id=\"fruits\">\n * //     <li class=\"apple\">\n * //       <div class=\"healthy\">Apple</div>\n * //     </li>\n * //     <li class=\"orange\">\n * //       <div class=\"healthy\">Orange</div>\n * //     </li>\n * //     <li class=\"pear\">\n * //       <div class=\"healthy\">Pear</div>\n * //     </li>\n * //   </ul>\n * ```\n *\n * @param wrapper - The DOM structure to wrap around the content of each element\n *   in the selection.\n * @returns The instance itself, for chaining.\n * @see {@link https://api.jquery.com/wrapInner/}\n */\nexport const wrapInner = _wrap((el, elInsertLocation, wrapperDom) => {\n  if (!hasChildren(el)) return;\n  updateDOM(el.children, elInsertLocation);\n  updateDOM(wrapperDom, el);\n});\n/**\n * The .unwrap() function, removes the parents of the set of matched elements\n * from the DOM, leaving the matched elements in their place.\n *\n * @category Manipulation\n * @example <caption>without selector</caption>\n *\n * ```js\n * const $ = cheerio.load(\n *   '<div id=test>\\n  <div><p>Hello</p></div>\\n  <div><p>World</p></div>\\n</div>',\n * );\n * $('#test p').unwrap();\n *\n * //=> <div id=test>\n * //     <p>Hello</p>\n * //     <p>World</p>\n * //   </div>\n * ```\n *\n * @example <caption>with selector</caption>\n *\n * ```js\n * const $ = cheerio.load(\n *   '<div id=test>\\n  <p>Hello</p>\\n  <b><p>World</p></b>\\n</div>',\n * );\n * $('#test p').unwrap('b');\n *\n * //=> <div id=test>\n * //     <p>Hello</p>\n * //     <p>World</p>\n * //   </div>\n * ```\n *\n * @param selector - A selector to check the parent element against. If an\n *   element's parent does not match the selector, the element won't be\n *   unwrapped.\n * @returns The instance itself, for chaining.\n * @see {@link https://api.jquery.com/unwrap/}\n */\nexport function unwrap(selector) {\n  this.parent(selector).not('body').each((_, el) => {\n    this._make(el).replaceWith(el.children);\n  });\n  return this;\n}\n/**\n * The .wrapAll() function can take any string or object that could be passed to\n * the $() function to specify a DOM structure. This structure may be nested\n * several levels deep, but should contain only one inmost element. The\n * structure will be wrapped around all of the elements in the set of matched\n * elements, as a single group.\n *\n * @category Manipulation\n * @example <caption>With markup passed to `wrapAll`</caption>\n *\n * ```js\n * const $ = cheerio.load(\n *   '<div class=\"container\"><div class=\"inner\">First</div><div class=\"inner\">Second</div></div>',\n * );\n * $('.inner').wrapAll(\"<div class='new'></div>\");\n *\n * //=> <div class=\"container\">\n * //     <div class='new'>\n * //       <div class=\"inner\">First</div>\n * //       <div class=\"inner\">Second</div>\n * //     </div>\n * //   </div>\n * ```\n *\n * @example <caption>With an existing cheerio instance</caption>\n *\n * ```js\n * const $ = cheerio.load(\n *   '<span>Span 1</span><strong>Strong</strong><span>Span 2</span>',\n * );\n * const wrap = $('<div><p><em><b></b></em></p></div>');\n * $('span').wrapAll(wrap);\n *\n * //=> <div>\n * //     <p>\n * //       <em>\n * //         <b>\n * //           <span>Span 1</span>\n * //           <span>Span 2</span>\n * //         </b>\n * //       </em>\n * //     </p>\n * //   </div>\n * //   <strong>Strong</strong>\n * ```\n *\n * @param wrapper - The DOM structure to wrap around all matched elements in the\n *   selection.\n * @returns The instance itself.\n * @see {@link https://api.jquery.com/wrapAll/}\n */\nexport function wrapAll(wrapper) {\n  const el = this[0];\n  if (el) {\n    const wrap = this._make(typeof wrapper === 'function' ? wrapper.call(el, 0, el) : wrapper).insertBefore(el);\n    // If html is given as wrapper, wrap may contain text elements\n    let elInsertLocation;\n    for (let i = 0; i < wrap.length; i++) {\n      if (wrap[i].type === 'tag') elInsertLocation = wrap[i];\n    }\n    let j = 0;\n    /*\n     * Find the deepest child. Only consider the first tag child of each node\n     * (ignore text); stop if no children are found.\n     */\n    while (elInsertLocation && j < elInsertLocation.children.length) {\n      const child = elInsertLocation.children[j];\n      if (child.type === 'tag') {\n        elInsertLocation = child;\n        j = 0;\n      } else {\n        j++;\n      }\n    }\n    if (elInsertLocation) this._make(elInsertLocation).append(this);\n  }\n  return this;\n}\n/**\n * Insert content next to each element in the set of matched elements.\n *\n * @category Manipulation\n * @example\n *\n * ```js\n * $('.apple').after('<li class=\"plum\">Plum</li>');\n * $.html();\n * //=>  <ul id=\"fruits\">\n * //      <li class=\"apple\">Apple</li>\n * //      <li class=\"plum\">Plum</li>\n * //      <li class=\"orange\">Orange</li>\n * //      <li class=\"pear\">Pear</li>\n * //    </ul>\n * ```\n *\n * @param elems - HTML string, DOM element, array of DOM elements or Cheerio to\n *   insert after each element in the set of matched elements.\n * @returns The instance itself.\n * @see {@link https://api.jquery.com/after/}\n */\nexport function after(...elems) {\n  const lastIdx = this.length - 1;\n  return domEach(this, (el, i) => {\n    if (!hasChildren(el) || !el.parent) {\n      return;\n    }\n    const siblings = el.parent.children;\n    const index = siblings.indexOf(el);\n    // If not found, move on\n    /* istanbul ignore next */\n    if (index < 0) return;\n    const domSrc = typeof elems[0] === 'function' ? elems[0].call(el, i, this._render(el.children)) : elems;\n    const dom = this._makeDomArray(domSrc, i < lastIdx);\n    // Add element after `this` element\n    uniqueSplice(siblings, index + 1, 0, dom, el.parent);\n  });\n}\n/**\n * Insert every element in the set of matched elements after the target.\n *\n * @category Manipulation\n * @example\n *\n * ```js\n * $('<li class=\"plum\">Plum</li>').insertAfter('.apple');\n * $.html();\n * //=>  <ul id=\"fruits\">\n * //      <li class=\"apple\">Apple</li>\n * //      <li class=\"plum\">Plum</li>\n * //      <li class=\"orange\">Orange</li>\n * //      <li class=\"pear\">Pear</li>\n * //    </ul>\n * ```\n *\n * @param target - Element to insert elements after.\n * @returns The set of newly inserted elements.\n * @see {@link https://api.jquery.com/insertAfter/}\n */\nexport function insertAfter(target) {\n  if (typeof target === 'string') {\n    target = this._make(target);\n  }\n  this.remove();\n  const clones = [];\n  for (const el of this._makeDomArray(target)) {\n    const clonedSelf = this.clone().toArray();\n    const {\n      parent\n    } = el;\n    if (!parent) {\n      continue;\n    }\n    const siblings = parent.children;\n    const index = siblings.indexOf(el);\n    // If not found, move on\n    /* istanbul ignore next */\n    if (index < 0) continue;\n    // Add cloned `this` element(s) after target element\n    uniqueSplice(siblings, index + 1, 0, clonedSelf, parent);\n    clones.push(...clonedSelf);\n  }\n  return this._make(clones);\n}\n/**\n * Insert content previous to each element in the set of matched elements.\n *\n * @category Manipulation\n * @example\n *\n * ```js\n * $('.apple').before('<li class=\"plum\">Plum</li>');\n * $.html();\n * //=>  <ul id=\"fruits\">\n * //      <li class=\"plum\">Plum</li>\n * //      <li class=\"apple\">Apple</li>\n * //      <li class=\"orange\">Orange</li>\n * //      <li class=\"pear\">Pear</li>\n * //    </ul>\n * ```\n *\n * @param elems - HTML string, DOM element, array of DOM elements or Cheerio to\n *   insert before each element in the set of matched elements.\n * @returns The instance itself.\n * @see {@link https://api.jquery.com/before/}\n */\nexport function before(...elems) {\n  const lastIdx = this.length - 1;\n  return domEach(this, (el, i) => {\n    if (!hasChildren(el) || !el.parent) {\n      return;\n    }\n    const siblings = el.parent.children;\n    const index = siblings.indexOf(el);\n    // If not found, move on\n    /* istanbul ignore next */\n    if (index < 0) return;\n    const domSrc = typeof elems[0] === 'function' ? elems[0].call(el, i, this._render(el.children)) : elems;\n    const dom = this._makeDomArray(domSrc, i < lastIdx);\n    // Add element before `el` element\n    uniqueSplice(siblings, index, 0, dom, el.parent);\n  });\n}\n/**\n * Insert every element in the set of matched elements before the target.\n *\n * @category Manipulation\n * @example\n *\n * ```js\n * $('<li class=\"plum\">Plum</li>').insertBefore('.apple');\n * $.html();\n * //=>  <ul id=\"fruits\">\n * //      <li class=\"plum\">Plum</li>\n * //      <li class=\"apple\">Apple</li>\n * //      <li class=\"orange\">Orange</li>\n * //      <li class=\"pear\">Pear</li>\n * //    </ul>\n * ```\n *\n * @param target - Element to insert elements before.\n * @returns The set of newly inserted elements.\n * @see {@link https://api.jquery.com/insertBefore/}\n */\nexport function insertBefore(target) {\n  const targetArr = this._make(target);\n  this.remove();\n  const clones = [];\n  domEach(targetArr, el => {\n    const clonedSelf = this.clone().toArray();\n    const {\n      parent\n    } = el;\n    if (!parent) {\n      return;\n    }\n    const siblings = parent.children;\n    const index = siblings.indexOf(el);\n    // If not found, move on\n    /* istanbul ignore next */\n    if (index < 0) return;\n    // Add cloned `this` element(s) after target element\n    uniqueSplice(siblings, index, 0, clonedSelf, parent);\n    clones.push(...clonedSelf);\n  });\n  return this._make(clones);\n}\n/**\n * Removes the set of matched elements from the DOM and all their children.\n * `selector` filters the set of matched elements to be removed.\n *\n * @category Manipulation\n * @example\n *\n * ```js\n * $('.pear').remove();\n * $.html();\n * //=>  <ul id=\"fruits\">\n * //      <li class=\"apple\">Apple</li>\n * //      <li class=\"orange\">Orange</li>\n * //    </ul>\n * ```\n *\n * @param selector - Optional selector for elements to remove.\n * @returns The instance itself.\n * @see {@link https://api.jquery.com/remove/}\n */\nexport function remove(selector) {\n  // Filter if we have selector\n  const elems = selector ? this.filter(selector) : this;\n  domEach(elems, el => {\n    removeElement(el);\n    el.prev = el.next = el.parent = null;\n  });\n  return this;\n}\n/**\n * Replaces matched elements with `content`.\n *\n * @category Manipulation\n * @example\n *\n * ```js\n * const plum = $('<li class=\"plum\">Plum</li>');\n * $('.pear').replaceWith(plum);\n * $.html();\n * //=> <ul id=\"fruits\">\n * //     <li class=\"apple\">Apple</li>\n * //     <li class=\"orange\">Orange</li>\n * //     <li class=\"plum\">Plum</li>\n * //   </ul>\n * ```\n *\n * @param content - Replacement for matched elements.\n * @returns The instance itself.\n * @see {@link https://api.jquery.com/replaceWith/}\n */\nexport function replaceWith(content) {\n  return domEach(this, (el, i) => {\n    const {\n      parent\n    } = el;\n    if (!parent) {\n      return;\n    }\n    const siblings = parent.children;\n    const cont = typeof content === 'function' ? content.call(el, i, el) : content;\n    const dom = this._makeDomArray(cont);\n    /*\n     * In the case that `dom` contains nodes that already exist in other\n     * structures, ensure those nodes are properly removed.\n     */\n    updateDOM(dom, null);\n    const index = siblings.indexOf(el);\n    // Completely remove old element\n    uniqueSplice(siblings, index, 1, dom, parent);\n    if (!dom.includes(el)) {\n      el.parent = el.prev = el.next = null;\n    }\n  });\n}\n/**\n * Removes all children from each item in the selection. Text nodes and comment\n * nodes are left as is.\n *\n * @category Manipulation\n * @example\n *\n * ```js\n * $('ul').empty();\n * $.html();\n * //=>  <ul id=\"fruits\"></ul>\n * ```\n *\n * @returns The instance itself.\n * @see {@link https://api.jquery.com/empty/}\n */\nexport function empty() {\n  return domEach(this, el => {\n    if (!hasChildren(el)) return;\n    for (const child of el.children) {\n      child.next = child.prev = child.parent = null;\n    }\n    el.children.length = 0;\n  });\n}\nexport function html(str) {\n  if (str === undefined) {\n    const el = this[0];\n    if (!el || !hasChildren(el)) return null;\n    return this._render(el.children);\n  }\n  return domEach(this, el => {\n    if (!hasChildren(el)) return;\n    for (const child of el.children) {\n      child.next = child.prev = child.parent = null;\n    }\n    const content = isCheerio(str) ? str.toArray() : this._parse(`${str}`, this.options, false, el).children;\n    updateDOM(content, el);\n  });\n}\n/**\n * Turns the collection to a string. Alias for `.html()`.\n *\n * @category Manipulation\n * @returns The rendered document.\n */\nexport function toString() {\n  return this._render(this);\n}\nexport function text(str) {\n  // If `str` is undefined, act as a \"getter\"\n  if (str === undefined) {\n    return staticText(this);\n  }\n  if (typeof str === 'function') {\n    // Function support\n    return domEach(this, (el, i) => this._make(el).text(str.call(el, i, staticText([el]))));\n  }\n  // Append text node to each selected elements\n  return domEach(this, el => {\n    if (!hasChildren(el)) return;\n    for (const child of el.children) {\n      child.next = child.prev = child.parent = null;\n    }\n    const textNode = new Text(`${str}`);\n    updateDOM(textNode, el);\n  });\n}\n/**\n * Clone the cheerio object.\n *\n * @category Manipulation\n * @example\n *\n * ```js\n * const moreFruit = $('#fruits').clone();\n * ```\n *\n * @returns The cloned object.\n * @see {@link https://api.jquery.com/clone/}\n */\nexport function clone() {\n  const clone = Array.prototype.map.call(this.get(), el => cloneNode(el, true));\n  // Add a root node around the cloned nodes\n  const root = new Document(clone);\n  for (const node of clone) {\n    node.parent = root;\n  }\n  return this._make(clone);\n}\n", "import { removeElement } from 'domutils';\nimport { Document, isDocument as checkIsDocument } from 'domhandler';\n/**\n * Get the parse function with options.\n *\n * @param parser - The parser function.\n * @returns The parse function with options.\n */\nexport function getParse(parser) {\n  /**\n   * Parse a HTML string or a node.\n   *\n   * @param content - The HTML string or node.\n   * @param options - The parser options.\n   * @param isDocument - If `content` is a document.\n   * @param context - The context node in the DOM tree.\n   * @returns The parsed document node.\n   */\n  return function parse(content, options, isDocument, context) {\n    if (typeof Buffer !== 'undefined' && Buffer.isBuffer(content)) {\n      content = content.toString();\n    }\n    if (typeof content === 'string') {\n      return parser(content, options, isDocument, context);\n    }\n    const doc = content;\n    if (!Array.isArray(doc) && checkIsDocument(doc)) {\n      // If `doc` is already a root, just return it\n      return doc;\n    }\n    // Add conent to new root element\n    const root = new Document([]);\n    // Update the DOM using the root\n    update(doc, root);\n    return root;\n  };\n}\n/**\n * Update the dom structure, for one changed layer.\n *\n * @param newChilds - The new children.\n * @param parent - The new parent.\n * @returns The parent node.\n */\nexport function update(newChilds, parent) {\n  // Normalize\n  const arr = Array.isArray(newChilds) ? newChilds : [newChilds];\n  // Update parent\n  if (parent) {\n    parent.children = arr;\n  } else {\n    parent = null;\n  }\n  // Update neighbors\n  for (let i = 0; i < arr.length; i++) {\n    const node = arr[i];\n    // Cleanly remove existing nodes from their previous structures.\n    if (node.parent && node.parent.children !== arr) {\n      removeElement(node);\n    }\n    if (parent) {\n      node.prev = arr[i - 1] || null;\n      node.next = arr[i + 1] || null;\n    } else {\n      node.prev = node.next = null;\n    }\n    node.parent = parent;\n  }\n  return parent;\n}\n", "import { domEach } from '../utils.js';\nimport { isTag } from 'domhandler';\n/**\n * Set multiple CSS properties for every matched element.\n *\n * @category CSS\n * @param prop - The names of the properties.\n * @param val - The new values.\n * @returns The instance itself.\n * @see {@link https://api.jquery.com/css/}\n */\nexport function css(prop, val) {\n  if (prop != null && val != null ||\n  // When `prop` is a \"plain\" object\n  typeof prop === 'object' && !Array.isArray(prop)) {\n    return domEach(this, (el, i) => {\n      if (isTag(el)) {\n        // `prop` can't be an array here anymore.\n        setCss(el, prop, val, i);\n      }\n    });\n  }\n  if (this.length === 0) {\n    return undefined;\n  }\n  return getCss(this[0], prop);\n}\n/**\n * Set styles of all elements.\n *\n * @private\n * @param el - Element to set style of.\n * @param prop - Name of property.\n * @param value - Value to set property to.\n * @param idx - Optional index within the selection.\n */\nfunction setCss(el, prop, value, idx) {\n  if (typeof prop === 'string') {\n    const styles = getCss(el);\n    const val = typeof value === 'function' ? value.call(el, idx, styles[prop]) : value;\n    if (val === '') {\n      delete styles[prop];\n    } else if (val != null) {\n      styles[prop] = val;\n    }\n    el.attribs['style'] = stringify(styles);\n  } else if (typeof prop === 'object') {\n    const keys = Object.keys(prop);\n    for (let i = 0; i < keys.length; i++) {\n      const k = keys[i];\n      setCss(el, k, prop[k], i);\n    }\n  }\n}\nfunction getCss(el, prop) {\n  if (!el || !isTag(el)) return;\n  const styles = parse(el.attribs['style']);\n  if (typeof prop === 'string') {\n    return styles[prop];\n  }\n  if (Array.isArray(prop)) {\n    const newStyles = {};\n    for (const item of prop) {\n      if (styles[item] != null) {\n        newStyles[item] = styles[item];\n      }\n    }\n    return newStyles;\n  }\n  return styles;\n}\n/**\n * Stringify `obj` to styles.\n *\n * @private\n * @category CSS\n * @param obj - Object to stringify.\n * @returns The serialized styles.\n */\nfunction stringify(obj) {\n  return Object.keys(obj).reduce((str, prop) => `${str}${str ? ' ' : ''}${prop}: ${obj[prop]};`, '');\n}\n/**\n * Parse `styles`.\n *\n * @private\n * @category CSS\n * @param styles - Styles to be parsed.\n * @returns The parsed styles.\n */\nfunction parse(styles) {\n  styles = (styles || '').trim();\n  if (!styles) return {};\n  const obj = {};\n  let key;\n  for (const str of styles.split(';')) {\n    const n = str.indexOf(':');\n    // If there is no :, or if it is the first/last character, add to the previous item's value\n    if (n < 1 || n === str.length - 1) {\n      const trimmed = str.trimEnd();\n      if (trimmed.length > 0 && key !== undefined) {\n        obj[key] += `;${trimmed}`;\n      }\n    } else {\n      key = str.slice(0, n).trim();\n      obj[key] = str.slice(n + 1).trim();\n    }\n  }\n  return obj;\n}\n", "import { isTag } from 'domhandler';\n/*\n * https://github.com/jquery/jquery/blob/2.1.3/src/manipulation/var/rcheckableType.js\n * https://github.com/jquery/jquery/blob/2.1.3/src/serialize.js\n */\nconst submittableSelector = 'input,select,textarea,keygen';\nconst r20 = /%20/g;\nconst rCRLF = /\\r?\\n/g;\n/**\n * Encode a set of form elements as a string for submission.\n *\n * @category Forms\n * @example\n *\n * ```js\n * $('<form><input name=\"foo\" value=\"bar\" /></form>').serialize();\n * //=> 'foo=bar'\n * ```\n *\n * @returns The serialized form.\n * @see {@link https://api.jquery.com/serialize/}\n */\nexport function serialize() {\n  // Convert form elements into name/value objects\n  const arr = this.serializeArray();\n  // Serialize each element into a key/value string\n  const retArr = arr.map(data => `${encodeURIComponent(data.name)}=${encodeURIComponent(data.value)}`);\n  // Return the resulting serialization\n  return retArr.join('&').replace(r20, '+');\n}\n/**\n * Encode a set of form elements as an array of names and values.\n *\n * @category Forms\n * @example\n *\n * ```js\n * $('<form><input name=\"foo\" value=\"bar\" /></form>').serializeArray();\n * //=> [ { name: 'foo', value: 'bar' } ]\n * ```\n *\n * @returns The serialized form.\n * @see {@link https://api.jquery.com/serializeArray/}\n */\nexport function serializeArray() {\n  // Resolve all form elements from either forms or collections of form elements\n  return this.map((_, elem) => {\n    const $elem = this._make(elem);\n    if (isTag(elem) && elem.name === 'form') {\n      return $elem.find(submittableSelector).toArray();\n    }\n    return $elem.filter(submittableSelector).toArray();\n  }).filter(\n  // Verify elements have a name (`attr.name`) and are not disabled (`:enabled`)\n  '[name!=\"\"]:enabled' +\n  // And cannot be clicked (`[type=submit]`) or are used in `x-www-form-urlencoded` (`[type=file]`)\n  ':not(:submit, :button, :image, :reset, :file)' +\n  // And are either checked/don't have a checkable state\n  ':matches([checked], :not(:checkbox, :radio))').map((_, elem) => {\n    var _a;\n    const $elem = this._make(elem);\n    const name = $elem.attr('name'); // We have filtered for elements with a name before.\n    // If there is no value set (e.g. `undefined`, `null`), then default value to empty\n    const value = (_a = $elem.val()) !== null && _a !== void 0 ? _a : '';\n    // If we have an array of values (e.g. `<select multiple>`), return an array of key/value pairs\n    if (Array.isArray(value)) {\n      return value.map(val => (\n      /*\n       * We trim replace any line endings (e.g. `\\r` or `\\r\\n` with `\\r\\n`) to guarantee consistency across platforms\n       * These can occur inside of `<textarea>'s`\n       */\n      {\n        name,\n        value: val.replace(rCRLF, '\\r\\n')\n      }));\n    }\n    // Otherwise (e.g. `<input type=\"text\">`, return only one key/value pair\n    return {\n      name,\n      value: value.replace(rCRLF, '\\r\\n')\n    };\n  }).toArray();\n}\n", "function getExtractDescr(descr) {\n  var _a;\n  if (typeof descr === 'string') {\n    return {\n      selector: descr,\n      value: 'textContent'\n    };\n  }\n  return {\n    selector: descr.selector,\n    value: (_a = descr.value) !== null && _a !== void 0 ? _a : 'textContent'\n  };\n}\n/**\n * Extract multiple values from a document, and store them in an object.\n *\n * @param map - An object containing key-value pairs. The keys are the names of\n *   the properties to be created on the object, and the values are the\n *   selectors to be used to extract the values.\n * @returns An object containing the extracted values.\n */\nexport function extract(map) {\n  const ret = {};\n  for (const key in map) {\n    const descr = map[key];\n    const isArray = Array.isArray(descr);\n    const {\n      selector,\n      value\n    } = getExtractDescr(isArray ? descr[0] : descr);\n    const fn = typeof value === 'function' ? value : typeof value === 'string' ? el => this._make(el).prop(value) : el => this._make(el).extract(value);\n    if (isArray) {\n      ret[key] = this._findBySelector(selector, Number.POSITIVE_INFINITY).map((_, el) => fn(el, key, ret)).get();\n    } else {\n      const $ = this._findBySelector(selector, 1);\n      ret[key] = $.length > 0 ? fn($[0], key, ret) : undefined;\n    }\n  }\n  return ret;\n}\n", "import * as Attributes from './api/attributes.js';\nimport * as Traversing from './api/traversing.js';\nimport * as Manipulation from './api/manipulation.js';\nimport * as Css from './api/css.js';\nimport * as Forms from './api/forms.js';\nimport * as Extract from './api/extract.js';\n/**\n * The cheerio class is the central class of the library. It wraps a set of\n * elements and provides an API for traversing, modifying, and interacting with\n * the set.\n *\n * Loading a document will return the Cheerio class bound to the root element of\n * the document. The class will be instantiated when querying the document (when\n * calling `$('selector')`).\n *\n * @example This is the HTML markup we will be using in all of the API examples:\n *\n * ```html\n * <ul id=\"fruits\">\n *   <li class=\"apple\">Apple</li>\n *   <li class=\"orange\">Orange</li>\n *   <li class=\"pear\">Pear</li>\n * </ul>\n * ```\n */\nexport class Cheerio {\n  /**\n   * Instance of cheerio. Methods are specified in the modules. Usage of this\n   * constructor is not recommended. Please use `$.load` instead.\n   *\n   * @private\n   * @param elements - The new selection.\n   * @param root - Sets the root node.\n   * @param options - Options for the instance.\n   */\n  constructor(elements, root, options) {\n    this.length = 0;\n    this.options = options;\n    this._root = root;\n    if (elements) {\n      for (let idx = 0; idx < elements.length; idx++) {\n        this[idx] = elements[idx];\n      }\n      this.length = elements.length;\n    }\n  }\n}\n/** Set a signature of the object. */\nCheerio.prototype.cheerio = '[cheerio object]';\n/*\n * Make cheerio an array-like object\n */\nCheerio.prototype.splice = Array.prototype.splice;\n// Support for (const element of $(...)) iteration:\nCheerio.prototype[Symbol.iterator] = Array.prototype[Symbol.iterator];\n// Plug in the API\nObject.assign(Cheerio.prototype, Attributes, Traversing, Manipulation, Css, Forms, Extract);\n", "import { flattenOptions } from './options.js';\nimport * as staticMethods from './static.js';\nimport { Cheerio } from './cheerio.js';\nimport { isHtml, isCheerio } from './utils.js';\nexport function getLoad(parse, render) {\n  /**\n   * Create a querying function, bound to a document created from the provided\n   * markup.\n   *\n   * Note that similar to web browser contexts, this operation may introduce\n   * `<html>`, `<head>`, and `<body>` elements; set `isDocument` to `false` to\n   * switch to fragment mode and disable this.\n   *\n   * @param content - Markup to be loaded.\n   * @param options - Options for the created instance.\n   * @param isDocument - Allows parser to be switched to fragment mode.\n   * @returns The loaded document.\n   * @see {@link https://cheerio.js.org#loading} for additional usage information.\n   */\n  return function load(content, options, isDocument = true) {\n    if (content == null) {\n      throw new Error('cheerio.load() expects a string');\n    }\n    const internalOpts = flattenOptions(options);\n    const initialRoot = parse(content, internalOpts, isDocument, null);\n    /**\n     * Create an extended class here, so that extensions only live on one\n     * instance.\n     */\n    class LoadedCheerio extends Cheerio {\n      _make(selector, context) {\n        const cheerio = initialize(selector, context);\n        cheerio.prevObject = this;\n        return cheerio;\n      }\n      _parse(content, options, isDocument, context) {\n        return parse(content, options, isDocument, context);\n      }\n      _render(dom) {\n        return render(dom, this.options);\n      }\n    }\n    function initialize(selector, context, root = initialRoot, opts) {\n      // $($)\n      if (selector && isCheerio(selector)) return selector;\n      const options = flattenOptions(opts, internalOpts);\n      const r = typeof root === 'string' ? [parse(root, options, false, null)] : 'length' in root ? root : [root];\n      const rootInstance = isCheerio(r) ? r : new LoadedCheerio(r, null, options);\n      // Add a cyclic reference, so that calling methods on `_root` never fails.\n      rootInstance._root = rootInstance;\n      // $(), $(null), $(undefined), $(false)\n      if (!selector) {\n        return new LoadedCheerio(undefined, rootInstance, options);\n      }\n      const elements = typeof selector === 'string' && isHtml(selector) ?\n      // $(<html>)\n      parse(selector, options, false, null).children : isNode(selector) ?\n      // $(dom)\n      [selector] : Array.isArray(selector) ?\n      // $([dom])\n      selector : undefined;\n      const instance = new LoadedCheerio(elements, rootInstance, options);\n      if (elements) {\n        return instance;\n      }\n      if (typeof selector !== 'string') {\n        throw new TypeError('Unexpected type of selector');\n      }\n      // We know that our selector is a string now.\n      let search = selector;\n      const searchContext = context ?\n      // If we don't have a context, maybe we have a root, from loading\n      typeof context === 'string' ? isHtml(context) ?\n      // $('li', '<ul>...</ul>')\n      new LoadedCheerio([parse(context, options, false, null)], rootInstance, options) : (\n      // $('li', 'ul')\n      search = `${context} ${search}`, rootInstance) : isCheerio(context) ?\n      // $('li', $)\n      context :\n      // $('li', node), $('li', [nodes])\n      new LoadedCheerio(Array.isArray(context) ? context : [context], rootInstance, options) : rootInstance;\n      // If we still don't have a context, return\n      if (!searchContext) return instance;\n      /*\n       * #id, .class, tag\n       */\n      return searchContext.find(search);\n    }\n    // Add in static methods & properties\n    Object.assign(initialize, staticMethods, {\n      load,\n      // `_root` and `_options` are used in static methods.\n      _root: initialRoot,\n      _options: internalOpts,\n      // Add `fn` for plugins\n      fn: LoadedCheerio.prototype,\n      // Add the prototype here to maintain `instanceof` behavior.\n      prototype: LoadedCheerio.prototype\n    });\n    return initialize;\n  };\n}\nfunction isNode(obj) {\n  return !!obj.name || obj.type === 'root' || obj.type === 'text' || obj.type === 'comment';\n}\n", "const UNDEFINED_CODE_POINTS = new Set([65534, 65535, 131070, 131071, 196606, 196607, 262142, 262143, 327678, 327679, 393214, 393215, 458750, 458751, 524286, 524287, 589822, 589823, 655358, 655359, 720894, 720895, 786430, 786431, 851966, 851967, 917502, 917503, 983038, 983039, 1048574, 1048575, 1114110, 1114111]);\nexport const REPLACEMENT_CHARACTER = '\\uFFFD';\nexport var CODE_POINTS;\n(function (CODE_POINTS) {\n  CODE_POINTS[CODE_POINTS[\"EOF\"] = -1] = \"EOF\";\n  CODE_POINTS[CODE_POINTS[\"NULL\"] = 0] = \"NULL\";\n  CODE_POINTS[CODE_POINTS[\"TABULATION\"] = 9] = \"TABULATION\";\n  CODE_POINTS[CODE_POINTS[\"CARRIAGE_RETURN\"] = 13] = \"CARRIAGE_RETURN\";\n  CODE_POINTS[CODE_POINTS[\"LINE_FEED\"] = 10] = \"LINE_FEED\";\n  CODE_POINTS[CODE_POINTS[\"FORM_FEED\"] = 12] = \"FORM_FEED\";\n  CODE_POINTS[CODE_POINTS[\"SPACE\"] = 32] = \"SPACE\";\n  CODE_POINTS[CODE_POINTS[\"EXCLAMATION_MARK\"] = 33] = \"EXCLAMATION_MARK\";\n  CODE_POINTS[CODE_POINTS[\"QUOTATION_MARK\"] = 34] = \"QUOTATION_MARK\";\n  CODE_POINTS[CODE_POINTS[\"AMPERSAND\"] = 38] = \"AMPERSAND\";\n  CODE_POINTS[CODE_POINTS[\"APOSTROPHE\"] = 39] = \"APOSTROPHE\";\n  CODE_POINTS[CODE_POINTS[\"HYPHEN_MINUS\"] = 45] = \"HYPHEN_MINUS\";\n  CODE_POINTS[CODE_POINTS[\"SOLIDUS\"] = 47] = \"SOLIDUS\";\n  CODE_POINTS[CODE_POINTS[\"DIGIT_0\"] = 48] = \"DIGIT_0\";\n  CODE_POINTS[CODE_POINTS[\"DIGIT_9\"] = 57] = \"DIGIT_9\";\n  CODE_POINTS[CODE_POINTS[\"SEMICOLON\"] = 59] = \"SEMICOLON\";\n  CODE_POINTS[CODE_POINTS[\"LESS_THAN_SIGN\"] = 60] = \"LESS_THAN_SIGN\";\n  CODE_POINTS[CODE_POINTS[\"EQUALS_SIGN\"] = 61] = \"EQUALS_SIGN\";\n  CODE_POINTS[CODE_POINTS[\"GREATER_THAN_SIGN\"] = 62] = \"GREATER_THAN_SIGN\";\n  CODE_POINTS[CODE_POINTS[\"QUESTION_MARK\"] = 63] = \"QUESTION_MARK\";\n  CODE_POINTS[CODE_POINTS[\"LATIN_CAPITAL_A\"] = 65] = \"LATIN_CAPITAL_A\";\n  CODE_POINTS[CODE_POINTS[\"LATIN_CAPITAL_Z\"] = 90] = \"LATIN_CAPITAL_Z\";\n  CODE_POINTS[CODE_POINTS[\"RIGHT_SQUARE_BRACKET\"] = 93] = \"RIGHT_SQUARE_BRACKET\";\n  CODE_POINTS[CODE_POINTS[\"GRAVE_ACCENT\"] = 96] = \"GRAVE_ACCENT\";\n  CODE_POINTS[CODE_POINTS[\"LATIN_SMALL_A\"] = 97] = \"LATIN_SMALL_A\";\n  CODE_POINTS[CODE_POINTS[\"LATIN_SMALL_Z\"] = 122] = \"LATIN_SMALL_Z\";\n})(CODE_POINTS || (CODE_POINTS = {}));\nexport const SEQUENCES = {\n  DASH_DASH: '--',\n  CDATA_START: '[CDATA[',\n  DOCTYPE: 'doctype',\n  SCRIPT: 'script',\n  PUBLIC: 'public',\n  SYSTEM: 'system'\n};\n//Surrogates\nexport function isSurrogate(cp) {\n  return cp >= 55296 && cp <= 57343;\n}\nexport function isSurrogatePair(cp) {\n  return cp >= 56320 && cp <= 57343;\n}\nexport function getSurrogatePairCodePoint(cp1, cp2) {\n  return (cp1 - 55296) * 1024 + 9216 + cp2;\n}\n//NOTE: excluding NULL and ASCII whitespace\nexport function isControlCodePoint(cp) {\n  return cp !== 0x20 && cp !== 0x0a && cp !== 0x0d && cp !== 0x09 && cp !== 0x0c && cp >= 0x01 && cp <= 0x1f || cp >= 0x7f && cp <= 0x9f;\n}\nexport function isUndefinedCodePoint(cp) {\n  return cp >= 64976 && cp <= 65007 || UNDEFINED_CODE_POINTS.has(cp);\n}", "export var ERR;\n(function (ERR) {\n  ERR[\"controlCharacterInInputStream\"] = \"control-character-in-input-stream\";\n  ERR[\"noncharacterInInputStream\"] = \"noncharacter-in-input-stream\";\n  ERR[\"surrogateInInputStream\"] = \"surrogate-in-input-stream\";\n  ERR[\"nonVoidHtmlElementStartTagWithTrailingSolidus\"] = \"non-void-html-element-start-tag-with-trailing-solidus\";\n  ERR[\"endTagWithAttributes\"] = \"end-tag-with-attributes\";\n  ERR[\"endTagWithTrailingSolidus\"] = \"end-tag-with-trailing-solidus\";\n  ERR[\"unexpectedSolidusInTag\"] = \"unexpected-solidus-in-tag\";\n  ERR[\"unexpectedNullCharacter\"] = \"unexpected-null-character\";\n  ERR[\"unexpectedQuestionMarkInsteadOfTagName\"] = \"unexpected-question-mark-instead-of-tag-name\";\n  ERR[\"invalidFirstCharacterOfTagName\"] = \"invalid-first-character-of-tag-name\";\n  ERR[\"unexpectedEqualsSignBeforeAttributeName\"] = \"unexpected-equals-sign-before-attribute-name\";\n  ERR[\"missingEndTagName\"] = \"missing-end-tag-name\";\n  ERR[\"unexpectedCharacterInAttributeName\"] = \"unexpected-character-in-attribute-name\";\n  ERR[\"unknownNamedCharacterReference\"] = \"unknown-named-character-reference\";\n  ERR[\"missingSemicolonAfterCharacterReference\"] = \"missing-semicolon-after-character-reference\";\n  ERR[\"unexpectedCharacterAfterDoctypeSystemIdentifier\"] = \"unexpected-character-after-doctype-system-identifier\";\n  ERR[\"unexpectedCharacterInUnquotedAttributeValue\"] = \"unexpected-character-in-unquoted-attribute-value\";\n  ERR[\"eofBeforeTagName\"] = \"eof-before-tag-name\";\n  ERR[\"eofInTag\"] = \"eof-in-tag\";\n  ERR[\"missingAttributeValue\"] = \"missing-attribute-value\";\n  ERR[\"missingWhitespaceBetweenAttributes\"] = \"missing-whitespace-between-attributes\";\n  ERR[\"missingWhitespaceAfterDoctypePublicKeyword\"] = \"missing-whitespace-after-doctype-public-keyword\";\n  ERR[\"missingWhitespaceBetweenDoctypePublicAndSystemIdentifiers\"] = \"missing-whitespace-between-doctype-public-and-system-identifiers\";\n  ERR[\"missingWhitespaceAfterDoctypeSystemKeyword\"] = \"missing-whitespace-after-doctype-system-keyword\";\n  ERR[\"missingQuoteBeforeDoctypePublicIdentifier\"] = \"missing-quote-before-doctype-public-identifier\";\n  ERR[\"missingQuoteBeforeDoctypeSystemIdentifier\"] = \"missing-quote-before-doctype-system-identifier\";\n  ERR[\"missingDoctypePublicIdentifier\"] = \"missing-doctype-public-identifier\";\n  ERR[\"missingDoctypeSystemIdentifier\"] = \"missing-doctype-system-identifier\";\n  ERR[\"abruptDoctypePublicIdentifier\"] = \"abrupt-doctype-public-identifier\";\n  ERR[\"abruptDoctypeSystemIdentifier\"] = \"abrupt-doctype-system-identifier\";\n  ERR[\"cdataInHtmlContent\"] = \"cdata-in-html-content\";\n  ERR[\"incorrectlyOpenedComment\"] = \"incorrectly-opened-comment\";\n  ERR[\"eofInScriptHtmlCommentLikeText\"] = \"eof-in-script-html-comment-like-text\";\n  ERR[\"eofInDoctype\"] = \"eof-in-doctype\";\n  ERR[\"nestedComment\"] = \"nested-comment\";\n  ERR[\"abruptClosingOfEmptyComment\"] = \"abrupt-closing-of-empty-comment\";\n  ERR[\"eofInComment\"] = \"eof-in-comment\";\n  ERR[\"incorrectlyClosedComment\"] = \"incorrectly-closed-comment\";\n  ERR[\"eofInCdata\"] = \"eof-in-cdata\";\n  ERR[\"absenceOfDigitsInNumericCharacterReference\"] = \"absence-of-digits-in-numeric-character-reference\";\n  ERR[\"nullCharacterReference\"] = \"null-character-reference\";\n  ERR[\"surrogateCharacterReference\"] = \"surrogate-character-reference\";\n  ERR[\"characterReferenceOutsideUnicodeRange\"] = \"character-reference-outside-unicode-range\";\n  ERR[\"controlCharacterReference\"] = \"control-character-reference\";\n  ERR[\"noncharacterCharacterReference\"] = \"noncharacter-character-reference\";\n  ERR[\"missingWhitespaceBeforeDoctypeName\"] = \"missing-whitespace-before-doctype-name\";\n  ERR[\"missingDoctypeName\"] = \"missing-doctype-name\";\n  ERR[\"invalidCharacterSequenceAfterDoctypeName\"] = \"invalid-character-sequence-after-doctype-name\";\n  ERR[\"duplicateAttribute\"] = \"duplicate-attribute\";\n  ERR[\"nonConformingDoctype\"] = \"non-conforming-doctype\";\n  ERR[\"missingDoctype\"] = \"missing-doctype\";\n  ERR[\"misplacedDoctype\"] = \"misplaced-doctype\";\n  ERR[\"endTagWithoutMatchingOpenElement\"] = \"end-tag-without-matching-open-element\";\n  ERR[\"closingOfElementWithOpenChildElements\"] = \"closing-of-element-with-open-child-elements\";\n  ERR[\"disallowedContentInNoscriptInHead\"] = \"disallowed-content-in-noscript-in-head\";\n  ERR[\"openElementsLeftAfterEof\"] = \"open-elements-left-after-eof\";\n  ERR[\"abandonedHeadElementChild\"] = \"abandoned-head-element-child\";\n  ERR[\"misplacedStartTagForHeadElement\"] = \"misplaced-start-tag-for-head-element\";\n  ERR[\"nestedNoscriptInHead\"] = \"nested-noscript-in-head\";\n  ERR[\"eofInElementThatCanContainOnlyText\"] = \"eof-in-element-that-can-contain-only-text\";\n})(ERR || (ERR = {}));", "import { CODE_POINTS as $, getSurrogatePairCodePoint, isControlCodePoint, isSurrogate, isSurrogatePair, isUndefinedCodePoint } from '../common/unicode.js';\nimport { ERR } from '../common/error-codes.js';\n//Const\nconst DEFAULT_BUFFER_WATERLINE = 1 << 16;\n//Preprocessor\n//NOTE: HTML input preprocessing\n//(see: http://www.whatwg.org/specs/web-apps/current-work/multipage/parsing.html#preprocessing-the-input-stream)\nexport class Preprocessor {\n  constructor(handler) {\n    this.handler = handler;\n    this.html = '';\n    this.pos = -1;\n    // NOTE: Initial `lastGapPos` is -2, to ensure `col` on initialisation is 0\n    this.lastGapPos = -2;\n    this.gapStack = [];\n    this.skipNextNewLine = false;\n    this.lastChunkWritten = false;\n    this.endOfChunkHit = false;\n    this.bufferWaterline = DEFAULT_BUFFER_WATERLINE;\n    this.isEol = false;\n    this.lineStartPos = 0;\n    this.droppedBufferSize = 0;\n    this.line = 1;\n    //NOTE: avoid reporting errors twice on advance/retreat\n    this.lastErrOffset = -1;\n  }\n  /** The column on the current line. If we just saw a gap (eg. a surrogate pair), return the index before. */\n  get col() {\n    return this.pos - this.lineStartPos + Number(this.lastGapPos !== this.pos);\n  }\n  get offset() {\n    return this.droppedBufferSize + this.pos;\n  }\n  getError(code, cpOffset) {\n    const {\n      line,\n      col,\n      offset\n    } = this;\n    const startCol = col + cpOffset;\n    const startOffset = offset + cpOffset;\n    return {\n      code,\n      startLine: line,\n      endLine: line,\n      startCol,\n      endCol: startCol,\n      startOffset,\n      endOffset: startOffset\n    };\n  }\n  _err(code) {\n    if (this.handler.onParseError && this.lastErrOffset !== this.offset) {\n      this.lastErrOffset = this.offset;\n      this.handler.onParseError(this.getError(code, 0));\n    }\n  }\n  _addGap() {\n    this.gapStack.push(this.lastGapPos);\n    this.lastGapPos = this.pos;\n  }\n  _processSurrogate(cp) {\n    //NOTE: try to peek a surrogate pair\n    if (this.pos !== this.html.length - 1) {\n      const nextCp = this.html.charCodeAt(this.pos + 1);\n      if (isSurrogatePair(nextCp)) {\n        //NOTE: we have a surrogate pair. Peek pair character and recalculate code point.\n        this.pos++;\n        //NOTE: add a gap that should be avoided during retreat\n        this._addGap();\n        return getSurrogatePairCodePoint(cp, nextCp);\n      }\n    }\n    //NOTE: we are at the end of a chunk, therefore we can't infer the surrogate pair yet.\n    else if (!this.lastChunkWritten) {\n      this.endOfChunkHit = true;\n      return $.EOF;\n    }\n    //NOTE: isolated surrogate\n    this._err(ERR.surrogateInInputStream);\n    return cp;\n  }\n  willDropParsedChunk() {\n    return this.pos > this.bufferWaterline;\n  }\n  dropParsedChunk() {\n    if (this.willDropParsedChunk()) {\n      this.html = this.html.substring(this.pos);\n      this.lineStartPos -= this.pos;\n      this.droppedBufferSize += this.pos;\n      this.pos = 0;\n      this.lastGapPos = -2;\n      this.gapStack.length = 0;\n    }\n  }\n  write(chunk, isLastChunk) {\n    if (this.html.length > 0) {\n      this.html += chunk;\n    } else {\n      this.html = chunk;\n    }\n    this.endOfChunkHit = false;\n    this.lastChunkWritten = isLastChunk;\n  }\n  insertHtmlAtCurrentPos(chunk) {\n    this.html = this.html.substring(0, this.pos + 1) + chunk + this.html.substring(this.pos + 1);\n    this.endOfChunkHit = false;\n  }\n  startsWith(pattern, caseSensitive) {\n    // Check if our buffer has enough characters\n    if (this.pos + pattern.length > this.html.length) {\n      this.endOfChunkHit = !this.lastChunkWritten;\n      return false;\n    }\n    if (caseSensitive) {\n      return this.html.startsWith(pattern, this.pos);\n    }\n    for (let i = 0; i < pattern.length; i++) {\n      const cp = this.html.charCodeAt(this.pos + i) | 0x20;\n      if (cp !== pattern.charCodeAt(i)) {\n        return false;\n      }\n    }\n    return true;\n  }\n  peek(offset) {\n    const pos = this.pos + offset;\n    if (pos >= this.html.length) {\n      this.endOfChunkHit = !this.lastChunkWritten;\n      return $.EOF;\n    }\n    const code = this.html.charCodeAt(pos);\n    return code === $.CARRIAGE_RETURN ? $.LINE_FEED : code;\n  }\n  advance() {\n    this.pos++;\n    //NOTE: LF should be in the last column of the line\n    if (this.isEol) {\n      this.isEol = false;\n      this.line++;\n      this.lineStartPos = this.pos;\n    }\n    if (this.pos >= this.html.length) {\n      this.endOfChunkHit = !this.lastChunkWritten;\n      return $.EOF;\n    }\n    let cp = this.html.charCodeAt(this.pos);\n    //NOTE: all U+000D CARRIAGE RETURN (CR) characters must be converted to U+000A LINE FEED (LF) characters\n    if (cp === $.CARRIAGE_RETURN) {\n      this.isEol = true;\n      this.skipNextNewLine = true;\n      return $.LINE_FEED;\n    }\n    //NOTE: any U+000A LINE FEED (LF) characters that immediately follow a U+000D CARRIAGE RETURN (CR) character\n    //must be ignored.\n    if (cp === $.LINE_FEED) {\n      this.isEol = true;\n      if (this.skipNextNewLine) {\n        // `line` will be bumped again in the recursive call.\n        this.line--;\n        this.skipNextNewLine = false;\n        this._addGap();\n        return this.advance();\n      }\n    }\n    this.skipNextNewLine = false;\n    if (isSurrogate(cp)) {\n      cp = this._processSurrogate(cp);\n    }\n    //OPTIMIZATION: first check if code point is in the common allowed\n    //range (ASCII alphanumeric, whitespaces, big chunk of BMP)\n    //before going into detailed performance cost validation.\n    const isCommonValidRange = this.handler.onParseError === null || cp > 0x1f && cp < 0x7f || cp === $.LINE_FEED || cp === $.CARRIAGE_RETURN || cp > 0x9f && cp < 64976;\n    if (!isCommonValidRange) {\n      this._checkForProblematicCharacters(cp);\n    }\n    return cp;\n  }\n  _checkForProblematicCharacters(cp) {\n    if (isControlCodePoint(cp)) {\n      this._err(ERR.controlCharacterInInputStream);\n    } else if (isUndefinedCodePoint(cp)) {\n      this._err(ERR.noncharacterInInputStream);\n    }\n  }\n  retreat(count) {\n    this.pos -= count;\n    while (this.pos < this.lastGapPos) {\n      this.lastGapPos = this.gapStack.pop();\n      this.pos--;\n    }\n    this.isEol = false;\n  }\n}", "export var TokenType;\n(function (TokenType) {\n  TokenType[TokenType[\"CHARACTER\"] = 0] = \"CHARACTER\";\n  TokenType[TokenType[\"NULL_CHARACTER\"] = 1] = \"NULL_CHARACTER\";\n  TokenType[TokenType[\"WHITESPACE_CHARACTER\"] = 2] = \"WHITESPACE_CHARACTER\";\n  TokenType[TokenType[\"START_TAG\"] = 3] = \"START_TAG\";\n  TokenType[TokenType[\"END_TAG\"] = 4] = \"END_TAG\";\n  TokenType[TokenType[\"COMMENT\"] = 5] = \"COMMENT\";\n  TokenType[TokenType[\"DOCTYPE\"] = 6] = \"DOCTYPE\";\n  TokenType[TokenType[\"EOF\"] = 7] = \"EOF\";\n  TokenType[TokenType[\"HIBERNATION\"] = 8] = \"HIBERNATION\";\n})(TokenType || (TokenType = {}));\nexport function getTokenAttr(token, attrName) {\n  for (let i = token.attrs.length - 1; i >= 0; i--) {\n    if (token.attrs[i].name === attrName) {\n      return token.attrs[i].value;\n    }\n  }\n  return null;\n}", "/** All valid namespaces in HTML. */\nexport var NS;\n(function (NS) {\n  NS[\"HTML\"] = \"http://www.w3.org/1999/xhtml\";\n  NS[\"MATHML\"] = \"http://www.w3.org/1998/Math/MathML\";\n  NS[\"SVG\"] = \"http://www.w3.org/2000/svg\";\n  NS[\"XLINK\"] = \"http://www.w3.org/1999/xlink\";\n  NS[\"XML\"] = \"http://www.w3.org/XML/1998/namespace\";\n  NS[\"XMLNS\"] = \"http://www.w3.org/2000/xmlns/\";\n})(NS || (NS = {}));\nexport var ATTRS;\n(function (ATTRS) {\n  ATTRS[\"TYPE\"] = \"type\";\n  ATTRS[\"ACTION\"] = \"action\";\n  ATTRS[\"ENCODING\"] = \"encoding\";\n  ATTRS[\"PROMPT\"] = \"prompt\";\n  ATTRS[\"NAME\"] = \"name\";\n  ATTRS[\"COLOR\"] = \"color\";\n  ATTRS[\"FACE\"] = \"face\";\n  ATTRS[\"SIZE\"] = \"size\";\n})(ATTRS || (ATTRS = {}));\n/**\n * The mode of the document.\n *\n * @see {@link https://dom.spec.whatwg.org/#concept-document-limited-quirks}\n */\nexport var DOCUMENT_MODE;\n(function (DOCUMENT_MODE) {\n  DOCUMENT_MODE[\"NO_QUIRKS\"] = \"no-quirks\";\n  DOCUMENT_MODE[\"QUIRKS\"] = \"quirks\";\n  DOCUMENT_MODE[\"LIMITED_QUIRKS\"] = \"limited-quirks\";\n})(DOCUMENT_MODE || (DOCUMENT_MODE = {}));\nexport var TAG_NAMES;\n(function (TAG_NAMES) {\n  TAG_NAMES[\"A\"] = \"a\";\n  TAG_NAMES[\"ADDRESS\"] = \"address\";\n  TAG_NAMES[\"ANNOTATION_XML\"] = \"annotation-xml\";\n  TAG_NAMES[\"APPLET\"] = \"applet\";\n  TAG_NAMES[\"AREA\"] = \"area\";\n  TAG_NAMES[\"ARTICLE\"] = \"article\";\n  TAG_NAMES[\"ASIDE\"] = \"aside\";\n  TAG_NAMES[\"B\"] = \"b\";\n  TAG_NAMES[\"BASE\"] = \"base\";\n  TAG_NAMES[\"BASEFONT\"] = \"basefont\";\n  TAG_NAMES[\"BGSOUND\"] = \"bgsound\";\n  TAG_NAMES[\"BIG\"] = \"big\";\n  TAG_NAMES[\"BLOCKQUOTE\"] = \"blockquote\";\n  TAG_NAMES[\"BODY\"] = \"body\";\n  TAG_NAMES[\"BR\"] = \"br\";\n  TAG_NAMES[\"BUTTON\"] = \"button\";\n  TAG_NAMES[\"CAPTION\"] = \"caption\";\n  TAG_NAMES[\"CENTER\"] = \"center\";\n  TAG_NAMES[\"CODE\"] = \"code\";\n  TAG_NAMES[\"COL\"] = \"col\";\n  TAG_NAMES[\"COLGROUP\"] = \"colgroup\";\n  TAG_NAMES[\"DD\"] = \"dd\";\n  TAG_NAMES[\"DESC\"] = \"desc\";\n  TAG_NAMES[\"DETAILS\"] = \"details\";\n  TAG_NAMES[\"DIALOG\"] = \"dialog\";\n  TAG_NAMES[\"DIR\"] = \"dir\";\n  TAG_NAMES[\"DIV\"] = \"div\";\n  TAG_NAMES[\"DL\"] = \"dl\";\n  TAG_NAMES[\"DT\"] = \"dt\";\n  TAG_NAMES[\"EM\"] = \"em\";\n  TAG_NAMES[\"EMBED\"] = \"embed\";\n  TAG_NAMES[\"FIELDSET\"] = \"fieldset\";\n  TAG_NAMES[\"FIGCAPTION\"] = \"figcaption\";\n  TAG_NAMES[\"FIGURE\"] = \"figure\";\n  TAG_NAMES[\"FONT\"] = \"font\";\n  TAG_NAMES[\"FOOTER\"] = \"footer\";\n  TAG_NAMES[\"FOREIGN_OBJECT\"] = \"foreignObject\";\n  TAG_NAMES[\"FORM\"] = \"form\";\n  TAG_NAMES[\"FRAME\"] = \"frame\";\n  TAG_NAMES[\"FRAMESET\"] = \"frameset\";\n  TAG_NAMES[\"H1\"] = \"h1\";\n  TAG_NAMES[\"H2\"] = \"h2\";\n  TAG_NAMES[\"H3\"] = \"h3\";\n  TAG_NAMES[\"H4\"] = \"h4\";\n  TAG_NAMES[\"H5\"] = \"h5\";\n  TAG_NAMES[\"H6\"] = \"h6\";\n  TAG_NAMES[\"HEAD\"] = \"head\";\n  TAG_NAMES[\"HEADER\"] = \"header\";\n  TAG_NAMES[\"HGROUP\"] = \"hgroup\";\n  TAG_NAMES[\"HR\"] = \"hr\";\n  TAG_NAMES[\"HTML\"] = \"html\";\n  TAG_NAMES[\"I\"] = \"i\";\n  TAG_NAMES[\"IMG\"] = \"img\";\n  TAG_NAMES[\"IMAGE\"] = \"image\";\n  TAG_NAMES[\"INPUT\"] = \"input\";\n  TAG_NAMES[\"IFRAME\"] = \"iframe\";\n  TAG_NAMES[\"KEYGEN\"] = \"keygen\";\n  TAG_NAMES[\"LABEL\"] = \"label\";\n  TAG_NAMES[\"LI\"] = \"li\";\n  TAG_NAMES[\"LINK\"] = \"link\";\n  TAG_NAMES[\"LISTING\"] = \"listing\";\n  TAG_NAMES[\"MAIN\"] = \"main\";\n  TAG_NAMES[\"MALIGNMARK\"] = \"malignmark\";\n  TAG_NAMES[\"MARQUEE\"] = \"marquee\";\n  TAG_NAMES[\"MATH\"] = \"math\";\n  TAG_NAMES[\"MENU\"] = \"menu\";\n  TAG_NAMES[\"META\"] = \"meta\";\n  TAG_NAMES[\"MGLYPH\"] = \"mglyph\";\n  TAG_NAMES[\"MI\"] = \"mi\";\n  TAG_NAMES[\"MO\"] = \"mo\";\n  TAG_NAMES[\"MN\"] = \"mn\";\n  TAG_NAMES[\"MS\"] = \"ms\";\n  TAG_NAMES[\"MTEXT\"] = \"mtext\";\n  TAG_NAMES[\"NAV\"] = \"nav\";\n  TAG_NAMES[\"NOBR\"] = \"nobr\";\n  TAG_NAMES[\"NOFRAMES\"] = \"noframes\";\n  TAG_NAMES[\"NOEMBED\"] = \"noembed\";\n  TAG_NAMES[\"NOSCRIPT\"] = \"noscript\";\n  TAG_NAMES[\"OBJECT\"] = \"object\";\n  TAG_NAMES[\"OL\"] = \"ol\";\n  TAG_NAMES[\"OPTGROUP\"] = \"optgroup\";\n  TAG_NAMES[\"OPTION\"] = \"option\";\n  TAG_NAMES[\"P\"] = \"p\";\n  TAG_NAMES[\"PARAM\"] = \"param\";\n  TAG_NAMES[\"PLAINTEXT\"] = \"plaintext\";\n  TAG_NAMES[\"PRE\"] = \"pre\";\n  TAG_NAMES[\"RB\"] = \"rb\";\n  TAG_NAMES[\"RP\"] = \"rp\";\n  TAG_NAMES[\"RT\"] = \"rt\";\n  TAG_NAMES[\"RTC\"] = \"rtc\";\n  TAG_NAMES[\"RUBY\"] = \"ruby\";\n  TAG_NAMES[\"S\"] = \"s\";\n  TAG_NAMES[\"SCRIPT\"] = \"script\";\n  TAG_NAMES[\"SEARCH\"] = \"search\";\n  TAG_NAMES[\"SECTION\"] = \"section\";\n  TAG_NAMES[\"SELECT\"] = \"select\";\n  TAG_NAMES[\"SOURCE\"] = \"source\";\n  TAG_NAMES[\"SMALL\"] = \"small\";\n  TAG_NAMES[\"SPAN\"] = \"span\";\n  TAG_NAMES[\"STRIKE\"] = \"strike\";\n  TAG_NAMES[\"STRONG\"] = \"strong\";\n  TAG_NAMES[\"STYLE\"] = \"style\";\n  TAG_NAMES[\"SUB\"] = \"sub\";\n  TAG_NAMES[\"SUMMARY\"] = \"summary\";\n  TAG_NAMES[\"SUP\"] = \"sup\";\n  TAG_NAMES[\"TABLE\"] = \"table\";\n  TAG_NAMES[\"TBODY\"] = \"tbody\";\n  TAG_NAMES[\"TEMPLATE\"] = \"template\";\n  TAG_NAMES[\"TEXTAREA\"] = \"textarea\";\n  TAG_NAMES[\"TFOOT\"] = \"tfoot\";\n  TAG_NAMES[\"TD\"] = \"td\";\n  TAG_NAMES[\"TH\"] = \"th\";\n  TAG_NAMES[\"THEAD\"] = \"thead\";\n  TAG_NAMES[\"TITLE\"] = \"title\";\n  TAG_NAMES[\"TR\"] = \"tr\";\n  TAG_NAMES[\"TRACK\"] = \"track\";\n  TAG_NAMES[\"TT\"] = \"tt\";\n  TAG_NAMES[\"U\"] = \"u\";\n  TAG_NAMES[\"UL\"] = \"ul\";\n  TAG_NAMES[\"SVG\"] = \"svg\";\n  TAG_NAMES[\"VAR\"] = \"var\";\n  TAG_NAMES[\"WBR\"] = \"wbr\";\n  TAG_NAMES[\"XMP\"] = \"xmp\";\n})(TAG_NAMES || (TAG_NAMES = {}));\n/**\n * Tag IDs are numeric IDs for known tag names.\n *\n * We use tag IDs to improve the performance of tag name comparisons.\n */\nexport var TAG_ID;\n(function (TAG_ID) {\n  TAG_ID[TAG_ID[\"UNKNOWN\"] = 0] = \"UNKNOWN\";\n  TAG_ID[TAG_ID[\"A\"] = 1] = \"A\";\n  TAG_ID[TAG_ID[\"ADDRESS\"] = 2] = \"ADDRESS\";\n  TAG_ID[TAG_ID[\"ANNOTATION_XML\"] = 3] = \"ANNOTATION_XML\";\n  TAG_ID[TAG_ID[\"APPLET\"] = 4] = \"APPLET\";\n  TAG_ID[TAG_ID[\"AREA\"] = 5] = \"AREA\";\n  TAG_ID[TAG_ID[\"ARTICLE\"] = 6] = \"ARTICLE\";\n  TAG_ID[TAG_ID[\"ASIDE\"] = 7] = \"ASIDE\";\n  TAG_ID[TAG_ID[\"B\"] = 8] = \"B\";\n  TAG_ID[TAG_ID[\"BASE\"] = 9] = \"BASE\";\n  TAG_ID[TAG_ID[\"BASEFONT\"] = 10] = \"BASEFONT\";\n  TAG_ID[TAG_ID[\"BGSOUND\"] = 11] = \"BGSOUND\";\n  TAG_ID[TAG_ID[\"BIG\"] = 12] = \"BIG\";\n  TAG_ID[TAG_ID[\"BLOCKQUOTE\"] = 13] = \"BLOCKQUOTE\";\n  TAG_ID[TAG_ID[\"BODY\"] = 14] = \"BODY\";\n  TAG_ID[TAG_ID[\"BR\"] = 15] = \"BR\";\n  TAG_ID[TAG_ID[\"BUTTON\"] = 16] = \"BUTTON\";\n  TAG_ID[TAG_ID[\"CAPTION\"] = 17] = \"CAPTION\";\n  TAG_ID[TAG_ID[\"CENTER\"] = 18] = \"CENTER\";\n  TAG_ID[TAG_ID[\"CODE\"] = 19] = \"CODE\";\n  TAG_ID[TAG_ID[\"COL\"] = 20] = \"COL\";\n  TAG_ID[TAG_ID[\"COLGROUP\"] = 21] = \"COLGROUP\";\n  TAG_ID[TAG_ID[\"DD\"] = 22] = \"DD\";\n  TAG_ID[TAG_ID[\"DESC\"] = 23] = \"DESC\";\n  TAG_ID[TAG_ID[\"DETAILS\"] = 24] = \"DETAILS\";\n  TAG_ID[TAG_ID[\"DIALOG\"] = 25] = \"DIALOG\";\n  TAG_ID[TAG_ID[\"DIR\"] = 26] = \"DIR\";\n  TAG_ID[TAG_ID[\"DIV\"] = 27] = \"DIV\";\n  TAG_ID[TAG_ID[\"DL\"] = 28] = \"DL\";\n  TAG_ID[TAG_ID[\"DT\"] = 29] = \"DT\";\n  TAG_ID[TAG_ID[\"EM\"] = 30] = \"EM\";\n  TAG_ID[TAG_ID[\"EMBED\"] = 31] = \"EMBED\";\n  TAG_ID[TAG_ID[\"FIELDSET\"] = 32] = \"FIELDSET\";\n  TAG_ID[TAG_ID[\"FIGCAPTION\"] = 33] = \"FIGCAPTION\";\n  TAG_ID[TAG_ID[\"FIGURE\"] = 34] = \"FIGURE\";\n  TAG_ID[TAG_ID[\"FONT\"] = 35] = \"FONT\";\n  TAG_ID[TAG_ID[\"FOOTER\"] = 36] = \"FOOTER\";\n  TAG_ID[TAG_ID[\"FOREIGN_OBJECT\"] = 37] = \"FOREIGN_OBJECT\";\n  TAG_ID[TAG_ID[\"FORM\"] = 38] = \"FORM\";\n  TAG_ID[TAG_ID[\"FRAME\"] = 39] = \"FRAME\";\n  TAG_ID[TAG_ID[\"FRAMESET\"] = 40] = \"FRAMESET\";\n  TAG_ID[TAG_ID[\"H1\"] = 41] = \"H1\";\n  TAG_ID[TAG_ID[\"H2\"] = 42] = \"H2\";\n  TAG_ID[TAG_ID[\"H3\"] = 43] = \"H3\";\n  TAG_ID[TAG_ID[\"H4\"] = 44] = \"H4\";\n  TAG_ID[TAG_ID[\"H5\"] = 45] = \"H5\";\n  TAG_ID[TAG_ID[\"H6\"] = 46] = \"H6\";\n  TAG_ID[TAG_ID[\"HEAD\"] = 47] = \"HEAD\";\n  TAG_ID[TAG_ID[\"HEADER\"] = 48] = \"HEADER\";\n  TAG_ID[TAG_ID[\"HGROUP\"] = 49] = \"HGROUP\";\n  TAG_ID[TAG_ID[\"HR\"] = 50] = \"HR\";\n  TAG_ID[TAG_ID[\"HTML\"] = 51] = \"HTML\";\n  TAG_ID[TAG_ID[\"I\"] = 52] = \"I\";\n  TAG_ID[TAG_ID[\"IMG\"] = 53] = \"IMG\";\n  TAG_ID[TAG_ID[\"IMAGE\"] = 54] = \"IMAGE\";\n  TAG_ID[TAG_ID[\"INPUT\"] = 55] = \"INPUT\";\n  TAG_ID[TAG_ID[\"IFRAME\"] = 56] = \"IFRAME\";\n  TAG_ID[TAG_ID[\"KEYGEN\"] = 57] = \"KEYGEN\";\n  TAG_ID[TAG_ID[\"LABEL\"] = 58] = \"LABEL\";\n  TAG_ID[TAG_ID[\"LI\"] = 59] = \"LI\";\n  TAG_ID[TAG_ID[\"LINK\"] = 60] = \"LINK\";\n  TAG_ID[TAG_ID[\"LISTING\"] = 61] = \"LISTING\";\n  TAG_ID[TAG_ID[\"MAIN\"] = 62] = \"MAIN\";\n  TAG_ID[TAG_ID[\"MALIGNMARK\"] = 63] = \"MALIGNMARK\";\n  TAG_ID[TAG_ID[\"MARQUEE\"] = 64] = \"MARQUEE\";\n  TAG_ID[TAG_ID[\"MATH\"] = 65] = \"MATH\";\n  TAG_ID[TAG_ID[\"MENU\"] = 66] = \"MENU\";\n  TAG_ID[TAG_ID[\"META\"] = 67] = \"META\";\n  TAG_ID[TAG_ID[\"MGLYPH\"] = 68] = \"MGLYPH\";\n  TAG_ID[TAG_ID[\"MI\"] = 69] = \"MI\";\n  TAG_ID[TAG_ID[\"MO\"] = 70] = \"MO\";\n  TAG_ID[TAG_ID[\"MN\"] = 71] = \"MN\";\n  TAG_ID[TAG_ID[\"MS\"] = 72] = \"MS\";\n  TAG_ID[TAG_ID[\"MTEXT\"] = 73] = \"MTEXT\";\n  TAG_ID[TAG_ID[\"NAV\"] = 74] = \"NAV\";\n  TAG_ID[TAG_ID[\"NOBR\"] = 75] = \"NOBR\";\n  TAG_ID[TAG_ID[\"NOFRAMES\"] = 76] = \"NOFRAMES\";\n  TAG_ID[TAG_ID[\"NOEMBED\"] = 77] = \"NOEMBED\";\n  TAG_ID[TAG_ID[\"NOSCRIPT\"] = 78] = \"NOSCRIPT\";\n  TAG_ID[TAG_ID[\"OBJECT\"] = 79] = \"OBJECT\";\n  TAG_ID[TAG_ID[\"OL\"] = 80] = \"OL\";\n  TAG_ID[TAG_ID[\"OPTGROUP\"] = 81] = \"OPTGROUP\";\n  TAG_ID[TAG_ID[\"OPTION\"] = 82] = \"OPTION\";\n  TAG_ID[TAG_ID[\"P\"] = 83] = \"P\";\n  TAG_ID[TAG_ID[\"PARAM\"] = 84] = \"PARAM\";\n  TAG_ID[TAG_ID[\"PLAINTEXT\"] = 85] = \"PLAINTEXT\";\n  TAG_ID[TAG_ID[\"PRE\"] = 86] = \"PRE\";\n  TAG_ID[TAG_ID[\"RB\"] = 87] = \"RB\";\n  TAG_ID[TAG_ID[\"RP\"] = 88] = \"RP\";\n  TAG_ID[TAG_ID[\"RT\"] = 89] = \"RT\";\n  TAG_ID[TAG_ID[\"RTC\"] = 90] = \"RTC\";\n  TAG_ID[TAG_ID[\"RUBY\"] = 91] = \"RUBY\";\n  TAG_ID[TAG_ID[\"S\"] = 92] = \"S\";\n  TAG_ID[TAG_ID[\"SCRIPT\"] = 93] = \"SCRIPT\";\n  TAG_ID[TAG_ID[\"SEARCH\"] = 94] = \"SEARCH\";\n  TAG_ID[TAG_ID[\"SECTION\"] = 95] = \"SECTION\";\n  TAG_ID[TAG_ID[\"SELECT\"] = 96] = \"SELECT\";\n  TAG_ID[TAG_ID[\"SOURCE\"] = 97] = \"SOURCE\";\n  TAG_ID[TAG_ID[\"SMALL\"] = 98] = \"SMALL\";\n  TAG_ID[TAG_ID[\"SPAN\"] = 99] = \"SPAN\";\n  TAG_ID[TAG_ID[\"STRIKE\"] = 100] = \"STRIKE\";\n  TAG_ID[TAG_ID[\"STRONG\"] = 101] = \"STRONG\";\n  TAG_ID[TAG_ID[\"STYLE\"] = 102] = \"STYLE\";\n  TAG_ID[TAG_ID[\"SUB\"] = 103] = \"SUB\";\n  TAG_ID[TAG_ID[\"SUMMARY\"] = 104] = \"SUMMARY\";\n  TAG_ID[TAG_ID[\"SUP\"] = 105] = \"SUP\";\n  TAG_ID[TAG_ID[\"TABLE\"] = 106] = \"TABLE\";\n  TAG_ID[TAG_ID[\"TBODY\"] = 107] = \"TBODY\";\n  TAG_ID[TAG_ID[\"TEMPLATE\"] = 108] = \"TEMPLATE\";\n  TAG_ID[TAG_ID[\"TEXTAREA\"] = 109] = \"TEXTAREA\";\n  TAG_ID[TAG_ID[\"TFOOT\"] = 110] = \"TFOOT\";\n  TAG_ID[TAG_ID[\"TD\"] = 111] = \"TD\";\n  TAG_ID[TAG_ID[\"TH\"] = 112] = \"TH\";\n  TAG_ID[TAG_ID[\"THEAD\"] = 113] = \"THEAD\";\n  TAG_ID[TAG_ID[\"TITLE\"] = 114] = \"TITLE\";\n  TAG_ID[TAG_ID[\"TR\"] = 115] = \"TR\";\n  TAG_ID[TAG_ID[\"TRACK\"] = 116] = \"TRACK\";\n  TAG_ID[TAG_ID[\"TT\"] = 117] = \"TT\";\n  TAG_ID[TAG_ID[\"U\"] = 118] = \"U\";\n  TAG_ID[TAG_ID[\"UL\"] = 119] = \"UL\";\n  TAG_ID[TAG_ID[\"SVG\"] = 120] = \"SVG\";\n  TAG_ID[TAG_ID[\"VAR\"] = 121] = \"VAR\";\n  TAG_ID[TAG_ID[\"WBR\"] = 122] = \"WBR\";\n  TAG_ID[TAG_ID[\"XMP\"] = 123] = \"XMP\";\n})(TAG_ID || (TAG_ID = {}));\nconst TAG_NAME_TO_ID = new Map([[TAG_NAMES.A, TAG_ID.A], [TAG_NAMES.ADDRESS, TAG_ID.ADDRESS], [TAG_NAMES.ANNOTATION_XML, TAG_ID.ANNOTATION_XML], [TAG_NAMES.APPLET, TAG_ID.APPLET], [TAG_NAMES.AREA, TAG_ID.AREA], [TAG_NAMES.ARTICLE, TAG_ID.ARTICLE], [TAG_NAMES.ASIDE, TAG_ID.ASIDE], [TAG_NAMES.B, TAG_ID.B], [TAG_NAMES.BASE, TAG_ID.BASE], [TAG_NAMES.BASEFONT, TAG_ID.BASEFONT], [TAG_NAMES.BGSOUND, TAG_ID.BGSOUND], [TAG_NAMES.BIG, TAG_ID.BIG], [TAG_NAMES.BLOCKQUOTE, TAG_ID.BLOCKQUOTE], [TAG_NAMES.BODY, TAG_ID.BODY], [TAG_NAMES.BR, TAG_ID.BR], [TAG_NAMES.BUTTON, TAG_ID.BUTTON], [TAG_NAMES.CAPTION, TAG_ID.CAPTION], [TAG_NAMES.CENTER, TAG_ID.CENTER], [TAG_NAMES.CODE, TAG_ID.CODE], [TAG_NAMES.COL, TAG_ID.COL], [TAG_NAMES.COLGROUP, TAG_ID.COLGROUP], [TAG_NAMES.DD, TAG_ID.DD], [TAG_NAMES.DESC, TAG_ID.DESC], [TAG_NAMES.DETAILS, TAG_ID.DETAILS], [TAG_NAMES.DIALOG, TAG_ID.DIALOG], [TAG_NAMES.DIR, TAG_ID.DIR], [TAG_NAMES.DIV, TAG_ID.DIV], [TAG_NAMES.DL, TAG_ID.DL], [TAG_NAMES.DT, TAG_ID.DT], [TAG_NAMES.EM, TAG_ID.EM], [TAG_NAMES.EMBED, TAG_ID.EMBED], [TAG_NAMES.FIELDSET, TAG_ID.FIELDSET], [TAG_NAMES.FIGCAPTION, TAG_ID.FIGCAPTION], [TAG_NAMES.FIGURE, TAG_ID.FIGURE], [TAG_NAMES.FONT, TAG_ID.FONT], [TAG_NAMES.FOOTER, TAG_ID.FOOTER], [TAG_NAMES.FOREIGN_OBJECT, TAG_ID.FOREIGN_OBJECT], [TAG_NAMES.FORM, TAG_ID.FORM], [TAG_NAMES.FRAME, TAG_ID.FRAME], [TAG_NAMES.FRAMESET, TAG_ID.FRAMESET], [TAG_NAMES.H1, TAG_ID.H1], [TAG_NAMES.H2, TAG_ID.H2], [TAG_NAMES.H3, TAG_ID.H3], [TAG_NAMES.H4, TAG_ID.H4], [TAG_NAMES.H5, TAG_ID.H5], [TAG_NAMES.H6, TAG_ID.H6], [TAG_NAMES.HEAD, TAG_ID.HEAD], [TAG_NAMES.HEADER, TAG_ID.HEADER], [TAG_NAMES.HGROUP, TAG_ID.HGROUP], [TAG_NAMES.HR, TAG_ID.HR], [TAG_NAMES.HTML, TAG_ID.HTML], [TAG_NAMES.I, TAG_ID.I], [TAG_NAMES.IMG, TAG_ID.IMG], [TAG_NAMES.IMAGE, TAG_ID.IMAGE], [TAG_NAMES.INPUT, TAG_ID.INPUT], [TAG_NAMES.IFRAME, TAG_ID.IFRAME], [TAG_NAMES.KEYGEN, TAG_ID.KEYGEN], [TAG_NAMES.LABEL, TAG_ID.LABEL], [TAG_NAMES.LI, TAG_ID.LI], [TAG_NAMES.LINK, TAG_ID.LINK], [TAG_NAMES.LISTING, TAG_ID.LISTING], [TAG_NAMES.MAIN, TAG_ID.MAIN], [TAG_NAMES.MALIGNMARK, TAG_ID.MALIGNMARK], [TAG_NAMES.MARQUEE, TAG_ID.MARQUEE], [TAG_NAMES.MATH, TAG_ID.MATH], [TAG_NAMES.MENU, TAG_ID.MENU], [TAG_NAMES.META, TAG_ID.META], [TAG_NAMES.MGLYPH, TAG_ID.MGLYPH], [TAG_NAMES.MI, TAG_ID.MI], [TAG_NAMES.MO, TAG_ID.MO], [TAG_NAMES.MN, TAG_ID.MN], [TAG_NAMES.MS, TAG_ID.MS], [TAG_NAMES.MTEXT, TAG_ID.MTEXT], [TAG_NAMES.NAV, TAG_ID.NAV], [TAG_NAMES.NOBR, TAG_ID.NOBR], [TAG_NAMES.NOFRAMES, TAG_ID.NOFRAMES], [TAG_NAMES.NOEMBED, TAG_ID.NOEMBED], [TAG_NAMES.NOSCRIPT, TAG_ID.NOSCRIPT], [TAG_NAMES.OBJECT, TAG_ID.OBJECT], [TAG_NAMES.OL, TAG_ID.OL], [TAG_NAMES.OPTGROUP, TAG_ID.OPTGROUP], [TAG_NAMES.OPTION, TAG_ID.OPTION], [TAG_NAMES.P, TAG_ID.P], [TAG_NAMES.PARAM, TAG_ID.PARAM], [TAG_NAMES.PLAINTEXT, TAG_ID.PLAINTEXT], [TAG_NAMES.PRE, TAG_ID.PRE], [TAG_NAMES.RB, TAG_ID.RB], [TAG_NAMES.RP, TAG_ID.RP], [TAG_NAMES.RT, TAG_ID.RT], [TAG_NAMES.RTC, TAG_ID.RTC], [TAG_NAMES.RUBY, TAG_ID.RUBY], [TAG_NAMES.S, TAG_ID.S], [TAG_NAMES.SCRIPT, TAG_ID.SCRIPT], [TAG_NAMES.SEARCH, TAG_ID.SEARCH], [TAG_NAMES.SECTION, TAG_ID.SECTION], [TAG_NAMES.SELECT, TAG_ID.SELECT], [TAG_NAMES.SOURCE, TAG_ID.SOURCE], [TAG_NAMES.SMALL, TAG_ID.SMALL], [TAG_NAMES.SPAN, TAG_ID.SPAN], [TAG_NAMES.STRIKE, TAG_ID.STRIKE], [TAG_NAMES.STRONG, TAG_ID.STRONG], [TAG_NAMES.STYLE, TAG_ID.STYLE], [TAG_NAMES.SUB, TAG_ID.SUB], [TAG_NAMES.SUMMARY, TAG_ID.SUMMARY], [TAG_NAMES.SUP, TAG_ID.SUP], [TAG_NAMES.TABLE, TAG_ID.TABLE], [TAG_NAMES.TBODY, TAG_ID.TBODY], [TAG_NAMES.TEMPLATE, TAG_ID.TEMPLATE], [TAG_NAMES.TEXTAREA, TAG_ID.TEXTAREA], [TAG_NAMES.TFOOT, TAG_ID.TFOOT], [TAG_NAMES.TD, TAG_ID.TD], [TAG_NAMES.TH, TAG_ID.TH], [TAG_NAMES.THEAD, TAG_ID.THEAD], [TAG_NAMES.TITLE, TAG_ID.TITLE], [TAG_NAMES.TR, TAG_ID.TR], [TAG_NAMES.TRACK, TAG_ID.TRACK], [TAG_NAMES.TT, TAG_ID.TT], [TAG_NAMES.U, TAG_ID.U], [TAG_NAMES.UL, TAG_ID.UL], [TAG_NAMES.SVG, TAG_ID.SVG], [TAG_NAMES.VAR, TAG_ID.VAR], [TAG_NAMES.WBR, TAG_ID.WBR], [TAG_NAMES.XMP, TAG_ID.XMP]]);\nexport function getTagID(tagName) {\n  var _a;\n  return (_a = TAG_NAME_TO_ID.get(tagName)) !== null && _a !== void 0 ? _a : TAG_ID.UNKNOWN;\n}\nconst $ = TAG_ID;\nexport const SPECIAL_ELEMENTS = {\n  [NS.HTML]: new Set([$.ADDRESS, $.APPLET, $.AREA, $.ARTICLE, $.ASIDE, $.BASE, $.BASEFONT, $.BGSOUND, $.BLOCKQUOTE, $.BODY, $.BR, $.BUTTON, $.CAPTION, $.CENTER, $.COL, $.COLGROUP, $.DD, $.DETAILS, $.DIR, $.DIV, $.DL, $.DT, $.EMBED, $.FIELDSET, $.FIGCAPTION, $.FIGURE, $.FOOTER, $.FORM, $.FRAME, $.FRAMESET, $.H1, $.H2, $.H3, $.H4, $.H5, $.H6, $.HEAD, $.HEADER, $.HGROUP, $.HR, $.HTML, $.IFRAME, $.IMG, $.INPUT, $.LI, $.LINK, $.LISTING, $.MAIN, $.MARQUEE, $.MENU, $.META, $.NAV, $.NOEMBED, $.NOFRAMES, $.NOSCRIPT, $.OBJECT, $.OL, $.P, $.PARAM, $.PLAINTEXT, $.PRE, $.SCRIPT, $.SECTION, $.SELECT, $.SOURCE, $.STYLE, $.SUMMARY, $.TABLE, $.TBODY, $.TD, $.TEMPLATE, $.TEXTAREA, $.TFOOT, $.TH, $.THEAD, $.TITLE, $.TR, $.TRACK, $.UL, $.WBR, $.XMP]),\n  [NS.MATHML]: new Set([$.MI, $.MO, $.MN, $.MS, $.MTEXT, $.ANNOTATION_XML]),\n  [NS.SVG]: new Set([$.TITLE, $.FOREIGN_OBJECT, $.DESC]),\n  [NS.XLINK]: new Set(),\n  [NS.XML]: new Set(),\n  [NS.XMLNS]: new Set()\n};\nexport const NUMBERED_HEADERS = new Set([$.H1, $.H2, $.H3, $.H4, $.H5, $.H6]);\nconst UNESCAPED_TEXT = new Set([TAG_NAMES.STYLE, TAG_NAMES.SCRIPT, TAG_NAMES.XMP, TAG_NAMES.IFRAME, TAG_NAMES.NOEMBED, TAG_NAMES.NOFRAMES, TAG_NAMES.PLAINTEXT]);\nexport function hasUnescapedText(tn, scriptingEnabled) {\n  return UNESCAPED_TEXT.has(tn) || scriptingEnabled && tn === TAG_NAMES.NOSCRIPT;\n}", "import { Preprocessor } from './preprocessor.js';\nimport { CODE_POINTS as $, SEQUENCES as $$, REPLACEMENT_CHARACTER, isSurrogate, isUndefinedCodePoint, isControlCodePoint } from '../common/unicode.js';\nimport { TokenType, getTokenAttr } from '../common/token.js';\nimport { htmlDecodeTree, EntityDecoder, DecodingMode } from 'entities/lib/decode.js';\nimport { ERR } from '../common/error-codes.js';\nimport { TAG_ID, getTagID } from '../common/html.js';\n//States\nvar State;\n(function (State) {\n  State[State[\"DATA\"] = 0] = \"DATA\";\n  State[State[\"RCDATA\"] = 1] = \"RCDATA\";\n  State[State[\"RAWTEXT\"] = 2] = \"RAWTEXT\";\n  State[State[\"SCRIPT_DATA\"] = 3] = \"SCRIPT_DATA\";\n  State[State[\"PLAINTEXT\"] = 4] = \"PLAINTEXT\";\n  State[State[\"TAG_OPEN\"] = 5] = \"TAG_OPEN\";\n  State[State[\"END_TAG_OPEN\"] = 6] = \"END_TAG_OPEN\";\n  State[State[\"TAG_NAME\"] = 7] = \"TAG_NAME\";\n  State[State[\"RCDATA_LESS_THAN_SIGN\"] = 8] = \"RCDATA_LESS_THAN_SIGN\";\n  State[State[\"RCDATA_END_TAG_OPEN\"] = 9] = \"RCDATA_END_TAG_OPEN\";\n  State[State[\"RCDATA_END_TAG_NAME\"] = 10] = \"RCDATA_END_TAG_NAME\";\n  State[State[\"RAWTEXT_LESS_THAN_SIGN\"] = 11] = \"RAWTEXT_LESS_THAN_SIGN\";\n  State[State[\"RAWTEXT_END_TAG_OPEN\"] = 12] = \"RAWTEXT_END_TAG_OPEN\";\n  State[State[\"RAWTEXT_END_TAG_NAME\"] = 13] = \"RAWTEXT_END_TAG_NAME\";\n  State[State[\"SCRIPT_DATA_LESS_THAN_SIGN\"] = 14] = \"SCRIPT_DATA_LESS_THAN_SIGN\";\n  State[State[\"SCRIPT_DATA_END_TAG_OPEN\"] = 15] = \"SCRIPT_DATA_END_TAG_OPEN\";\n  State[State[\"SCRIPT_DATA_END_TAG_NAME\"] = 16] = \"SCRIPT_DATA_END_TAG_NAME\";\n  State[State[\"SCRIPT_DATA_ESCAPE_START\"] = 17] = \"SCRIPT_DATA_ESCAPE_START\";\n  State[State[\"SCRIPT_DATA_ESCAPE_START_DASH\"] = 18] = \"SCRIPT_DATA_ESCAPE_START_DASH\";\n  State[State[\"SCRIPT_DATA_ESCAPED\"] = 19] = \"SCRIPT_DATA_ESCAPED\";\n  State[State[\"SCRIPT_DATA_ESCAPED_DASH\"] = 20] = \"SCRIPT_DATA_ESCAPED_DASH\";\n  State[State[\"SCRIPT_DATA_ESCAPED_DASH_DASH\"] = 21] = \"SCRIPT_DATA_ESCAPED_DASH_DASH\";\n  State[State[\"SCRIPT_DATA_ESCAPED_LESS_THAN_SIGN\"] = 22] = \"SCRIPT_DATA_ESCAPED_LESS_THAN_SIGN\";\n  State[State[\"SCRIPT_DATA_ESCAPED_END_TAG_OPEN\"] = 23] = \"SCRIPT_DATA_ESCAPED_END_TAG_OPEN\";\n  State[State[\"SCRIPT_DATA_ESCAPED_END_TAG_NAME\"] = 24] = \"SCRIPT_DATA_ESCAPED_END_TAG_NAME\";\n  State[State[\"SCRIPT_DATA_DOUBLE_ESCAPE_START\"] = 25] = \"SCRIPT_DATA_DOUBLE_ESCAPE_START\";\n  State[State[\"SCRIPT_DATA_DOUBLE_ESCAPED\"] = 26] = \"SCRIPT_DATA_DOUBLE_ESCAPED\";\n  State[State[\"SCRIPT_DATA_DOUBLE_ESCAPED_DASH\"] = 27] = \"SCRIPT_DATA_DOUBLE_ESCAPED_DASH\";\n  State[State[\"SCRIPT_DATA_DOUBLE_ESCAPED_DASH_DASH\"] = 28] = \"SCRIPT_DATA_DOUBLE_ESCAPED_DASH_DASH\";\n  State[State[\"SCRIPT_DATA_DOUBLE_ESCAPED_LESS_THAN_SIGN\"] = 29] = \"SCRIPT_DATA_DOUBLE_ESCAPED_LESS_THAN_SIGN\";\n  State[State[\"SCRIPT_DATA_DOUBLE_ESCAPE_END\"] = 30] = \"SCRIPT_DATA_DOUBLE_ESCAPE_END\";\n  State[State[\"BEFORE_ATTRIBUTE_NAME\"] = 31] = \"BEFORE_ATTRIBUTE_NAME\";\n  State[State[\"ATTRIBUTE_NAME\"] = 32] = \"ATTRIBUTE_NAME\";\n  State[State[\"AFTER_ATTRIBUTE_NAME\"] = 33] = \"AFTER_ATTRIBUTE_NAME\";\n  State[State[\"BEFORE_ATTRIBUTE_VALUE\"] = 34] = \"BEFORE_ATTRIBUTE_VALUE\";\n  State[State[\"ATTRIBUTE_VALUE_DOUBLE_QUOTED\"] = 35] = \"ATTRIBUTE_VALUE_DOUBLE_QUOTED\";\n  State[State[\"ATTRIBUTE_VALUE_SINGLE_QUOTED\"] = 36] = \"ATTRIBUTE_VALUE_SINGLE_QUOTED\";\n  State[State[\"ATTRIBUTE_VALUE_UNQUOTED\"] = 37] = \"ATTRIBUTE_VALUE_UNQUOTED\";\n  State[State[\"AFTER_ATTRIBUTE_VALUE_QUOTED\"] = 38] = \"AFTER_ATTRIBUTE_VALUE_QUOTED\";\n  State[State[\"SELF_CLOSING_START_TAG\"] = 39] = \"SELF_CLOSING_START_TAG\";\n  State[State[\"BOGUS_COMMENT\"] = 40] = \"BOGUS_COMMENT\";\n  State[State[\"MARKUP_DECLARATION_OPEN\"] = 41] = \"MARKUP_DECLARATION_OPEN\";\n  State[State[\"COMMENT_START\"] = 42] = \"COMMENT_START\";\n  State[State[\"COMMENT_START_DASH\"] = 43] = \"COMMENT_START_DASH\";\n  State[State[\"COMMENT\"] = 44] = \"COMMENT\";\n  State[State[\"COMMENT_LESS_THAN_SIGN\"] = 45] = \"COMMENT_LESS_THAN_SIGN\";\n  State[State[\"COMMENT_LESS_THAN_SIGN_BANG\"] = 46] = \"COMMENT_LESS_THAN_SIGN_BANG\";\n  State[State[\"COMMENT_LESS_THAN_SIGN_BANG_DASH\"] = 47] = \"COMMENT_LESS_THAN_SIGN_BANG_DASH\";\n  State[State[\"COMMENT_LESS_THAN_SIGN_BANG_DASH_DASH\"] = 48] = \"COMMENT_LESS_THAN_SIGN_BANG_DASH_DASH\";\n  State[State[\"COMMENT_END_DASH\"] = 49] = \"COMMENT_END_DASH\";\n  State[State[\"COMMENT_END\"] = 50] = \"COMMENT_END\";\n  State[State[\"COMMENT_END_BANG\"] = 51] = \"COMMENT_END_BANG\";\n  State[State[\"DOCTYPE\"] = 52] = \"DOCTYPE\";\n  State[State[\"BEFORE_DOCTYPE_NAME\"] = 53] = \"BEFORE_DOCTYPE_NAME\";\n  State[State[\"DOCTYPE_NAME\"] = 54] = \"DOCTYPE_NAME\";\n  State[State[\"AFTER_DOCTYPE_NAME\"] = 55] = \"AFTER_DOCTYPE_NAME\";\n  State[State[\"AFTER_DOCTYPE_PUBLIC_KEYWORD\"] = 56] = \"AFTER_DOCTYPE_PUBLIC_KEYWORD\";\n  State[State[\"BEFORE_DOCTYPE_PUBLIC_IDENTIFIER\"] = 57] = \"BEFORE_DOCTYPE_PUBLIC_IDENTIFIER\";\n  State[State[\"DOCTYPE_PUBLIC_IDENTIFIER_DOUBLE_QUOTED\"] = 58] = \"DOCTYPE_PUBLIC_IDENTIFIER_DOUBLE_QUOTED\";\n  State[State[\"DOCTYPE_PUBLIC_IDENTIFIER_SINGLE_QUOTED\"] = 59] = \"DOCTYPE_PUBLIC_IDENTIFIER_SINGLE_QUOTED\";\n  State[State[\"AFTER_DOCTYPE_PUBLIC_IDENTIFIER\"] = 60] = \"AFTER_DOCTYPE_PUBLIC_IDENTIFIER\";\n  State[State[\"BETWEEN_DOCTYPE_PUBLIC_AND_SYSTEM_IDENTIFIERS\"] = 61] = \"BETWEEN_DOCTYPE_PUBLIC_AND_SYSTEM_IDENTIFIERS\";\n  State[State[\"AFTER_DOCTYPE_SYSTEM_KEYWORD\"] = 62] = \"AFTER_DOCTYPE_SYSTEM_KEYWORD\";\n  State[State[\"BEFORE_DOCTYPE_SYSTEM_IDENTIFIER\"] = 63] = \"BEFORE_DOCTYPE_SYSTEM_IDENTIFIER\";\n  State[State[\"DOCTYPE_SYSTEM_IDENTIFIER_DOUBLE_QUOTED\"] = 64] = \"DOCTYPE_SYSTEM_IDENTIFIER_DOUBLE_QUOTED\";\n  State[State[\"DOCTYPE_SYSTEM_IDENTIFIER_SINGLE_QUOTED\"] = 65] = \"DOCTYPE_SYSTEM_IDENTIFIER_SINGLE_QUOTED\";\n  State[State[\"AFTER_DOCTYPE_SYSTEM_IDENTIFIER\"] = 66] = \"AFTER_DOCTYPE_SYSTEM_IDENTIFIER\";\n  State[State[\"BOGUS_DOCTYPE\"] = 67] = \"BOGUS_DOCTYPE\";\n  State[State[\"CDATA_SECTION\"] = 68] = \"CDATA_SECTION\";\n  State[State[\"CDATA_SECTION_BRACKET\"] = 69] = \"CDATA_SECTION_BRACKET\";\n  State[State[\"CDATA_SECTION_END\"] = 70] = \"CDATA_SECTION_END\";\n  State[State[\"CHARACTER_REFERENCE\"] = 71] = \"CHARACTER_REFERENCE\";\n  State[State[\"AMBIGUOUS_AMPERSAND\"] = 72] = \"AMBIGUOUS_AMPERSAND\";\n})(State || (State = {}));\n//Tokenizer initial states for different modes\nexport const TokenizerMode = {\n  DATA: State.DATA,\n  RCDATA: State.RCDATA,\n  RAWTEXT: State.RAWTEXT,\n  SCRIPT_DATA: State.SCRIPT_DATA,\n  PLAINTEXT: State.PLAINTEXT,\n  CDATA_SECTION: State.CDATA_SECTION\n};\n//Utils\n//OPTIMIZATION: these utility functions should not be moved out of this module. V8 Crankshaft will not inline\n//this functions if they will be situated in another module due to context switch.\n//Always perform inlining check before modifying this functions ('node --trace-inlining').\nfunction isAsciiDigit(cp) {\n  return cp >= $.DIGIT_0 && cp <= $.DIGIT_9;\n}\nfunction isAsciiUpper(cp) {\n  return cp >= $.LATIN_CAPITAL_A && cp <= $.LATIN_CAPITAL_Z;\n}\nfunction isAsciiLower(cp) {\n  return cp >= $.LATIN_SMALL_A && cp <= $.LATIN_SMALL_Z;\n}\nfunction isAsciiLetter(cp) {\n  return isAsciiLower(cp) || isAsciiUpper(cp);\n}\nfunction isAsciiAlphaNumeric(cp) {\n  return isAsciiLetter(cp) || isAsciiDigit(cp);\n}\nfunction toAsciiLower(cp) {\n  return cp + 32;\n}\nfunction isWhitespace(cp) {\n  return cp === $.SPACE || cp === $.LINE_FEED || cp === $.TABULATION || cp === $.FORM_FEED;\n}\nfunction isScriptDataDoubleEscapeSequenceEnd(cp) {\n  return isWhitespace(cp) || cp === $.SOLIDUS || cp === $.GREATER_THAN_SIGN;\n}\nfunction getErrorForNumericCharacterReference(code) {\n  if (code === $.NULL) {\n    return ERR.nullCharacterReference;\n  } else if (code > 1114111) {\n    return ERR.characterReferenceOutsideUnicodeRange;\n  } else if (isSurrogate(code)) {\n    return ERR.surrogateCharacterReference;\n  } else if (isUndefinedCodePoint(code)) {\n    return ERR.noncharacterCharacterReference;\n  } else if (isControlCodePoint(code) || code === $.CARRIAGE_RETURN) {\n    return ERR.controlCharacterReference;\n  }\n  return null;\n}\n//Tokenizer\nexport class Tokenizer {\n  constructor(options, handler) {\n    this.options = options;\n    this.handler = handler;\n    this.paused = false;\n    /** Ensures that the parsing loop isn't run multiple times at once. */\n    this.inLoop = false;\n    /**\n     * Indicates that the current adjusted node exists, is not an element in the HTML namespace,\n     * and that it is not an integration point for either MathML or HTML.\n     *\n     * @see {@link https://html.spec.whatwg.org/multipage/parsing.html#tree-construction}\n     */\n    this.inForeignNode = false;\n    this.lastStartTagName = '';\n    this.active = false;\n    this.state = State.DATA;\n    this.returnState = State.DATA;\n    this.entityStartPos = 0;\n    this.consumedAfterSnapshot = -1;\n    this.currentCharacterToken = null;\n    this.currentToken = null;\n    this.currentAttr = {\n      name: '',\n      value: ''\n    };\n    this.preprocessor = new Preprocessor(handler);\n    this.currentLocation = this.getCurrentLocation(-1);\n    this.entityDecoder = new EntityDecoder(htmlDecodeTree, (cp, consumed) => {\n      // Note: Set `pos` _before_ flushing, as flushing might drop\n      // the current chunk and invalidate `entityStartPos`.\n      this.preprocessor.pos = this.entityStartPos + consumed - 1;\n      this._flushCodePointConsumedAsCharacterReference(cp);\n    }, handler.onParseError ? {\n      missingSemicolonAfterCharacterReference: () => {\n        this._err(ERR.missingSemicolonAfterCharacterReference, 1);\n      },\n      absenceOfDigitsInNumericCharacterReference: consumed => {\n        this._err(ERR.absenceOfDigitsInNumericCharacterReference, this.entityStartPos - this.preprocessor.pos + consumed);\n      },\n      validateNumericCharacterReference: code => {\n        const error = getErrorForNumericCharacterReference(code);\n        if (error) this._err(error, 1);\n      }\n    } : undefined);\n  }\n  //Errors\n  _err(code, cpOffset = 0) {\n    var _a, _b;\n    (_b = (_a = this.handler).onParseError) === null || _b === void 0 ? void 0 : _b.call(_a, this.preprocessor.getError(code, cpOffset));\n  }\n  // NOTE: `offset` may never run across line boundaries.\n  getCurrentLocation(offset) {\n    if (!this.options.sourceCodeLocationInfo) {\n      return null;\n    }\n    return {\n      startLine: this.preprocessor.line,\n      startCol: this.preprocessor.col - offset,\n      startOffset: this.preprocessor.offset - offset,\n      endLine: -1,\n      endCol: -1,\n      endOffset: -1\n    };\n  }\n  _runParsingLoop() {\n    if (this.inLoop) return;\n    this.inLoop = true;\n    while (this.active && !this.paused) {\n      this.consumedAfterSnapshot = 0;\n      const cp = this._consume();\n      if (!this._ensureHibernation()) {\n        this._callState(cp);\n      }\n    }\n    this.inLoop = false;\n  }\n  //API\n  pause() {\n    this.paused = true;\n  }\n  resume(writeCallback) {\n    if (!this.paused) {\n      throw new Error('Parser was already resumed');\n    }\n    this.paused = false;\n    // Necessary for synchronous resume.\n    if (this.inLoop) return;\n    this._runParsingLoop();\n    if (!this.paused) {\n      writeCallback === null || writeCallback === void 0 ? void 0 : writeCallback();\n    }\n  }\n  write(chunk, isLastChunk, writeCallback) {\n    this.active = true;\n    this.preprocessor.write(chunk, isLastChunk);\n    this._runParsingLoop();\n    if (!this.paused) {\n      writeCallback === null || writeCallback === void 0 ? void 0 : writeCallback();\n    }\n  }\n  insertHtmlAtCurrentPos(chunk) {\n    this.active = true;\n    this.preprocessor.insertHtmlAtCurrentPos(chunk);\n    this._runParsingLoop();\n  }\n  //Hibernation\n  _ensureHibernation() {\n    if (this.preprocessor.endOfChunkHit) {\n      this.preprocessor.retreat(this.consumedAfterSnapshot);\n      this.consumedAfterSnapshot = 0;\n      this.active = false;\n      return true;\n    }\n    return false;\n  }\n  //Consumption\n  _consume() {\n    this.consumedAfterSnapshot++;\n    return this.preprocessor.advance();\n  }\n  _advanceBy(count) {\n    this.consumedAfterSnapshot += count;\n    for (let i = 0; i < count; i++) {\n      this.preprocessor.advance();\n    }\n  }\n  _consumeSequenceIfMatch(pattern, caseSensitive) {\n    if (this.preprocessor.startsWith(pattern, caseSensitive)) {\n      // We will already have consumed one character before calling this method.\n      this._advanceBy(pattern.length - 1);\n      return true;\n    }\n    return false;\n  }\n  //Token creation\n  _createStartTagToken() {\n    this.currentToken = {\n      type: TokenType.START_TAG,\n      tagName: '',\n      tagID: TAG_ID.UNKNOWN,\n      selfClosing: false,\n      ackSelfClosing: false,\n      attrs: [],\n      location: this.getCurrentLocation(1)\n    };\n  }\n  _createEndTagToken() {\n    this.currentToken = {\n      type: TokenType.END_TAG,\n      tagName: '',\n      tagID: TAG_ID.UNKNOWN,\n      selfClosing: false,\n      ackSelfClosing: false,\n      attrs: [],\n      location: this.getCurrentLocation(2)\n    };\n  }\n  _createCommentToken(offset) {\n    this.currentToken = {\n      type: TokenType.COMMENT,\n      data: '',\n      location: this.getCurrentLocation(offset)\n    };\n  }\n  _createDoctypeToken(initialName) {\n    this.currentToken = {\n      type: TokenType.DOCTYPE,\n      name: initialName,\n      forceQuirks: false,\n      publicId: null,\n      systemId: null,\n      location: this.currentLocation\n    };\n  }\n  _createCharacterToken(type, chars) {\n    this.currentCharacterToken = {\n      type,\n      chars,\n      location: this.currentLocation\n    };\n  }\n  //Tag attributes\n  _createAttr(attrNameFirstCh) {\n    this.currentAttr = {\n      name: attrNameFirstCh,\n      value: ''\n    };\n    this.currentLocation = this.getCurrentLocation(0);\n  }\n  _leaveAttrName() {\n    var _a;\n    var _b;\n    const token = this.currentToken;\n    if (getTokenAttr(token, this.currentAttr.name) === null) {\n      token.attrs.push(this.currentAttr);\n      if (token.location && this.currentLocation) {\n        const attrLocations = (_a = (_b = token.location).attrs) !== null && _a !== void 0 ? _a : _b.attrs = Object.create(null);\n        attrLocations[this.currentAttr.name] = this.currentLocation;\n        // Set end location\n        this._leaveAttrValue();\n      }\n    } else {\n      this._err(ERR.duplicateAttribute);\n    }\n  }\n  _leaveAttrValue() {\n    if (this.currentLocation) {\n      this.currentLocation.endLine = this.preprocessor.line;\n      this.currentLocation.endCol = this.preprocessor.col;\n      this.currentLocation.endOffset = this.preprocessor.offset;\n    }\n  }\n  //Token emission\n  prepareToken(ct) {\n    this._emitCurrentCharacterToken(ct.location);\n    this.currentToken = null;\n    if (ct.location) {\n      ct.location.endLine = this.preprocessor.line;\n      ct.location.endCol = this.preprocessor.col + 1;\n      ct.location.endOffset = this.preprocessor.offset + 1;\n    }\n    this.currentLocation = this.getCurrentLocation(-1);\n  }\n  emitCurrentTagToken() {\n    const ct = this.currentToken;\n    this.prepareToken(ct);\n    ct.tagID = getTagID(ct.tagName);\n    if (ct.type === TokenType.START_TAG) {\n      this.lastStartTagName = ct.tagName;\n      this.handler.onStartTag(ct);\n    } else {\n      if (ct.attrs.length > 0) {\n        this._err(ERR.endTagWithAttributes);\n      }\n      if (ct.selfClosing) {\n        this._err(ERR.endTagWithTrailingSolidus);\n      }\n      this.handler.onEndTag(ct);\n    }\n    this.preprocessor.dropParsedChunk();\n  }\n  emitCurrentComment(ct) {\n    this.prepareToken(ct);\n    this.handler.onComment(ct);\n    this.preprocessor.dropParsedChunk();\n  }\n  emitCurrentDoctype(ct) {\n    this.prepareToken(ct);\n    this.handler.onDoctype(ct);\n    this.preprocessor.dropParsedChunk();\n  }\n  _emitCurrentCharacterToken(nextLocation) {\n    if (this.currentCharacterToken) {\n      //NOTE: if we have a pending character token, make it's end location equal to the\n      //current token's start location.\n      if (nextLocation && this.currentCharacterToken.location) {\n        this.currentCharacterToken.location.endLine = nextLocation.startLine;\n        this.currentCharacterToken.location.endCol = nextLocation.startCol;\n        this.currentCharacterToken.location.endOffset = nextLocation.startOffset;\n      }\n      switch (this.currentCharacterToken.type) {\n        case TokenType.CHARACTER:\n          {\n            this.handler.onCharacter(this.currentCharacterToken);\n            break;\n          }\n        case TokenType.NULL_CHARACTER:\n          {\n            this.handler.onNullCharacter(this.currentCharacterToken);\n            break;\n          }\n        case TokenType.WHITESPACE_CHARACTER:\n          {\n            this.handler.onWhitespaceCharacter(this.currentCharacterToken);\n            break;\n          }\n      }\n      this.currentCharacterToken = null;\n    }\n  }\n  _emitEOFToken() {\n    const location = this.getCurrentLocation(0);\n    if (location) {\n      location.endLine = location.startLine;\n      location.endCol = location.startCol;\n      location.endOffset = location.startOffset;\n    }\n    this._emitCurrentCharacterToken(location);\n    this.handler.onEof({\n      type: TokenType.EOF,\n      location\n    });\n    this.active = false;\n  }\n  //Characters emission\n  //OPTIMIZATION: The specification uses only one type of character token (one token per character).\n  //This causes a huge memory overhead and a lot of unnecessary parser loops. parse5 uses 3 groups of characters.\n  //If we have a sequence of characters that belong to the same group, the parser can process it\n  //as a single solid character token.\n  //So, there are 3 types of character tokens in parse5:\n  //1)TokenType.NULL_CHARACTER - \\u0000-character sequences (e.g. '\\u0000\\u0000\\u0000')\n  //2)TokenType.WHITESPACE_CHARACTER - any whitespace/new-line character sequences (e.g. '\\n  \\r\\t   \\f')\n  //3)TokenType.CHARACTER - any character sequence which don't belong to groups 1 and 2 (e.g. 'abcdef1234@@#$%^')\n  _appendCharToCurrentCharacterToken(type, ch) {\n    if (this.currentCharacterToken) {\n      if (this.currentCharacterToken.type === type) {\n        this.currentCharacterToken.chars += ch;\n        return;\n      } else {\n        this.currentLocation = this.getCurrentLocation(0);\n        this._emitCurrentCharacterToken(this.currentLocation);\n        this.preprocessor.dropParsedChunk();\n      }\n    }\n    this._createCharacterToken(type, ch);\n  }\n  _emitCodePoint(cp) {\n    const type = isWhitespace(cp) ? TokenType.WHITESPACE_CHARACTER : cp === $.NULL ? TokenType.NULL_CHARACTER : TokenType.CHARACTER;\n    this._appendCharToCurrentCharacterToken(type, String.fromCodePoint(cp));\n  }\n  //NOTE: used when we emit characters explicitly.\n  //This is always for non-whitespace and non-null characters, which allows us to avoid additional checks.\n  _emitChars(ch) {\n    this._appendCharToCurrentCharacterToken(TokenType.CHARACTER, ch);\n  }\n  // Character reference helpers\n  _startCharacterReference() {\n    this.returnState = this.state;\n    this.state = State.CHARACTER_REFERENCE;\n    this.entityStartPos = this.preprocessor.pos;\n    this.entityDecoder.startEntity(this._isCharacterReferenceInAttribute() ? DecodingMode.Attribute : DecodingMode.Legacy);\n  }\n  _isCharacterReferenceInAttribute() {\n    return this.returnState === State.ATTRIBUTE_VALUE_DOUBLE_QUOTED || this.returnState === State.ATTRIBUTE_VALUE_SINGLE_QUOTED || this.returnState === State.ATTRIBUTE_VALUE_UNQUOTED;\n  }\n  _flushCodePointConsumedAsCharacterReference(cp) {\n    if (this._isCharacterReferenceInAttribute()) {\n      this.currentAttr.value += String.fromCodePoint(cp);\n    } else {\n      this._emitCodePoint(cp);\n    }\n  }\n  // Calling states this way turns out to be much faster than any other approach.\n  _callState(cp) {\n    switch (this.state) {\n      case State.DATA:\n        {\n          this._stateData(cp);\n          break;\n        }\n      case State.RCDATA:\n        {\n          this._stateRcdata(cp);\n          break;\n        }\n      case State.RAWTEXT:\n        {\n          this._stateRawtext(cp);\n          break;\n        }\n      case State.SCRIPT_DATA:\n        {\n          this._stateScriptData(cp);\n          break;\n        }\n      case State.PLAINTEXT:\n        {\n          this._statePlaintext(cp);\n          break;\n        }\n      case State.TAG_OPEN:\n        {\n          this._stateTagOpen(cp);\n          break;\n        }\n      case State.END_TAG_OPEN:\n        {\n          this._stateEndTagOpen(cp);\n          break;\n        }\n      case State.TAG_NAME:\n        {\n          this._stateTagName(cp);\n          break;\n        }\n      case State.RCDATA_LESS_THAN_SIGN:\n        {\n          this._stateRcdataLessThanSign(cp);\n          break;\n        }\n      case State.RCDATA_END_TAG_OPEN:\n        {\n          this._stateRcdataEndTagOpen(cp);\n          break;\n        }\n      case State.RCDATA_END_TAG_NAME:\n        {\n          this._stateRcdataEndTagName(cp);\n          break;\n        }\n      case State.RAWTEXT_LESS_THAN_SIGN:\n        {\n          this._stateRawtextLessThanSign(cp);\n          break;\n        }\n      case State.RAWTEXT_END_TAG_OPEN:\n        {\n          this._stateRawtextEndTagOpen(cp);\n          break;\n        }\n      case State.RAWTEXT_END_TAG_NAME:\n        {\n          this._stateRawtextEndTagName(cp);\n          break;\n        }\n      case State.SCRIPT_DATA_LESS_THAN_SIGN:\n        {\n          this._stateScriptDataLessThanSign(cp);\n          break;\n        }\n      case State.SCRIPT_DATA_END_TAG_OPEN:\n        {\n          this._stateScriptDataEndTagOpen(cp);\n          break;\n        }\n      case State.SCRIPT_DATA_END_TAG_NAME:\n        {\n          this._stateScriptDataEndTagName(cp);\n          break;\n        }\n      case State.SCRIPT_DATA_ESCAPE_START:\n        {\n          this._stateScriptDataEscapeStart(cp);\n          break;\n        }\n      case State.SCRIPT_DATA_ESCAPE_START_DASH:\n        {\n          this._stateScriptDataEscapeStartDash(cp);\n          break;\n        }\n      case State.SCRIPT_DATA_ESCAPED:\n        {\n          this._stateScriptDataEscaped(cp);\n          break;\n        }\n      case State.SCRIPT_DATA_ESCAPED_DASH:\n        {\n          this._stateScriptDataEscapedDash(cp);\n          break;\n        }\n      case State.SCRIPT_DATA_ESCAPED_DASH_DASH:\n        {\n          this._stateScriptDataEscapedDashDash(cp);\n          break;\n        }\n      case State.SCRIPT_DATA_ESCAPED_LESS_THAN_SIGN:\n        {\n          this._stateScriptDataEscapedLessThanSign(cp);\n          break;\n        }\n      case State.SCRIPT_DATA_ESCAPED_END_TAG_OPEN:\n        {\n          this._stateScriptDataEscapedEndTagOpen(cp);\n          break;\n        }\n      case State.SCRIPT_DATA_ESCAPED_END_TAG_NAME:\n        {\n          this._stateScriptDataEscapedEndTagName(cp);\n          break;\n        }\n      case State.SCRIPT_DATA_DOUBLE_ESCAPE_START:\n        {\n          this._stateScriptDataDoubleEscapeStart(cp);\n          break;\n        }\n      case State.SCRIPT_DATA_DOUBLE_ESCAPED:\n        {\n          this._stateScriptDataDoubleEscaped(cp);\n          break;\n        }\n      case State.SCRIPT_DATA_DOUBLE_ESCAPED_DASH:\n        {\n          this._stateScriptDataDoubleEscapedDash(cp);\n          break;\n        }\n      case State.SCRIPT_DATA_DOUBLE_ESCAPED_DASH_DASH:\n        {\n          this._stateScriptDataDoubleEscapedDashDash(cp);\n          break;\n        }\n      case State.SCRIPT_DATA_DOUBLE_ESCAPED_LESS_THAN_SIGN:\n        {\n          this._stateScriptDataDoubleEscapedLessThanSign(cp);\n          break;\n        }\n      case State.SCRIPT_DATA_DOUBLE_ESCAPE_END:\n        {\n          this._stateScriptDataDoubleEscapeEnd(cp);\n          break;\n        }\n      case State.BEFORE_ATTRIBUTE_NAME:\n        {\n          this._stateBeforeAttributeName(cp);\n          break;\n        }\n      case State.ATTRIBUTE_NAME:\n        {\n          this._stateAttributeName(cp);\n          break;\n        }\n      case State.AFTER_ATTRIBUTE_NAME:\n        {\n          this._stateAfterAttributeName(cp);\n          break;\n        }\n      case State.BEFORE_ATTRIBUTE_VALUE:\n        {\n          this._stateBeforeAttributeValue(cp);\n          break;\n        }\n      case State.ATTRIBUTE_VALUE_DOUBLE_QUOTED:\n        {\n          this._stateAttributeValueDoubleQuoted(cp);\n          break;\n        }\n      case State.ATTRIBUTE_VALUE_SINGLE_QUOTED:\n        {\n          this._stateAttributeValueSingleQuoted(cp);\n          break;\n        }\n      case State.ATTRIBUTE_VALUE_UNQUOTED:\n        {\n          this._stateAttributeValueUnquoted(cp);\n          break;\n        }\n      case State.AFTER_ATTRIBUTE_VALUE_QUOTED:\n        {\n          this._stateAfterAttributeValueQuoted(cp);\n          break;\n        }\n      case State.SELF_CLOSING_START_TAG:\n        {\n          this._stateSelfClosingStartTag(cp);\n          break;\n        }\n      case State.BOGUS_COMMENT:\n        {\n          this._stateBogusComment(cp);\n          break;\n        }\n      case State.MARKUP_DECLARATION_OPEN:\n        {\n          this._stateMarkupDeclarationOpen(cp);\n          break;\n        }\n      case State.COMMENT_START:\n        {\n          this._stateCommentStart(cp);\n          break;\n        }\n      case State.COMMENT_START_DASH:\n        {\n          this._stateCommentStartDash(cp);\n          break;\n        }\n      case State.COMMENT:\n        {\n          this._stateComment(cp);\n          break;\n        }\n      case State.COMMENT_LESS_THAN_SIGN:\n        {\n          this._stateCommentLessThanSign(cp);\n          break;\n        }\n      case State.COMMENT_LESS_THAN_SIGN_BANG:\n        {\n          this._stateCommentLessThanSignBang(cp);\n          break;\n        }\n      case State.COMMENT_LESS_THAN_SIGN_BANG_DASH:\n        {\n          this._stateCommentLessThanSignBangDash(cp);\n          break;\n        }\n      case State.COMMENT_LESS_THAN_SIGN_BANG_DASH_DASH:\n        {\n          this._stateCommentLessThanSignBangDashDash(cp);\n          break;\n        }\n      case State.COMMENT_END_DASH:\n        {\n          this._stateCommentEndDash(cp);\n          break;\n        }\n      case State.COMMENT_END:\n        {\n          this._stateCommentEnd(cp);\n          break;\n        }\n      case State.COMMENT_END_BANG:\n        {\n          this._stateCommentEndBang(cp);\n          break;\n        }\n      case State.DOCTYPE:\n        {\n          this._stateDoctype(cp);\n          break;\n        }\n      case State.BEFORE_DOCTYPE_NAME:\n        {\n          this._stateBeforeDoctypeName(cp);\n          break;\n        }\n      case State.DOCTYPE_NAME:\n        {\n          this._stateDoctypeName(cp);\n          break;\n        }\n      case State.AFTER_DOCTYPE_NAME:\n        {\n          this._stateAfterDoctypeName(cp);\n          break;\n        }\n      case State.AFTER_DOCTYPE_PUBLIC_KEYWORD:\n        {\n          this._stateAfterDoctypePublicKeyword(cp);\n          break;\n        }\n      case State.BEFORE_DOCTYPE_PUBLIC_IDENTIFIER:\n        {\n          this._stateBeforeDoctypePublicIdentifier(cp);\n          break;\n        }\n      case State.DOCTYPE_PUBLIC_IDENTIFIER_DOUBLE_QUOTED:\n        {\n          this._stateDoctypePublicIdentifierDoubleQuoted(cp);\n          break;\n        }\n      case State.DOCTYPE_PUBLIC_IDENTIFIER_SINGLE_QUOTED:\n        {\n          this._stateDoctypePublicIdentifierSingleQuoted(cp);\n          break;\n        }\n      case State.AFTER_DOCTYPE_PUBLIC_IDENTIFIER:\n        {\n          this._stateAfterDoctypePublicIdentifier(cp);\n          break;\n        }\n      case State.BETWEEN_DOCTYPE_PUBLIC_AND_SYSTEM_IDENTIFIERS:\n        {\n          this._stateBetweenDoctypePublicAndSystemIdentifiers(cp);\n          break;\n        }\n      case State.AFTER_DOCTYPE_SYSTEM_KEYWORD:\n        {\n          this._stateAfterDoctypeSystemKeyword(cp);\n          break;\n        }\n      case State.BEFORE_DOCTYPE_SYSTEM_IDENTIFIER:\n        {\n          this._stateBeforeDoctypeSystemIdentifier(cp);\n          break;\n        }\n      case State.DOCTYPE_SYSTEM_IDENTIFIER_DOUBLE_QUOTED:\n        {\n          this._stateDoctypeSystemIdentifierDoubleQuoted(cp);\n          break;\n        }\n      case State.DOCTYPE_SYSTEM_IDENTIFIER_SINGLE_QUOTED:\n        {\n          this._stateDoctypeSystemIdentifierSingleQuoted(cp);\n          break;\n        }\n      case State.AFTER_DOCTYPE_SYSTEM_IDENTIFIER:\n        {\n          this._stateAfterDoctypeSystemIdentifier(cp);\n          break;\n        }\n      case State.BOGUS_DOCTYPE:\n        {\n          this._stateBogusDoctype(cp);\n          break;\n        }\n      case State.CDATA_SECTION:\n        {\n          this._stateCdataSection(cp);\n          break;\n        }\n      case State.CDATA_SECTION_BRACKET:\n        {\n          this._stateCdataSectionBracket(cp);\n          break;\n        }\n      case State.CDATA_SECTION_END:\n        {\n          this._stateCdataSectionEnd(cp);\n          break;\n        }\n      case State.CHARACTER_REFERENCE:\n        {\n          this._stateCharacterReference();\n          break;\n        }\n      case State.AMBIGUOUS_AMPERSAND:\n        {\n          this._stateAmbiguousAmpersand(cp);\n          break;\n        }\n      default:\n        {\n          throw new Error('Unknown state');\n        }\n    }\n  }\n  // State machine\n  // Data state\n  //------------------------------------------------------------------\n  _stateData(cp) {\n    switch (cp) {\n      case $.LESS_THAN_SIGN:\n        {\n          this.state = State.TAG_OPEN;\n          break;\n        }\n      case $.AMPERSAND:\n        {\n          this._startCharacterReference();\n          break;\n        }\n      case $.NULL:\n        {\n          this._err(ERR.unexpectedNullCharacter);\n          this._emitCodePoint(cp);\n          break;\n        }\n      case $.EOF:\n        {\n          this._emitEOFToken();\n          break;\n        }\n      default:\n        {\n          this._emitCodePoint(cp);\n        }\n    }\n  }\n  //  RCDATA state\n  //------------------------------------------------------------------\n  _stateRcdata(cp) {\n    switch (cp) {\n      case $.AMPERSAND:\n        {\n          this._startCharacterReference();\n          break;\n        }\n      case $.LESS_THAN_SIGN:\n        {\n          this.state = State.RCDATA_LESS_THAN_SIGN;\n          break;\n        }\n      case $.NULL:\n        {\n          this._err(ERR.unexpectedNullCharacter);\n          this._emitChars(REPLACEMENT_CHARACTER);\n          break;\n        }\n      case $.EOF:\n        {\n          this._emitEOFToken();\n          break;\n        }\n      default:\n        {\n          this._emitCodePoint(cp);\n        }\n    }\n  }\n  // RAWTEXT state\n  //------------------------------------------------------------------\n  _stateRawtext(cp) {\n    switch (cp) {\n      case $.LESS_THAN_SIGN:\n        {\n          this.state = State.RAWTEXT_LESS_THAN_SIGN;\n          break;\n        }\n      case $.NULL:\n        {\n          this._err(ERR.unexpectedNullCharacter);\n          this._emitChars(REPLACEMENT_CHARACTER);\n          break;\n        }\n      case $.EOF:\n        {\n          this._emitEOFToken();\n          break;\n        }\n      default:\n        {\n          this._emitCodePoint(cp);\n        }\n    }\n  }\n  // Script data state\n  //------------------------------------------------------------------\n  _stateScriptData(cp) {\n    switch (cp) {\n      case $.LESS_THAN_SIGN:\n        {\n          this.state = State.SCRIPT_DATA_LESS_THAN_SIGN;\n          break;\n        }\n      case $.NULL:\n        {\n          this._err(ERR.unexpectedNullCharacter);\n          this._emitChars(REPLACEMENT_CHARACTER);\n          break;\n        }\n      case $.EOF:\n        {\n          this._emitEOFToken();\n          break;\n        }\n      default:\n        {\n          this._emitCodePoint(cp);\n        }\n    }\n  }\n  // PLAINTEXT state\n  //------------------------------------------------------------------\n  _statePlaintext(cp) {\n    switch (cp) {\n      case $.NULL:\n        {\n          this._err(ERR.unexpectedNullCharacter);\n          this._emitChars(REPLACEMENT_CHARACTER);\n          break;\n        }\n      case $.EOF:\n        {\n          this._emitEOFToken();\n          break;\n        }\n      default:\n        {\n          this._emitCodePoint(cp);\n        }\n    }\n  }\n  // Tag open state\n  //------------------------------------------------------------------\n  _stateTagOpen(cp) {\n    if (isAsciiLetter(cp)) {\n      this._createStartTagToken();\n      this.state = State.TAG_NAME;\n      this._stateTagName(cp);\n    } else switch (cp) {\n      case $.EXCLAMATION_MARK:\n        {\n          this.state = State.MARKUP_DECLARATION_OPEN;\n          break;\n        }\n      case $.SOLIDUS:\n        {\n          this.state = State.END_TAG_OPEN;\n          break;\n        }\n      case $.QUESTION_MARK:\n        {\n          this._err(ERR.unexpectedQuestionMarkInsteadOfTagName);\n          this._createCommentToken(1);\n          this.state = State.BOGUS_COMMENT;\n          this._stateBogusComment(cp);\n          break;\n        }\n      case $.EOF:\n        {\n          this._err(ERR.eofBeforeTagName);\n          this._emitChars('<');\n          this._emitEOFToken();\n          break;\n        }\n      default:\n        {\n          this._err(ERR.invalidFirstCharacterOfTagName);\n          this._emitChars('<');\n          this.state = State.DATA;\n          this._stateData(cp);\n        }\n    }\n  }\n  // End tag open state\n  //------------------------------------------------------------------\n  _stateEndTagOpen(cp) {\n    if (isAsciiLetter(cp)) {\n      this._createEndTagToken();\n      this.state = State.TAG_NAME;\n      this._stateTagName(cp);\n    } else switch (cp) {\n      case $.GREATER_THAN_SIGN:\n        {\n          this._err(ERR.missingEndTagName);\n          this.state = State.DATA;\n          break;\n        }\n      case $.EOF:\n        {\n          this._err(ERR.eofBeforeTagName);\n          this._emitChars('</');\n          this._emitEOFToken();\n          break;\n        }\n      default:\n        {\n          this._err(ERR.invalidFirstCharacterOfTagName);\n          this._createCommentToken(2);\n          this.state = State.BOGUS_COMMENT;\n          this._stateBogusComment(cp);\n        }\n    }\n  }\n  // Tag name state\n  //------------------------------------------------------------------\n  _stateTagName(cp) {\n    const token = this.currentToken;\n    switch (cp) {\n      case $.SPACE:\n      case $.LINE_FEED:\n      case $.TABULATION:\n      case $.FORM_FEED:\n        {\n          this.state = State.BEFORE_ATTRIBUTE_NAME;\n          break;\n        }\n      case $.SOLIDUS:\n        {\n          this.state = State.SELF_CLOSING_START_TAG;\n          break;\n        }\n      case $.GREATER_THAN_SIGN:\n        {\n          this.state = State.DATA;\n          this.emitCurrentTagToken();\n          break;\n        }\n      case $.NULL:\n        {\n          this._err(ERR.unexpectedNullCharacter);\n          token.tagName += REPLACEMENT_CHARACTER;\n          break;\n        }\n      case $.EOF:\n        {\n          this._err(ERR.eofInTag);\n          this._emitEOFToken();\n          break;\n        }\n      default:\n        {\n          token.tagName += String.fromCodePoint(isAsciiUpper(cp) ? toAsciiLower(cp) : cp);\n        }\n    }\n  }\n  // RCDATA less-than sign state\n  //------------------------------------------------------------------\n  _stateRcdataLessThanSign(cp) {\n    if (cp === $.SOLIDUS) {\n      this.state = State.RCDATA_END_TAG_OPEN;\n    } else {\n      this._emitChars('<');\n      this.state = State.RCDATA;\n      this._stateRcdata(cp);\n    }\n  }\n  // RCDATA end tag open state\n  //------------------------------------------------------------------\n  _stateRcdataEndTagOpen(cp) {\n    if (isAsciiLetter(cp)) {\n      this.state = State.RCDATA_END_TAG_NAME;\n      this._stateRcdataEndTagName(cp);\n    } else {\n      this._emitChars('</');\n      this.state = State.RCDATA;\n      this._stateRcdata(cp);\n    }\n  }\n  handleSpecialEndTag(_cp) {\n    if (!this.preprocessor.startsWith(this.lastStartTagName, false)) {\n      return !this._ensureHibernation();\n    }\n    this._createEndTagToken();\n    const token = this.currentToken;\n    token.tagName = this.lastStartTagName;\n    const cp = this.preprocessor.peek(this.lastStartTagName.length);\n    switch (cp) {\n      case $.SPACE:\n      case $.LINE_FEED:\n      case $.TABULATION:\n      case $.FORM_FEED:\n        {\n          this._advanceBy(this.lastStartTagName.length);\n          this.state = State.BEFORE_ATTRIBUTE_NAME;\n          return false;\n        }\n      case $.SOLIDUS:\n        {\n          this._advanceBy(this.lastStartTagName.length);\n          this.state = State.SELF_CLOSING_START_TAG;\n          return false;\n        }\n      case $.GREATER_THAN_SIGN:\n        {\n          this._advanceBy(this.lastStartTagName.length);\n          this.emitCurrentTagToken();\n          this.state = State.DATA;\n          return false;\n        }\n      default:\n        {\n          return !this._ensureHibernation();\n        }\n    }\n  }\n  // RCDATA end tag name state\n  //------------------------------------------------------------------\n  _stateRcdataEndTagName(cp) {\n    if (this.handleSpecialEndTag(cp)) {\n      this._emitChars('</');\n      this.state = State.RCDATA;\n      this._stateRcdata(cp);\n    }\n  }\n  // RAWTEXT less-than sign state\n  //------------------------------------------------------------------\n  _stateRawtextLessThanSign(cp) {\n    if (cp === $.SOLIDUS) {\n      this.state = State.RAWTEXT_END_TAG_OPEN;\n    } else {\n      this._emitChars('<');\n      this.state = State.RAWTEXT;\n      this._stateRawtext(cp);\n    }\n  }\n  // RAWTEXT end tag open state\n  //------------------------------------------------------------------\n  _stateRawtextEndTagOpen(cp) {\n    if (isAsciiLetter(cp)) {\n      this.state = State.RAWTEXT_END_TAG_NAME;\n      this._stateRawtextEndTagName(cp);\n    } else {\n      this._emitChars('</');\n      this.state = State.RAWTEXT;\n      this._stateRawtext(cp);\n    }\n  }\n  // RAWTEXT end tag name state\n  //------------------------------------------------------------------\n  _stateRawtextEndTagName(cp) {\n    if (this.handleSpecialEndTag(cp)) {\n      this._emitChars('</');\n      this.state = State.RAWTEXT;\n      this._stateRawtext(cp);\n    }\n  }\n  // Script data less-than sign state\n  //------------------------------------------------------------------\n  _stateScriptDataLessThanSign(cp) {\n    switch (cp) {\n      case $.SOLIDUS:\n        {\n          this.state = State.SCRIPT_DATA_END_TAG_OPEN;\n          break;\n        }\n      case $.EXCLAMATION_MARK:\n        {\n          this.state = State.SCRIPT_DATA_ESCAPE_START;\n          this._emitChars('<!');\n          break;\n        }\n      default:\n        {\n          this._emitChars('<');\n          this.state = State.SCRIPT_DATA;\n          this._stateScriptData(cp);\n        }\n    }\n  }\n  // Script data end tag open state\n  //------------------------------------------------------------------\n  _stateScriptDataEndTagOpen(cp) {\n    if (isAsciiLetter(cp)) {\n      this.state = State.SCRIPT_DATA_END_TAG_NAME;\n      this._stateScriptDataEndTagName(cp);\n    } else {\n      this._emitChars('</');\n      this.state = State.SCRIPT_DATA;\n      this._stateScriptData(cp);\n    }\n  }\n  // Script data end tag name state\n  //------------------------------------------------------------------\n  _stateScriptDataEndTagName(cp) {\n    if (this.handleSpecialEndTag(cp)) {\n      this._emitChars('</');\n      this.state = State.SCRIPT_DATA;\n      this._stateScriptData(cp);\n    }\n  }\n  // Script data escape start state\n  //------------------------------------------------------------------\n  _stateScriptDataEscapeStart(cp) {\n    if (cp === $.HYPHEN_MINUS) {\n      this.state = State.SCRIPT_DATA_ESCAPE_START_DASH;\n      this._emitChars('-');\n    } else {\n      this.state = State.SCRIPT_DATA;\n      this._stateScriptData(cp);\n    }\n  }\n  // Script data escape start dash state\n  //------------------------------------------------------------------\n  _stateScriptDataEscapeStartDash(cp) {\n    if (cp === $.HYPHEN_MINUS) {\n      this.state = State.SCRIPT_DATA_ESCAPED_DASH_DASH;\n      this._emitChars('-');\n    } else {\n      this.state = State.SCRIPT_DATA;\n      this._stateScriptData(cp);\n    }\n  }\n  // Script data escaped state\n  //------------------------------------------------------------------\n  _stateScriptDataEscaped(cp) {\n    switch (cp) {\n      case $.HYPHEN_MINUS:\n        {\n          this.state = State.SCRIPT_DATA_ESCAPED_DASH;\n          this._emitChars('-');\n          break;\n        }\n      case $.LESS_THAN_SIGN:\n        {\n          this.state = State.SCRIPT_DATA_ESCAPED_LESS_THAN_SIGN;\n          break;\n        }\n      case $.NULL:\n        {\n          this._err(ERR.unexpectedNullCharacter);\n          this._emitChars(REPLACEMENT_CHARACTER);\n          break;\n        }\n      case $.EOF:\n        {\n          this._err(ERR.eofInScriptHtmlCommentLikeText);\n          this._emitEOFToken();\n          break;\n        }\n      default:\n        {\n          this._emitCodePoint(cp);\n        }\n    }\n  }\n  // Script data escaped dash state\n  //------------------------------------------------------------------\n  _stateScriptDataEscapedDash(cp) {\n    switch (cp) {\n      case $.HYPHEN_MINUS:\n        {\n          this.state = State.SCRIPT_DATA_ESCAPED_DASH_DASH;\n          this._emitChars('-');\n          break;\n        }\n      case $.LESS_THAN_SIGN:\n        {\n          this.state = State.SCRIPT_DATA_ESCAPED_LESS_THAN_SIGN;\n          break;\n        }\n      case $.NULL:\n        {\n          this._err(ERR.unexpectedNullCharacter);\n          this.state = State.SCRIPT_DATA_ESCAPED;\n          this._emitChars(REPLACEMENT_CHARACTER);\n          break;\n        }\n      case $.EOF:\n        {\n          this._err(ERR.eofInScriptHtmlCommentLikeText);\n          this._emitEOFToken();\n          break;\n        }\n      default:\n        {\n          this.state = State.SCRIPT_DATA_ESCAPED;\n          this._emitCodePoint(cp);\n        }\n    }\n  }\n  // Script data escaped dash dash state\n  //------------------------------------------------------------------\n  _stateScriptDataEscapedDashDash(cp) {\n    switch (cp) {\n      case $.HYPHEN_MINUS:\n        {\n          this._emitChars('-');\n          break;\n        }\n      case $.LESS_THAN_SIGN:\n        {\n          this.state = State.SCRIPT_DATA_ESCAPED_LESS_THAN_SIGN;\n          break;\n        }\n      case $.GREATER_THAN_SIGN:\n        {\n          this.state = State.SCRIPT_DATA;\n          this._emitChars('>');\n          break;\n        }\n      case $.NULL:\n        {\n          this._err(ERR.unexpectedNullCharacter);\n          this.state = State.SCRIPT_DATA_ESCAPED;\n          this._emitChars(REPLACEMENT_CHARACTER);\n          break;\n        }\n      case $.EOF:\n        {\n          this._err(ERR.eofInScriptHtmlCommentLikeText);\n          this._emitEOFToken();\n          break;\n        }\n      default:\n        {\n          this.state = State.SCRIPT_DATA_ESCAPED;\n          this._emitCodePoint(cp);\n        }\n    }\n  }\n  // Script data escaped less-than sign state\n  //------------------------------------------------------------------\n  _stateScriptDataEscapedLessThanSign(cp) {\n    if (cp === $.SOLIDUS) {\n      this.state = State.SCRIPT_DATA_ESCAPED_END_TAG_OPEN;\n    } else if (isAsciiLetter(cp)) {\n      this._emitChars('<');\n      this.state = State.SCRIPT_DATA_DOUBLE_ESCAPE_START;\n      this._stateScriptDataDoubleEscapeStart(cp);\n    } else {\n      this._emitChars('<');\n      this.state = State.SCRIPT_DATA_ESCAPED;\n      this._stateScriptDataEscaped(cp);\n    }\n  }\n  // Script data escaped end tag open state\n  //------------------------------------------------------------------\n  _stateScriptDataEscapedEndTagOpen(cp) {\n    if (isAsciiLetter(cp)) {\n      this.state = State.SCRIPT_DATA_ESCAPED_END_TAG_NAME;\n      this._stateScriptDataEscapedEndTagName(cp);\n    } else {\n      this._emitChars('</');\n      this.state = State.SCRIPT_DATA_ESCAPED;\n      this._stateScriptDataEscaped(cp);\n    }\n  }\n  // Script data escaped end tag name state\n  //------------------------------------------------------------------\n  _stateScriptDataEscapedEndTagName(cp) {\n    if (this.handleSpecialEndTag(cp)) {\n      this._emitChars('</');\n      this.state = State.SCRIPT_DATA_ESCAPED;\n      this._stateScriptDataEscaped(cp);\n    }\n  }\n  // Script data double escape start state\n  //------------------------------------------------------------------\n  _stateScriptDataDoubleEscapeStart(cp) {\n    if (this.preprocessor.startsWith($$.SCRIPT, false) && isScriptDataDoubleEscapeSequenceEnd(this.preprocessor.peek($$.SCRIPT.length))) {\n      this._emitCodePoint(cp);\n      for (let i = 0; i < $$.SCRIPT.length; i++) {\n        this._emitCodePoint(this._consume());\n      }\n      this.state = State.SCRIPT_DATA_DOUBLE_ESCAPED;\n    } else if (!this._ensureHibernation()) {\n      this.state = State.SCRIPT_DATA_ESCAPED;\n      this._stateScriptDataEscaped(cp);\n    }\n  }\n  // Script data double escaped state\n  //------------------------------------------------------------------\n  _stateScriptDataDoubleEscaped(cp) {\n    switch (cp) {\n      case $.HYPHEN_MINUS:\n        {\n          this.state = State.SCRIPT_DATA_DOUBLE_ESCAPED_DASH;\n          this._emitChars('-');\n          break;\n        }\n      case $.LESS_THAN_SIGN:\n        {\n          this.state = State.SCRIPT_DATA_DOUBLE_ESCAPED_LESS_THAN_SIGN;\n          this._emitChars('<');\n          break;\n        }\n      case $.NULL:\n        {\n          this._err(ERR.unexpectedNullCharacter);\n          this._emitChars(REPLACEMENT_CHARACTER);\n          break;\n        }\n      case $.EOF:\n        {\n          this._err(ERR.eofInScriptHtmlCommentLikeText);\n          this._emitEOFToken();\n          break;\n        }\n      default:\n        {\n          this._emitCodePoint(cp);\n        }\n    }\n  }\n  // Script data double escaped dash state\n  //------------------------------------------------------------------\n  _stateScriptDataDoubleEscapedDash(cp) {\n    switch (cp) {\n      case $.HYPHEN_MINUS:\n        {\n          this.state = State.SCRIPT_DATA_DOUBLE_ESCAPED_DASH_DASH;\n          this._emitChars('-');\n          break;\n        }\n      case $.LESS_THAN_SIGN:\n        {\n          this.state = State.SCRIPT_DATA_DOUBLE_ESCAPED_LESS_THAN_SIGN;\n          this._emitChars('<');\n          break;\n        }\n      case $.NULL:\n        {\n          this._err(ERR.unexpectedNullCharacter);\n          this.state = State.SCRIPT_DATA_DOUBLE_ESCAPED;\n          this._emitChars(REPLACEMENT_CHARACTER);\n          break;\n        }\n      case $.EOF:\n        {\n          this._err(ERR.eofInScriptHtmlCommentLikeText);\n          this._emitEOFToken();\n          break;\n        }\n      default:\n        {\n          this.state = State.SCRIPT_DATA_DOUBLE_ESCAPED;\n          this._emitCodePoint(cp);\n        }\n    }\n  }\n  // Script data double escaped dash dash state\n  //------------------------------------------------------------------\n  _stateScriptDataDoubleEscapedDashDash(cp) {\n    switch (cp) {\n      case $.HYPHEN_MINUS:\n        {\n          this._emitChars('-');\n          break;\n        }\n      case $.LESS_THAN_SIGN:\n        {\n          this.state = State.SCRIPT_DATA_DOUBLE_ESCAPED_LESS_THAN_SIGN;\n          this._emitChars('<');\n          break;\n        }\n      case $.GREATER_THAN_SIGN:\n        {\n          this.state = State.SCRIPT_DATA;\n          this._emitChars('>');\n          break;\n        }\n      case $.NULL:\n        {\n          this._err(ERR.unexpectedNullCharacter);\n          this.state = State.SCRIPT_DATA_DOUBLE_ESCAPED;\n          this._emitChars(REPLACEMENT_CHARACTER);\n          break;\n        }\n      case $.EOF:\n        {\n          this._err(ERR.eofInScriptHtmlCommentLikeText);\n          this._emitEOFToken();\n          break;\n        }\n      default:\n        {\n          this.state = State.SCRIPT_DATA_DOUBLE_ESCAPED;\n          this._emitCodePoint(cp);\n        }\n    }\n  }\n  // Script data double escaped less-than sign state\n  //------------------------------------------------------------------\n  _stateScriptDataDoubleEscapedLessThanSign(cp) {\n    if (cp === $.SOLIDUS) {\n      this.state = State.SCRIPT_DATA_DOUBLE_ESCAPE_END;\n      this._emitChars('/');\n    } else {\n      this.state = State.SCRIPT_DATA_DOUBLE_ESCAPED;\n      this._stateScriptDataDoubleEscaped(cp);\n    }\n  }\n  // Script data double escape end state\n  //------------------------------------------------------------------\n  _stateScriptDataDoubleEscapeEnd(cp) {\n    if (this.preprocessor.startsWith($$.SCRIPT, false) && isScriptDataDoubleEscapeSequenceEnd(this.preprocessor.peek($$.SCRIPT.length))) {\n      this._emitCodePoint(cp);\n      for (let i = 0; i < $$.SCRIPT.length; i++) {\n        this._emitCodePoint(this._consume());\n      }\n      this.state = State.SCRIPT_DATA_ESCAPED;\n    } else if (!this._ensureHibernation()) {\n      this.state = State.SCRIPT_DATA_DOUBLE_ESCAPED;\n      this._stateScriptDataDoubleEscaped(cp);\n    }\n  }\n  // Before attribute name state\n  //------------------------------------------------------------------\n  _stateBeforeAttributeName(cp) {\n    switch (cp) {\n      case $.SPACE:\n      case $.LINE_FEED:\n      case $.TABULATION:\n      case $.FORM_FEED:\n        {\n          // Ignore whitespace\n          break;\n        }\n      case $.SOLIDUS:\n      case $.GREATER_THAN_SIGN:\n      case $.EOF:\n        {\n          this.state = State.AFTER_ATTRIBUTE_NAME;\n          this._stateAfterAttributeName(cp);\n          break;\n        }\n      case $.EQUALS_SIGN:\n        {\n          this._err(ERR.unexpectedEqualsSignBeforeAttributeName);\n          this._createAttr('=');\n          this.state = State.ATTRIBUTE_NAME;\n          break;\n        }\n      default:\n        {\n          this._createAttr('');\n          this.state = State.ATTRIBUTE_NAME;\n          this._stateAttributeName(cp);\n        }\n    }\n  }\n  // Attribute name state\n  //------------------------------------------------------------------\n  _stateAttributeName(cp) {\n    switch (cp) {\n      case $.SPACE:\n      case $.LINE_FEED:\n      case $.TABULATION:\n      case $.FORM_FEED:\n      case $.SOLIDUS:\n      case $.GREATER_THAN_SIGN:\n      case $.EOF:\n        {\n          this._leaveAttrName();\n          this.state = State.AFTER_ATTRIBUTE_NAME;\n          this._stateAfterAttributeName(cp);\n          break;\n        }\n      case $.EQUALS_SIGN:\n        {\n          this._leaveAttrName();\n          this.state = State.BEFORE_ATTRIBUTE_VALUE;\n          break;\n        }\n      case $.QUOTATION_MARK:\n      case $.APOSTROPHE:\n      case $.LESS_THAN_SIGN:\n        {\n          this._err(ERR.unexpectedCharacterInAttributeName);\n          this.currentAttr.name += String.fromCodePoint(cp);\n          break;\n        }\n      case $.NULL:\n        {\n          this._err(ERR.unexpectedNullCharacter);\n          this.currentAttr.name += REPLACEMENT_CHARACTER;\n          break;\n        }\n      default:\n        {\n          this.currentAttr.name += String.fromCodePoint(isAsciiUpper(cp) ? toAsciiLower(cp) : cp);\n        }\n    }\n  }\n  // After attribute name state\n  //------------------------------------------------------------------\n  _stateAfterAttributeName(cp) {\n    switch (cp) {\n      case $.SPACE:\n      case $.LINE_FEED:\n      case $.TABULATION:\n      case $.FORM_FEED:\n        {\n          // Ignore whitespace\n          break;\n        }\n      case $.SOLIDUS:\n        {\n          this.state = State.SELF_CLOSING_START_TAG;\n          break;\n        }\n      case $.EQUALS_SIGN:\n        {\n          this.state = State.BEFORE_ATTRIBUTE_VALUE;\n          break;\n        }\n      case $.GREATER_THAN_SIGN:\n        {\n          this.state = State.DATA;\n          this.emitCurrentTagToken();\n          break;\n        }\n      case $.EOF:\n        {\n          this._err(ERR.eofInTag);\n          this._emitEOFToken();\n          break;\n        }\n      default:\n        {\n          this._createAttr('');\n          this.state = State.ATTRIBUTE_NAME;\n          this._stateAttributeName(cp);\n        }\n    }\n  }\n  // Before attribute value state\n  //------------------------------------------------------------------\n  _stateBeforeAttributeValue(cp) {\n    switch (cp) {\n      case $.SPACE:\n      case $.LINE_FEED:\n      case $.TABULATION:\n      case $.FORM_FEED:\n        {\n          // Ignore whitespace\n          break;\n        }\n      case $.QUOTATION_MARK:\n        {\n          this.state = State.ATTRIBUTE_VALUE_DOUBLE_QUOTED;\n          break;\n        }\n      case $.APOSTROPHE:\n        {\n          this.state = State.ATTRIBUTE_VALUE_SINGLE_QUOTED;\n          break;\n        }\n      case $.GREATER_THAN_SIGN:\n        {\n          this._err(ERR.missingAttributeValue);\n          this.state = State.DATA;\n          this.emitCurrentTagToken();\n          break;\n        }\n      default:\n        {\n          this.state = State.ATTRIBUTE_VALUE_UNQUOTED;\n          this._stateAttributeValueUnquoted(cp);\n        }\n    }\n  }\n  // Attribute value (double-quoted) state\n  //------------------------------------------------------------------\n  _stateAttributeValueDoubleQuoted(cp) {\n    switch (cp) {\n      case $.QUOTATION_MARK:\n        {\n          this.state = State.AFTER_ATTRIBUTE_VALUE_QUOTED;\n          break;\n        }\n      case $.AMPERSAND:\n        {\n          this._startCharacterReference();\n          break;\n        }\n      case $.NULL:\n        {\n          this._err(ERR.unexpectedNullCharacter);\n          this.currentAttr.value += REPLACEMENT_CHARACTER;\n          break;\n        }\n      case $.EOF:\n        {\n          this._err(ERR.eofInTag);\n          this._emitEOFToken();\n          break;\n        }\n      default:\n        {\n          this.currentAttr.value += String.fromCodePoint(cp);\n        }\n    }\n  }\n  // Attribute value (single-quoted) state\n  //------------------------------------------------------------------\n  _stateAttributeValueSingleQuoted(cp) {\n    switch (cp) {\n      case $.APOSTROPHE:\n        {\n          this.state = State.AFTER_ATTRIBUTE_VALUE_QUOTED;\n          break;\n        }\n      case $.AMPERSAND:\n        {\n          this._startCharacterReference();\n          break;\n        }\n      case $.NULL:\n        {\n          this._err(ERR.unexpectedNullCharacter);\n          this.currentAttr.value += REPLACEMENT_CHARACTER;\n          break;\n        }\n      case $.EOF:\n        {\n          this._err(ERR.eofInTag);\n          this._emitEOFToken();\n          break;\n        }\n      default:\n        {\n          this.currentAttr.value += String.fromCodePoint(cp);\n        }\n    }\n  }\n  // Attribute value (unquoted) state\n  //------------------------------------------------------------------\n  _stateAttributeValueUnquoted(cp) {\n    switch (cp) {\n      case $.SPACE:\n      case $.LINE_FEED:\n      case $.TABULATION:\n      case $.FORM_FEED:\n        {\n          this._leaveAttrValue();\n          this.state = State.BEFORE_ATTRIBUTE_NAME;\n          break;\n        }\n      case $.AMPERSAND:\n        {\n          this._startCharacterReference();\n          break;\n        }\n      case $.GREATER_THAN_SIGN:\n        {\n          this._leaveAttrValue();\n          this.state = State.DATA;\n          this.emitCurrentTagToken();\n          break;\n        }\n      case $.NULL:\n        {\n          this._err(ERR.unexpectedNullCharacter);\n          this.currentAttr.value += REPLACEMENT_CHARACTER;\n          break;\n        }\n      case $.QUOTATION_MARK:\n      case $.APOSTROPHE:\n      case $.LESS_THAN_SIGN:\n      case $.EQUALS_SIGN:\n      case $.GRAVE_ACCENT:\n        {\n          this._err(ERR.unexpectedCharacterInUnquotedAttributeValue);\n          this.currentAttr.value += String.fromCodePoint(cp);\n          break;\n        }\n      case $.EOF:\n        {\n          this._err(ERR.eofInTag);\n          this._emitEOFToken();\n          break;\n        }\n      default:\n        {\n          this.currentAttr.value += String.fromCodePoint(cp);\n        }\n    }\n  }\n  // After attribute value (quoted) state\n  //------------------------------------------------------------------\n  _stateAfterAttributeValueQuoted(cp) {\n    switch (cp) {\n      case $.SPACE:\n      case $.LINE_FEED:\n      case $.TABULATION:\n      case $.FORM_FEED:\n        {\n          this._leaveAttrValue();\n          this.state = State.BEFORE_ATTRIBUTE_NAME;\n          break;\n        }\n      case $.SOLIDUS:\n        {\n          this._leaveAttrValue();\n          this.state = State.SELF_CLOSING_START_TAG;\n          break;\n        }\n      case $.GREATER_THAN_SIGN:\n        {\n          this._leaveAttrValue();\n          this.state = State.DATA;\n          this.emitCurrentTagToken();\n          break;\n        }\n      case $.EOF:\n        {\n          this._err(ERR.eofInTag);\n          this._emitEOFToken();\n          break;\n        }\n      default:\n        {\n          this._err(ERR.missingWhitespaceBetweenAttributes);\n          this.state = State.BEFORE_ATTRIBUTE_NAME;\n          this._stateBeforeAttributeName(cp);\n        }\n    }\n  }\n  // Self-closing start tag state\n  //------------------------------------------------------------------\n  _stateSelfClosingStartTag(cp) {\n    switch (cp) {\n      case $.GREATER_THAN_SIGN:\n        {\n          const token = this.currentToken;\n          token.selfClosing = true;\n          this.state = State.DATA;\n          this.emitCurrentTagToken();\n          break;\n        }\n      case $.EOF:\n        {\n          this._err(ERR.eofInTag);\n          this._emitEOFToken();\n          break;\n        }\n      default:\n        {\n          this._err(ERR.unexpectedSolidusInTag);\n          this.state = State.BEFORE_ATTRIBUTE_NAME;\n          this._stateBeforeAttributeName(cp);\n        }\n    }\n  }\n  // Bogus comment state\n  //------------------------------------------------------------------\n  _stateBogusComment(cp) {\n    const token = this.currentToken;\n    switch (cp) {\n      case $.GREATER_THAN_SIGN:\n        {\n          this.state = State.DATA;\n          this.emitCurrentComment(token);\n          break;\n        }\n      case $.EOF:\n        {\n          this.emitCurrentComment(token);\n          this._emitEOFToken();\n          break;\n        }\n      case $.NULL:\n        {\n          this._err(ERR.unexpectedNullCharacter);\n          token.data += REPLACEMENT_CHARACTER;\n          break;\n        }\n      default:\n        {\n          token.data += String.fromCodePoint(cp);\n        }\n    }\n  }\n  // Markup declaration open state\n  //------------------------------------------------------------------\n  _stateMarkupDeclarationOpen(cp) {\n    if (this._consumeSequenceIfMatch($$.DASH_DASH, true)) {\n      this._createCommentToken($$.DASH_DASH.length + 1);\n      this.state = State.COMMENT_START;\n    } else if (this._consumeSequenceIfMatch($$.DOCTYPE, false)) {\n      // NOTE: Doctypes tokens are created without fixed offsets. We keep track of the moment a doctype *might* start here.\n      this.currentLocation = this.getCurrentLocation($$.DOCTYPE.length + 1);\n      this.state = State.DOCTYPE;\n    } else if (this._consumeSequenceIfMatch($$.CDATA_START, true)) {\n      if (this.inForeignNode) {\n        this.state = State.CDATA_SECTION;\n      } else {\n        this._err(ERR.cdataInHtmlContent);\n        this._createCommentToken($$.CDATA_START.length + 1);\n        this.currentToken.data = '[CDATA[';\n        this.state = State.BOGUS_COMMENT;\n      }\n    }\n    //NOTE: Sequence lookups can be abrupted by hibernation. In that case, lookup\n    //results are no longer valid and we will need to start over.\n    else if (!this._ensureHibernation()) {\n      this._err(ERR.incorrectlyOpenedComment);\n      this._createCommentToken(2);\n      this.state = State.BOGUS_COMMENT;\n      this._stateBogusComment(cp);\n    }\n  }\n  // Comment start state\n  //------------------------------------------------------------------\n  _stateCommentStart(cp) {\n    switch (cp) {\n      case $.HYPHEN_MINUS:\n        {\n          this.state = State.COMMENT_START_DASH;\n          break;\n        }\n      case $.GREATER_THAN_SIGN:\n        {\n          this._err(ERR.abruptClosingOfEmptyComment);\n          this.state = State.DATA;\n          const token = this.currentToken;\n          this.emitCurrentComment(token);\n          break;\n        }\n      default:\n        {\n          this.state = State.COMMENT;\n          this._stateComment(cp);\n        }\n    }\n  }\n  // Comment start dash state\n  //------------------------------------------------------------------\n  _stateCommentStartDash(cp) {\n    const token = this.currentToken;\n    switch (cp) {\n      case $.HYPHEN_MINUS:\n        {\n          this.state = State.COMMENT_END;\n          break;\n        }\n      case $.GREATER_THAN_SIGN:\n        {\n          this._err(ERR.abruptClosingOfEmptyComment);\n          this.state = State.DATA;\n          this.emitCurrentComment(token);\n          break;\n        }\n      case $.EOF:\n        {\n          this._err(ERR.eofInComment);\n          this.emitCurrentComment(token);\n          this._emitEOFToken();\n          break;\n        }\n      default:\n        {\n          token.data += '-';\n          this.state = State.COMMENT;\n          this._stateComment(cp);\n        }\n    }\n  }\n  // Comment state\n  //------------------------------------------------------------------\n  _stateComment(cp) {\n    const token = this.currentToken;\n    switch (cp) {\n      case $.HYPHEN_MINUS:\n        {\n          this.state = State.COMMENT_END_DASH;\n          break;\n        }\n      case $.LESS_THAN_SIGN:\n        {\n          token.data += '<';\n          this.state = State.COMMENT_LESS_THAN_SIGN;\n          break;\n        }\n      case $.NULL:\n        {\n          this._err(ERR.unexpectedNullCharacter);\n          token.data += REPLACEMENT_CHARACTER;\n          break;\n        }\n      case $.EOF:\n        {\n          this._err(ERR.eofInComment);\n          this.emitCurrentComment(token);\n          this._emitEOFToken();\n          break;\n        }\n      default:\n        {\n          token.data += String.fromCodePoint(cp);\n        }\n    }\n  }\n  // Comment less-than sign state\n  //------------------------------------------------------------------\n  _stateCommentLessThanSign(cp) {\n    const token = this.currentToken;\n    switch (cp) {\n      case $.EXCLAMATION_MARK:\n        {\n          token.data += '!';\n          this.state = State.COMMENT_LESS_THAN_SIGN_BANG;\n          break;\n        }\n      case $.LESS_THAN_SIGN:\n        {\n          token.data += '<';\n          break;\n        }\n      default:\n        {\n          this.state = State.COMMENT;\n          this._stateComment(cp);\n        }\n    }\n  }\n  // Comment less-than sign bang state\n  //------------------------------------------------------------------\n  _stateCommentLessThanSignBang(cp) {\n    if (cp === $.HYPHEN_MINUS) {\n      this.state = State.COMMENT_LESS_THAN_SIGN_BANG_DASH;\n    } else {\n      this.state = State.COMMENT;\n      this._stateComment(cp);\n    }\n  }\n  // Comment less-than sign bang dash state\n  //------------------------------------------------------------------\n  _stateCommentLessThanSignBangDash(cp) {\n    if (cp === $.HYPHEN_MINUS) {\n      this.state = State.COMMENT_LESS_THAN_SIGN_BANG_DASH_DASH;\n    } else {\n      this.state = State.COMMENT_END_DASH;\n      this._stateCommentEndDash(cp);\n    }\n  }\n  // Comment less-than sign bang dash dash state\n  //------------------------------------------------------------------\n  _stateCommentLessThanSignBangDashDash(cp) {\n    if (cp !== $.GREATER_THAN_SIGN && cp !== $.EOF) {\n      this._err(ERR.nestedComment);\n    }\n    this.state = State.COMMENT_END;\n    this._stateCommentEnd(cp);\n  }\n  // Comment end dash state\n  //------------------------------------------------------------------\n  _stateCommentEndDash(cp) {\n    const token = this.currentToken;\n    switch (cp) {\n      case $.HYPHEN_MINUS:\n        {\n          this.state = State.COMMENT_END;\n          break;\n        }\n      case $.EOF:\n        {\n          this._err(ERR.eofInComment);\n          this.emitCurrentComment(token);\n          this._emitEOFToken();\n          break;\n        }\n      default:\n        {\n          token.data += '-';\n          this.state = State.COMMENT;\n          this._stateComment(cp);\n        }\n    }\n  }\n  // Comment end state\n  //------------------------------------------------------------------\n  _stateCommentEnd(cp) {\n    const token = this.currentToken;\n    switch (cp) {\n      case $.GREATER_THAN_SIGN:\n        {\n          this.state = State.DATA;\n          this.emitCurrentComment(token);\n          break;\n        }\n      case $.EXCLAMATION_MARK:\n        {\n          this.state = State.COMMENT_END_BANG;\n          break;\n        }\n      case $.HYPHEN_MINUS:\n        {\n          token.data += '-';\n          break;\n        }\n      case $.EOF:\n        {\n          this._err(ERR.eofInComment);\n          this.emitCurrentComment(token);\n          this._emitEOFToken();\n          break;\n        }\n      default:\n        {\n          token.data += '--';\n          this.state = State.COMMENT;\n          this._stateComment(cp);\n        }\n    }\n  }\n  // Comment end bang state\n  //------------------------------------------------------------------\n  _stateCommentEndBang(cp) {\n    const token = this.currentToken;\n    switch (cp) {\n      case $.HYPHEN_MINUS:\n        {\n          token.data += '--!';\n          this.state = State.COMMENT_END_DASH;\n          break;\n        }\n      case $.GREATER_THAN_SIGN:\n        {\n          this._err(ERR.incorrectlyClosedComment);\n          this.state = State.DATA;\n          this.emitCurrentComment(token);\n          break;\n        }\n      case $.EOF:\n        {\n          this._err(ERR.eofInComment);\n          this.emitCurrentComment(token);\n          this._emitEOFToken();\n          break;\n        }\n      default:\n        {\n          token.data += '--!';\n          this.state = State.COMMENT;\n          this._stateComment(cp);\n        }\n    }\n  }\n  // DOCTYPE state\n  //------------------------------------------------------------------\n  _stateDoctype(cp) {\n    switch (cp) {\n      case $.SPACE:\n      case $.LINE_FEED:\n      case $.TABULATION:\n      case $.FORM_FEED:\n        {\n          this.state = State.BEFORE_DOCTYPE_NAME;\n          break;\n        }\n      case $.GREATER_THAN_SIGN:\n        {\n          this.state = State.BEFORE_DOCTYPE_NAME;\n          this._stateBeforeDoctypeName(cp);\n          break;\n        }\n      case $.EOF:\n        {\n          this._err(ERR.eofInDoctype);\n          this._createDoctypeToken(null);\n          const token = this.currentToken;\n          token.forceQuirks = true;\n          this.emitCurrentDoctype(token);\n          this._emitEOFToken();\n          break;\n        }\n      default:\n        {\n          this._err(ERR.missingWhitespaceBeforeDoctypeName);\n          this.state = State.BEFORE_DOCTYPE_NAME;\n          this._stateBeforeDoctypeName(cp);\n        }\n    }\n  }\n  // Before DOCTYPE name state\n  //------------------------------------------------------------------\n  _stateBeforeDoctypeName(cp) {\n    if (isAsciiUpper(cp)) {\n      this._createDoctypeToken(String.fromCharCode(toAsciiLower(cp)));\n      this.state = State.DOCTYPE_NAME;\n    } else switch (cp) {\n      case $.SPACE:\n      case $.LINE_FEED:\n      case $.TABULATION:\n      case $.FORM_FEED:\n        {\n          // Ignore whitespace\n          break;\n        }\n      case $.NULL:\n        {\n          this._err(ERR.unexpectedNullCharacter);\n          this._createDoctypeToken(REPLACEMENT_CHARACTER);\n          this.state = State.DOCTYPE_NAME;\n          break;\n        }\n      case $.GREATER_THAN_SIGN:\n        {\n          this._err(ERR.missingDoctypeName);\n          this._createDoctypeToken(null);\n          const token = this.currentToken;\n          token.forceQuirks = true;\n          this.emitCurrentDoctype(token);\n          this.state = State.DATA;\n          break;\n        }\n      case $.EOF:\n        {\n          this._err(ERR.eofInDoctype);\n          this._createDoctypeToken(null);\n          const token = this.currentToken;\n          token.forceQuirks = true;\n          this.emitCurrentDoctype(token);\n          this._emitEOFToken();\n          break;\n        }\n      default:\n        {\n          this._createDoctypeToken(String.fromCodePoint(cp));\n          this.state = State.DOCTYPE_NAME;\n        }\n    }\n  }\n  // DOCTYPE name state\n  //------------------------------------------------------------------\n  _stateDoctypeName(cp) {\n    const token = this.currentToken;\n    switch (cp) {\n      case $.SPACE:\n      case $.LINE_FEED:\n      case $.TABULATION:\n      case $.FORM_FEED:\n        {\n          this.state = State.AFTER_DOCTYPE_NAME;\n          break;\n        }\n      case $.GREATER_THAN_SIGN:\n        {\n          this.state = State.DATA;\n          this.emitCurrentDoctype(token);\n          break;\n        }\n      case $.NULL:\n        {\n          this._err(ERR.unexpectedNullCharacter);\n          token.name += REPLACEMENT_CHARACTER;\n          break;\n        }\n      case $.EOF:\n        {\n          this._err(ERR.eofInDoctype);\n          token.forceQuirks = true;\n          this.emitCurrentDoctype(token);\n          this._emitEOFToken();\n          break;\n        }\n      default:\n        {\n          token.name += String.fromCodePoint(isAsciiUpper(cp) ? toAsciiLower(cp) : cp);\n        }\n    }\n  }\n  // After DOCTYPE name state\n  //------------------------------------------------------------------\n  _stateAfterDoctypeName(cp) {\n    const token = this.currentToken;\n    switch (cp) {\n      case $.SPACE:\n      case $.LINE_FEED:\n      case $.TABULATION:\n      case $.FORM_FEED:\n        {\n          // Ignore whitespace\n          break;\n        }\n      case $.GREATER_THAN_SIGN:\n        {\n          this.state = State.DATA;\n          this.emitCurrentDoctype(token);\n          break;\n        }\n      case $.EOF:\n        {\n          this._err(ERR.eofInDoctype);\n          token.forceQuirks = true;\n          this.emitCurrentDoctype(token);\n          this._emitEOFToken();\n          break;\n        }\n      default:\n        {\n          if (this._consumeSequenceIfMatch($$.PUBLIC, false)) {\n            this.state = State.AFTER_DOCTYPE_PUBLIC_KEYWORD;\n          } else if (this._consumeSequenceIfMatch($$.SYSTEM, false)) {\n            this.state = State.AFTER_DOCTYPE_SYSTEM_KEYWORD;\n          }\n          //NOTE: sequence lookup can be abrupted by hibernation. In that case lookup\n          //results are no longer valid and we will need to start over.\n          else if (!this._ensureHibernation()) {\n            this._err(ERR.invalidCharacterSequenceAfterDoctypeName);\n            token.forceQuirks = true;\n            this.state = State.BOGUS_DOCTYPE;\n            this._stateBogusDoctype(cp);\n          }\n        }\n    }\n  }\n  // After DOCTYPE public keyword state\n  //------------------------------------------------------------------\n  _stateAfterDoctypePublicKeyword(cp) {\n    const token = this.currentToken;\n    switch (cp) {\n      case $.SPACE:\n      case $.LINE_FEED:\n      case $.TABULATION:\n      case $.FORM_FEED:\n        {\n          this.state = State.BEFORE_DOCTYPE_PUBLIC_IDENTIFIER;\n          break;\n        }\n      case $.QUOTATION_MARK:\n        {\n          this._err(ERR.missingWhitespaceAfterDoctypePublicKeyword);\n          token.publicId = '';\n          this.state = State.DOCTYPE_PUBLIC_IDENTIFIER_DOUBLE_QUOTED;\n          break;\n        }\n      case $.APOSTROPHE:\n        {\n          this._err(ERR.missingWhitespaceAfterDoctypePublicKeyword);\n          token.publicId = '';\n          this.state = State.DOCTYPE_PUBLIC_IDENTIFIER_SINGLE_QUOTED;\n          break;\n        }\n      case $.GREATER_THAN_SIGN:\n        {\n          this._err(ERR.missingDoctypePublicIdentifier);\n          token.forceQuirks = true;\n          this.state = State.DATA;\n          this.emitCurrentDoctype(token);\n          break;\n        }\n      case $.EOF:\n        {\n          this._err(ERR.eofInDoctype);\n          token.forceQuirks = true;\n          this.emitCurrentDoctype(token);\n          this._emitEOFToken();\n          break;\n        }\n      default:\n        {\n          this._err(ERR.missingQuoteBeforeDoctypePublicIdentifier);\n          token.forceQuirks = true;\n          this.state = State.BOGUS_DOCTYPE;\n          this._stateBogusDoctype(cp);\n        }\n    }\n  }\n  // Before DOCTYPE public identifier state\n  //------------------------------------------------------------------\n  _stateBeforeDoctypePublicIdentifier(cp) {\n    const token = this.currentToken;\n    switch (cp) {\n      case $.SPACE:\n      case $.LINE_FEED:\n      case $.TABULATION:\n      case $.FORM_FEED:\n        {\n          // Ignore whitespace\n          break;\n        }\n      case $.QUOTATION_MARK:\n        {\n          token.publicId = '';\n          this.state = State.DOCTYPE_PUBLIC_IDENTIFIER_DOUBLE_QUOTED;\n          break;\n        }\n      case $.APOSTROPHE:\n        {\n          token.publicId = '';\n          this.state = State.DOCTYPE_PUBLIC_IDENTIFIER_SINGLE_QUOTED;\n          break;\n        }\n      case $.GREATER_THAN_SIGN:\n        {\n          this._err(ERR.missingDoctypePublicIdentifier);\n          token.forceQuirks = true;\n          this.state = State.DATA;\n          this.emitCurrentDoctype(token);\n          break;\n        }\n      case $.EOF:\n        {\n          this._err(ERR.eofInDoctype);\n          token.forceQuirks = true;\n          this.emitCurrentDoctype(token);\n          this._emitEOFToken();\n          break;\n        }\n      default:\n        {\n          this._err(ERR.missingQuoteBeforeDoctypePublicIdentifier);\n          token.forceQuirks = true;\n          this.state = State.BOGUS_DOCTYPE;\n          this._stateBogusDoctype(cp);\n        }\n    }\n  }\n  // DOCTYPE public identifier (double-quoted) state\n  //------------------------------------------------------------------\n  _stateDoctypePublicIdentifierDoubleQuoted(cp) {\n    const token = this.currentToken;\n    switch (cp) {\n      case $.QUOTATION_MARK:\n        {\n          this.state = State.AFTER_DOCTYPE_PUBLIC_IDENTIFIER;\n          break;\n        }\n      case $.NULL:\n        {\n          this._err(ERR.unexpectedNullCharacter);\n          token.publicId += REPLACEMENT_CHARACTER;\n          break;\n        }\n      case $.GREATER_THAN_SIGN:\n        {\n          this._err(ERR.abruptDoctypePublicIdentifier);\n          token.forceQuirks = true;\n          this.emitCurrentDoctype(token);\n          this.state = State.DATA;\n          break;\n        }\n      case $.EOF:\n        {\n          this._err(ERR.eofInDoctype);\n          token.forceQuirks = true;\n          this.emitCurrentDoctype(token);\n          this._emitEOFToken();\n          break;\n        }\n      default:\n        {\n          token.publicId += String.fromCodePoint(cp);\n        }\n    }\n  }\n  // DOCTYPE public identifier (single-quoted) state\n  //------------------------------------------------------------------\n  _stateDoctypePublicIdentifierSingleQuoted(cp) {\n    const token = this.currentToken;\n    switch (cp) {\n      case $.APOSTROPHE:\n        {\n          this.state = State.AFTER_DOCTYPE_PUBLIC_IDENTIFIER;\n          break;\n        }\n      case $.NULL:\n        {\n          this._err(ERR.unexpectedNullCharacter);\n          token.publicId += REPLACEMENT_CHARACTER;\n          break;\n        }\n      case $.GREATER_THAN_SIGN:\n        {\n          this._err(ERR.abruptDoctypePublicIdentifier);\n          token.forceQuirks = true;\n          this.emitCurrentDoctype(token);\n          this.state = State.DATA;\n          break;\n        }\n      case $.EOF:\n        {\n          this._err(ERR.eofInDoctype);\n          token.forceQuirks = true;\n          this.emitCurrentDoctype(token);\n          this._emitEOFToken();\n          break;\n        }\n      default:\n        {\n          token.publicId += String.fromCodePoint(cp);\n        }\n    }\n  }\n  // After DOCTYPE public identifier state\n  //------------------------------------------------------------------\n  _stateAfterDoctypePublicIdentifier(cp) {\n    const token = this.currentToken;\n    switch (cp) {\n      case $.SPACE:\n      case $.LINE_FEED:\n      case $.TABULATION:\n      case $.FORM_FEED:\n        {\n          this.state = State.BETWEEN_DOCTYPE_PUBLIC_AND_SYSTEM_IDENTIFIERS;\n          break;\n        }\n      case $.GREATER_THAN_SIGN:\n        {\n          this.state = State.DATA;\n          this.emitCurrentDoctype(token);\n          break;\n        }\n      case $.QUOTATION_MARK:\n        {\n          this._err(ERR.missingWhitespaceBetweenDoctypePublicAndSystemIdentifiers);\n          token.systemId = '';\n          this.state = State.DOCTYPE_SYSTEM_IDENTIFIER_DOUBLE_QUOTED;\n          break;\n        }\n      case $.APOSTROPHE:\n        {\n          this._err(ERR.missingWhitespaceBetweenDoctypePublicAndSystemIdentifiers);\n          token.systemId = '';\n          this.state = State.DOCTYPE_SYSTEM_IDENTIFIER_SINGLE_QUOTED;\n          break;\n        }\n      case $.EOF:\n        {\n          this._err(ERR.eofInDoctype);\n          token.forceQuirks = true;\n          this.emitCurrentDoctype(token);\n          this._emitEOFToken();\n          break;\n        }\n      default:\n        {\n          this._err(ERR.missingQuoteBeforeDoctypeSystemIdentifier);\n          token.forceQuirks = true;\n          this.state = State.BOGUS_DOCTYPE;\n          this._stateBogusDoctype(cp);\n        }\n    }\n  }\n  // Between DOCTYPE public and system identifiers state\n  //------------------------------------------------------------------\n  _stateBetweenDoctypePublicAndSystemIdentifiers(cp) {\n    const token = this.currentToken;\n    switch (cp) {\n      case $.SPACE:\n      case $.LINE_FEED:\n      case $.TABULATION:\n      case $.FORM_FEED:\n        {\n          // Ignore whitespace\n          break;\n        }\n      case $.GREATER_THAN_SIGN:\n        {\n          this.emitCurrentDoctype(token);\n          this.state = State.DATA;\n          break;\n        }\n      case $.QUOTATION_MARK:\n        {\n          token.systemId = '';\n          this.state = State.DOCTYPE_SYSTEM_IDENTIFIER_DOUBLE_QUOTED;\n          break;\n        }\n      case $.APOSTROPHE:\n        {\n          token.systemId = '';\n          this.state = State.DOCTYPE_SYSTEM_IDENTIFIER_SINGLE_QUOTED;\n          break;\n        }\n      case $.EOF:\n        {\n          this._err(ERR.eofInDoctype);\n          token.forceQuirks = true;\n          this.emitCurrentDoctype(token);\n          this._emitEOFToken();\n          break;\n        }\n      default:\n        {\n          this._err(ERR.missingQuoteBeforeDoctypeSystemIdentifier);\n          token.forceQuirks = true;\n          this.state = State.BOGUS_DOCTYPE;\n          this._stateBogusDoctype(cp);\n        }\n    }\n  }\n  // After DOCTYPE system keyword state\n  //------------------------------------------------------------------\n  _stateAfterDoctypeSystemKeyword(cp) {\n    const token = this.currentToken;\n    switch (cp) {\n      case $.SPACE:\n      case $.LINE_FEED:\n      case $.TABULATION:\n      case $.FORM_FEED:\n        {\n          this.state = State.BEFORE_DOCTYPE_SYSTEM_IDENTIFIER;\n          break;\n        }\n      case $.QUOTATION_MARK:\n        {\n          this._err(ERR.missingWhitespaceAfterDoctypeSystemKeyword);\n          token.systemId = '';\n          this.state = State.DOCTYPE_SYSTEM_IDENTIFIER_DOUBLE_QUOTED;\n          break;\n        }\n      case $.APOSTROPHE:\n        {\n          this._err(ERR.missingWhitespaceAfterDoctypeSystemKeyword);\n          token.systemId = '';\n          this.state = State.DOCTYPE_SYSTEM_IDENTIFIER_SINGLE_QUOTED;\n          break;\n        }\n      case $.GREATER_THAN_SIGN:\n        {\n          this._err(ERR.missingDoctypeSystemIdentifier);\n          token.forceQuirks = true;\n          this.state = State.DATA;\n          this.emitCurrentDoctype(token);\n          break;\n        }\n      case $.EOF:\n        {\n          this._err(ERR.eofInDoctype);\n          token.forceQuirks = true;\n          this.emitCurrentDoctype(token);\n          this._emitEOFToken();\n          break;\n        }\n      default:\n        {\n          this._err(ERR.missingQuoteBeforeDoctypeSystemIdentifier);\n          token.forceQuirks = true;\n          this.state = State.BOGUS_DOCTYPE;\n          this._stateBogusDoctype(cp);\n        }\n    }\n  }\n  // Before DOCTYPE system identifier state\n  //------------------------------------------------------------------\n  _stateBeforeDoctypeSystemIdentifier(cp) {\n    const token = this.currentToken;\n    switch (cp) {\n      case $.SPACE:\n      case $.LINE_FEED:\n      case $.TABULATION:\n      case $.FORM_FEED:\n        {\n          // Ignore whitespace\n          break;\n        }\n      case $.QUOTATION_MARK:\n        {\n          token.systemId = '';\n          this.state = State.DOCTYPE_SYSTEM_IDENTIFIER_DOUBLE_QUOTED;\n          break;\n        }\n      case $.APOSTROPHE:\n        {\n          token.systemId = '';\n          this.state = State.DOCTYPE_SYSTEM_IDENTIFIER_SINGLE_QUOTED;\n          break;\n        }\n      case $.GREATER_THAN_SIGN:\n        {\n          this._err(ERR.missingDoctypeSystemIdentifier);\n          token.forceQuirks = true;\n          this.state = State.DATA;\n          this.emitCurrentDoctype(token);\n          break;\n        }\n      case $.EOF:\n        {\n          this._err(ERR.eofInDoctype);\n          token.forceQuirks = true;\n          this.emitCurrentDoctype(token);\n          this._emitEOFToken();\n          break;\n        }\n      default:\n        {\n          this._err(ERR.missingQuoteBeforeDoctypeSystemIdentifier);\n          token.forceQuirks = true;\n          this.state = State.BOGUS_DOCTYPE;\n          this._stateBogusDoctype(cp);\n        }\n    }\n  }\n  // DOCTYPE system identifier (double-quoted) state\n  //------------------------------------------------------------------\n  _stateDoctypeSystemIdentifierDoubleQuoted(cp) {\n    const token = this.currentToken;\n    switch (cp) {\n      case $.QUOTATION_MARK:\n        {\n          this.state = State.AFTER_DOCTYPE_SYSTEM_IDENTIFIER;\n          break;\n        }\n      case $.NULL:\n        {\n          this._err(ERR.unexpectedNullCharacter);\n          token.systemId += REPLACEMENT_CHARACTER;\n          break;\n        }\n      case $.GREATER_THAN_SIGN:\n        {\n          this._err(ERR.abruptDoctypeSystemIdentifier);\n          token.forceQuirks = true;\n          this.emitCurrentDoctype(token);\n          this.state = State.DATA;\n          break;\n        }\n      case $.EOF:\n        {\n          this._err(ERR.eofInDoctype);\n          token.forceQuirks = true;\n          this.emitCurrentDoctype(token);\n          this._emitEOFToken();\n          break;\n        }\n      default:\n        {\n          token.systemId += String.fromCodePoint(cp);\n        }\n    }\n  }\n  // DOCTYPE system identifier (single-quoted) state\n  //------------------------------------------------------------------\n  _stateDoctypeSystemIdentifierSingleQuoted(cp) {\n    const token = this.currentToken;\n    switch (cp) {\n      case $.APOSTROPHE:\n        {\n          this.state = State.AFTER_DOCTYPE_SYSTEM_IDENTIFIER;\n          break;\n        }\n      case $.NULL:\n        {\n          this._err(ERR.unexpectedNullCharacter);\n          token.systemId += REPLACEMENT_CHARACTER;\n          break;\n        }\n      case $.GREATER_THAN_SIGN:\n        {\n          this._err(ERR.abruptDoctypeSystemIdentifier);\n          token.forceQuirks = true;\n          this.emitCurrentDoctype(token);\n          this.state = State.DATA;\n          break;\n        }\n      case $.EOF:\n        {\n          this._err(ERR.eofInDoctype);\n          token.forceQuirks = true;\n          this.emitCurrentDoctype(token);\n          this._emitEOFToken();\n          break;\n        }\n      default:\n        {\n          token.systemId += String.fromCodePoint(cp);\n        }\n    }\n  }\n  // After DOCTYPE system identifier state\n  //------------------------------------------------------------------\n  _stateAfterDoctypeSystemIdentifier(cp) {\n    const token = this.currentToken;\n    switch (cp) {\n      case $.SPACE:\n      case $.LINE_FEED:\n      case $.TABULATION:\n      case $.FORM_FEED:\n        {\n          // Ignore whitespace\n          break;\n        }\n      case $.GREATER_THAN_SIGN:\n        {\n          this.emitCurrentDoctype(token);\n          this.state = State.DATA;\n          break;\n        }\n      case $.EOF:\n        {\n          this._err(ERR.eofInDoctype);\n          token.forceQuirks = true;\n          this.emitCurrentDoctype(token);\n          this._emitEOFToken();\n          break;\n        }\n      default:\n        {\n          this._err(ERR.unexpectedCharacterAfterDoctypeSystemIdentifier);\n          this.state = State.BOGUS_DOCTYPE;\n          this._stateBogusDoctype(cp);\n        }\n    }\n  }\n  // Bogus DOCTYPE state\n  //------------------------------------------------------------------\n  _stateBogusDoctype(cp) {\n    const token = this.currentToken;\n    switch (cp) {\n      case $.GREATER_THAN_SIGN:\n        {\n          this.emitCurrentDoctype(token);\n          this.state = State.DATA;\n          break;\n        }\n      case $.NULL:\n        {\n          this._err(ERR.unexpectedNullCharacter);\n          break;\n        }\n      case $.EOF:\n        {\n          this.emitCurrentDoctype(token);\n          this._emitEOFToken();\n          break;\n        }\n      default:\n      // Do nothing\n    }\n  }\n  // CDATA section state\n  //------------------------------------------------------------------\n  _stateCdataSection(cp) {\n    switch (cp) {\n      case $.RIGHT_SQUARE_BRACKET:\n        {\n          this.state = State.CDATA_SECTION_BRACKET;\n          break;\n        }\n      case $.EOF:\n        {\n          this._err(ERR.eofInCdata);\n          this._emitEOFToken();\n          break;\n        }\n      default:\n        {\n          this._emitCodePoint(cp);\n        }\n    }\n  }\n  // CDATA section bracket state\n  //------------------------------------------------------------------\n  _stateCdataSectionBracket(cp) {\n    if (cp === $.RIGHT_SQUARE_BRACKET) {\n      this.state = State.CDATA_SECTION_END;\n    } else {\n      this._emitChars(']');\n      this.state = State.CDATA_SECTION;\n      this._stateCdataSection(cp);\n    }\n  }\n  // CDATA section end state\n  //------------------------------------------------------------------\n  _stateCdataSectionEnd(cp) {\n    switch (cp) {\n      case $.GREATER_THAN_SIGN:\n        {\n          this.state = State.DATA;\n          break;\n        }\n      case $.RIGHT_SQUARE_BRACKET:\n        {\n          this._emitChars(']');\n          break;\n        }\n      default:\n        {\n          this._emitChars(']]');\n          this.state = State.CDATA_SECTION;\n          this._stateCdataSection(cp);\n        }\n    }\n  }\n  // Character reference state\n  //------------------------------------------------------------------\n  _stateCharacterReference() {\n    let length = this.entityDecoder.write(this.preprocessor.html, this.preprocessor.pos);\n    if (length < 0) {\n      if (this.preprocessor.lastChunkWritten) {\n        length = this.entityDecoder.end();\n      } else {\n        // Wait for the rest of the entity.\n        this.active = false;\n        // Mark the entire buffer as read.\n        this.preprocessor.pos = this.preprocessor.html.length - 1;\n        this.consumedAfterSnapshot = 0;\n        this.preprocessor.endOfChunkHit = true;\n        return;\n      }\n    }\n    if (length === 0) {\n      // This was not a valid entity. Go back to the beginning, and\n      // figure out what to do.\n      this.preprocessor.pos = this.entityStartPos;\n      this._flushCodePointConsumedAsCharacterReference($.AMPERSAND);\n      this.state = !this._isCharacterReferenceInAttribute() && isAsciiAlphaNumeric(this.preprocessor.peek(1)) ? State.AMBIGUOUS_AMPERSAND : this.returnState;\n    } else {\n      // We successfully parsed an entity. Switch to the return state.\n      this.state = this.returnState;\n    }\n  }\n  // Ambiguos ampersand state\n  //------------------------------------------------------------------\n  _stateAmbiguousAmpersand(cp) {\n    if (isAsciiAlphaNumeric(cp)) {\n      this._flushCodePointConsumedAsCharacterReference(cp);\n    } else {\n      if (cp === $.SEMICOLON) {\n        this._err(ERR.unknownNamedCharacterReference);\n      }\n      this.state = this.returnState;\n      this._callState(cp);\n    }\n  }\n}", "import { TAG_ID as $, NS, NUMBERED_HEADERS } from '../common/html.js';\n//Element utils\nconst IMPLICIT_END_TAG_REQUIRED = new Set([$.DD, $.DT, $.LI, $.OPTGROUP, $.OPTION, $.P, $.RB, $.RP, $.RT, $.RTC]);\nconst IMPLICIT_END_TAG_REQUIRED_THOROUGHLY = new Set([...IMPLICIT_END_TAG_REQUIRED, $.CAPTION, $.COLGROUP, $.TBODY, $.TD, $.TFOOT, $.TH, $.THEAD, $.TR]);\nconst SCOPING_ELEMENTS_HTML = new Set([$.APPLET, $.CAPTION, $.HTML, $.MARQUEE, $.OBJECT, $.TABLE, $.TD, $.TEMPLATE, $.TH]);\nconst SCOPING_ELEMENTS_HTML_LIST = new Set([...SCOPING_ELEMENTS_HTML, $.OL, $.UL]);\nconst SCOPING_ELEMENTS_HTML_BUTTON = new Set([...SCOPING_ELEMENTS_HTML, $.BUTTON]);\nconst SCOPING_ELEMENTS_MATHML = new Set([$.ANNOTATION_XML, $.MI, $.MN, $.MO, $.MS, $.MTEXT]);\nconst SCOPING_ELEMENTS_SVG = new Set([$.DESC, $.FOREIGN_OBJECT, $.TITLE]);\nconst TABLE_ROW_CONTEXT = new Set([$.TR, $.TEMPLATE, $.HTML]);\nconst TABLE_BODY_CONTEXT = new Set([$.TBODY, $.TFOOT, $.THEAD, $.TEMPLATE, $.HTML]);\nconst TABLE_CONTEXT = new Set([$.TABLE, $.TEMPLATE, $.HTML]);\nconst TABLE_CELLS = new Set([$.TD, $.TH]);\n//Stack of open elements\nexport class OpenElementStack {\n  get currentTmplContentOrNode() {\n    return this._isInTemplate() ? this.treeAdapter.getTemplateContent(this.current) : this.current;\n  }\n  constructor(document, treeAdapter, handler) {\n    this.treeAdapter = treeAdapter;\n    this.handler = handler;\n    this.items = [];\n    this.tagIDs = [];\n    this.stackTop = -1;\n    this.tmplCount = 0;\n    this.currentTagId = $.UNKNOWN;\n    this.current = document;\n  }\n  //Index of element\n  _indexOf(element) {\n    return this.items.lastIndexOf(element, this.stackTop);\n  }\n  //Update current element\n  _isInTemplate() {\n    return this.currentTagId === $.TEMPLATE && this.treeAdapter.getNamespaceURI(this.current) === NS.HTML;\n  }\n  _updateCurrentElement() {\n    this.current = this.items[this.stackTop];\n    this.currentTagId = this.tagIDs[this.stackTop];\n  }\n  //Mutations\n  push(element, tagID) {\n    this.stackTop++;\n    this.items[this.stackTop] = element;\n    this.current = element;\n    this.tagIDs[this.stackTop] = tagID;\n    this.currentTagId = tagID;\n    if (this._isInTemplate()) {\n      this.tmplCount++;\n    }\n    this.handler.onItemPush(element, tagID, true);\n  }\n  pop() {\n    const popped = this.current;\n    if (this.tmplCount > 0 && this._isInTemplate()) {\n      this.tmplCount--;\n    }\n    this.stackTop--;\n    this._updateCurrentElement();\n    this.handler.onItemPop(popped, true);\n  }\n  replace(oldElement, newElement) {\n    const idx = this._indexOf(oldElement);\n    this.items[idx] = newElement;\n    if (idx === this.stackTop) {\n      this.current = newElement;\n    }\n  }\n  insertAfter(referenceElement, newElement, newElementID) {\n    const insertionIdx = this._indexOf(referenceElement) + 1;\n    this.items.splice(insertionIdx, 0, newElement);\n    this.tagIDs.splice(insertionIdx, 0, newElementID);\n    this.stackTop++;\n    if (insertionIdx === this.stackTop) {\n      this._updateCurrentElement();\n    }\n    this.handler.onItemPush(this.current, this.currentTagId, insertionIdx === this.stackTop);\n  }\n  popUntilTagNamePopped(tagName) {\n    let targetIdx = this.stackTop + 1;\n    do {\n      targetIdx = this.tagIDs.lastIndexOf(tagName, targetIdx - 1);\n    } while (targetIdx > 0 && this.treeAdapter.getNamespaceURI(this.items[targetIdx]) !== NS.HTML);\n    this.shortenToLength(targetIdx < 0 ? 0 : targetIdx);\n  }\n  shortenToLength(idx) {\n    while (this.stackTop >= idx) {\n      const popped = this.current;\n      if (this.tmplCount > 0 && this._isInTemplate()) {\n        this.tmplCount -= 1;\n      }\n      this.stackTop--;\n      this._updateCurrentElement();\n      this.handler.onItemPop(popped, this.stackTop < idx);\n    }\n  }\n  popUntilElementPopped(element) {\n    const idx = this._indexOf(element);\n    this.shortenToLength(idx < 0 ? 0 : idx);\n  }\n  popUntilPopped(tagNames, targetNS) {\n    const idx = this._indexOfTagNames(tagNames, targetNS);\n    this.shortenToLength(idx < 0 ? 0 : idx);\n  }\n  popUntilNumberedHeaderPopped() {\n    this.popUntilPopped(NUMBERED_HEADERS, NS.HTML);\n  }\n  popUntilTableCellPopped() {\n    this.popUntilPopped(TABLE_CELLS, NS.HTML);\n  }\n  popAllUpToHtmlElement() {\n    //NOTE: here we assume that the root <html> element is always first in the open element stack, so\n    //we perform this fast stack clean up.\n    this.tmplCount = 0;\n    this.shortenToLength(1);\n  }\n  _indexOfTagNames(tagNames, namespace) {\n    for (let i = this.stackTop; i >= 0; i--) {\n      if (tagNames.has(this.tagIDs[i]) && this.treeAdapter.getNamespaceURI(this.items[i]) === namespace) {\n        return i;\n      }\n    }\n    return -1;\n  }\n  clearBackTo(tagNames, targetNS) {\n    const idx = this._indexOfTagNames(tagNames, targetNS);\n    this.shortenToLength(idx + 1);\n  }\n  clearBackToTableContext() {\n    this.clearBackTo(TABLE_CONTEXT, NS.HTML);\n  }\n  clearBackToTableBodyContext() {\n    this.clearBackTo(TABLE_BODY_CONTEXT, NS.HTML);\n  }\n  clearBackToTableRowContext() {\n    this.clearBackTo(TABLE_ROW_CONTEXT, NS.HTML);\n  }\n  remove(element) {\n    const idx = this._indexOf(element);\n    if (idx >= 0) {\n      if (idx === this.stackTop) {\n        this.pop();\n      } else {\n        this.items.splice(idx, 1);\n        this.tagIDs.splice(idx, 1);\n        this.stackTop--;\n        this._updateCurrentElement();\n        this.handler.onItemPop(element, false);\n      }\n    }\n  }\n  //Search\n  tryPeekProperlyNestedBodyElement() {\n    //Properly nested <body> element (should be second element in stack).\n    return this.stackTop >= 1 && this.tagIDs[1] === $.BODY ? this.items[1] : null;\n  }\n  contains(element) {\n    return this._indexOf(element) > -1;\n  }\n  getCommonAncestor(element) {\n    const elementIdx = this._indexOf(element) - 1;\n    return elementIdx >= 0 ? this.items[elementIdx] : null;\n  }\n  isRootHtmlElementCurrent() {\n    return this.stackTop === 0 && this.tagIDs[0] === $.HTML;\n  }\n  //Element in scope\n  hasInDynamicScope(tagName, htmlScope) {\n    for (let i = this.stackTop; i >= 0; i--) {\n      const tn = this.tagIDs[i];\n      switch (this.treeAdapter.getNamespaceURI(this.items[i])) {\n        case NS.HTML:\n          {\n            if (tn === tagName) return true;\n            if (htmlScope.has(tn)) return false;\n            break;\n          }\n        case NS.SVG:\n          {\n            if (SCOPING_ELEMENTS_SVG.has(tn)) return false;\n            break;\n          }\n        case NS.MATHML:\n          {\n            if (SCOPING_ELEMENTS_MATHML.has(tn)) return false;\n            break;\n          }\n      }\n    }\n    return true;\n  }\n  hasInScope(tagName) {\n    return this.hasInDynamicScope(tagName, SCOPING_ELEMENTS_HTML);\n  }\n  hasInListItemScope(tagName) {\n    return this.hasInDynamicScope(tagName, SCOPING_ELEMENTS_HTML_LIST);\n  }\n  hasInButtonScope(tagName) {\n    return this.hasInDynamicScope(tagName, SCOPING_ELEMENTS_HTML_BUTTON);\n  }\n  hasNumberedHeaderInScope() {\n    for (let i = this.stackTop; i >= 0; i--) {\n      const tn = this.tagIDs[i];\n      switch (this.treeAdapter.getNamespaceURI(this.items[i])) {\n        case NS.HTML:\n          {\n            if (NUMBERED_HEADERS.has(tn)) return true;\n            if (SCOPING_ELEMENTS_HTML.has(tn)) return false;\n            break;\n          }\n        case NS.SVG:\n          {\n            if (SCOPING_ELEMENTS_SVG.has(tn)) return false;\n            break;\n          }\n        case NS.MATHML:\n          {\n            if (SCOPING_ELEMENTS_MATHML.has(tn)) return false;\n            break;\n          }\n      }\n    }\n    return true;\n  }\n  hasInTableScope(tagName) {\n    for (let i = this.stackTop; i >= 0; i--) {\n      if (this.treeAdapter.getNamespaceURI(this.items[i]) !== NS.HTML) {\n        continue;\n      }\n      switch (this.tagIDs[i]) {\n        case tagName:\n          {\n            return true;\n          }\n        case $.TABLE:\n        case $.HTML:\n          {\n            return false;\n          }\n      }\n    }\n    return true;\n  }\n  hasTableBodyContextInTableScope() {\n    for (let i = this.stackTop; i >= 0; i--) {\n      if (this.treeAdapter.getNamespaceURI(this.items[i]) !== NS.HTML) {\n        continue;\n      }\n      switch (this.tagIDs[i]) {\n        case $.TBODY:\n        case $.THEAD:\n        case $.TFOOT:\n          {\n            return true;\n          }\n        case $.TABLE:\n        case $.HTML:\n          {\n            return false;\n          }\n      }\n    }\n    return true;\n  }\n  hasInSelectScope(tagName) {\n    for (let i = this.stackTop; i >= 0; i--) {\n      if (this.treeAdapter.getNamespaceURI(this.items[i]) !== NS.HTML) {\n        continue;\n      }\n      switch (this.tagIDs[i]) {\n        case tagName:\n          {\n            return true;\n          }\n        case $.OPTION:\n        case $.OPTGROUP:\n          {\n            break;\n          }\n        default:\n          {\n            return false;\n          }\n      }\n    }\n    return true;\n  }\n  //Implied end tags\n  generateImpliedEndTags() {\n    while (IMPLICIT_END_TAG_REQUIRED.has(this.currentTagId)) {\n      this.pop();\n    }\n  }\n  generateImpliedEndTagsThoroughly() {\n    while (IMPLICIT_END_TAG_REQUIRED_THOROUGHLY.has(this.currentTagId)) {\n      this.pop();\n    }\n  }\n  generateImpliedEndTagsWithExclusion(exclusionId) {\n    while (this.currentTagId !== exclusionId && IMPLICIT_END_TAG_REQUIRED_THOROUGHLY.has(this.currentTagId)) {\n      this.pop();\n    }\n  }\n}", "//Const\nconst NOAH_ARK_CAPACITY = 3;\nexport var EntryType;\n(function (EntryType) {\n  EntryType[EntryType[\"Marker\"] = 0] = \"Marker\";\n  EntryType[EntryType[\"Element\"] = 1] = \"Element\";\n})(EntryType || (EntryType = {}));\nconst MARKER = {\n  type: EntryType.Marker\n};\n//List of formatting elements\nexport class FormattingElementList {\n  constructor(treeAdapter) {\n    this.treeAdapter = treeAdapter;\n    this.entries = [];\n    this.bookmark = null;\n  }\n  //Noah Ark's condition\n  //OPTIMIZATION: at first we try to find possible candidates for exclusion using\n  //lightweight heuristics without thorough attributes check.\n  _getNoahArkConditionCandidates(newElement, neAttrs) {\n    const candidates = [];\n    const neAttrsLength = neAttrs.length;\n    const neTagName = this.treeAdapter.getTagName(newElement);\n    const neNamespaceURI = this.treeAdapter.getNamespaceURI(newElement);\n    for (let i = 0; i < this.entries.length; i++) {\n      const entry = this.entries[i];\n      if (entry.type === EntryType.Marker) {\n        break;\n      }\n      const {\n        element\n      } = entry;\n      if (this.treeAdapter.getTagName(element) === neTagName && this.treeAdapter.getNamespaceURI(element) === neNamespaceURI) {\n        const elementAttrs = this.treeAdapter.getAttrList(element);\n        if (elementAttrs.length === neAttrsLength) {\n          candidates.push({\n            idx: i,\n            attrs: elementAttrs\n          });\n        }\n      }\n    }\n    return candidates;\n  }\n  _ensureNoahArkCondition(newElement) {\n    if (this.entries.length < NOAH_ARK_CAPACITY) return;\n    const neAttrs = this.treeAdapter.getAttrList(newElement);\n    const candidates = this._getNoahArkConditionCandidates(newElement, neAttrs);\n    if (candidates.length < NOAH_ARK_CAPACITY) return;\n    //NOTE: build attrs map for the new element, so we can perform fast lookups\n    const neAttrsMap = new Map(neAttrs.map(neAttr => [neAttr.name, neAttr.value]));\n    let validCandidates = 0;\n    //NOTE: remove bottommost candidates, until Noah's Ark condition will not be met\n    for (let i = 0; i < candidates.length; i++) {\n      const candidate = candidates[i];\n      // We know that `candidate.attrs.length === neAttrs.length`\n      if (candidate.attrs.every(cAttr => neAttrsMap.get(cAttr.name) === cAttr.value)) {\n        validCandidates += 1;\n        if (validCandidates >= NOAH_ARK_CAPACITY) {\n          this.entries.splice(candidate.idx, 1);\n        }\n      }\n    }\n  }\n  //Mutations\n  insertMarker() {\n    this.entries.unshift(MARKER);\n  }\n  pushElement(element, token) {\n    this._ensureNoahArkCondition(element);\n    this.entries.unshift({\n      type: EntryType.Element,\n      element,\n      token\n    });\n  }\n  insertElementAfterBookmark(element, token) {\n    const bookmarkIdx = this.entries.indexOf(this.bookmark);\n    this.entries.splice(bookmarkIdx, 0, {\n      type: EntryType.Element,\n      element,\n      token\n    });\n  }\n  removeEntry(entry) {\n    const entryIndex = this.entries.indexOf(entry);\n    if (entryIndex >= 0) {\n      this.entries.splice(entryIndex, 1);\n    }\n  }\n  /**\n   * Clears the list of formatting elements up to the last marker.\n   *\n   * @see https://html.spec.whatwg.org/multipage/parsing.html#clear-the-list-of-active-formatting-elements-up-to-the-last-marker\n   */\n  clearToLastMarker() {\n    const markerIdx = this.entries.indexOf(MARKER);\n    if (markerIdx >= 0) {\n      this.entries.splice(0, markerIdx + 1);\n    } else {\n      this.entries.length = 0;\n    }\n  }\n  //Search\n  getElementEntryInScopeWithTagName(tagName) {\n    const entry = this.entries.find(entry => entry.type === EntryType.Marker || this.treeAdapter.getTagName(entry.element) === tagName);\n    return entry && entry.type === EntryType.Element ? entry : null;\n  }\n  getElementEntry(element) {\n    return this.entries.find(entry => entry.type === EntryType.Element && entry.element === element);\n  }\n}", "import { DOCUMENT_MODE } from '../common/html.js';\nexport const defaultTreeAdapter = {\n  //Node construction\n  createDocument() {\n    return {\n      nodeName: '#document',\n      mode: DOCUMENT_MODE.NO_QUIRKS,\n      childNodes: []\n    };\n  },\n  createDocumentFragment() {\n    return {\n      nodeName: '#document-fragment',\n      childNodes: []\n    };\n  },\n  createElement(tagName, namespaceURI, attrs) {\n    return {\n      nodeName: tagName,\n      tagName,\n      attrs,\n      namespaceURI,\n      childNodes: [],\n      parentNode: null\n    };\n  },\n  createCommentNode(data) {\n    return {\n      nodeName: '#comment',\n      data,\n      parentNode: null\n    };\n  },\n  createTextNode(value) {\n    return {\n      nodeName: '#text',\n      value,\n      parentNode: null\n    };\n  },\n  //Tree mutation\n  appendChild(parentNode, newNode) {\n    parentNode.childNodes.push(newNode);\n    newNode.parentNode = parentNode;\n  },\n  insertBefore(parentNode, newNode, referenceNode) {\n    const insertionIdx = parentNode.childNodes.indexOf(referenceNode);\n    parentNode.childNodes.splice(insertionIdx, 0, newNode);\n    newNode.parentNode = parentNode;\n  },\n  setTemplateContent(templateElement, contentElement) {\n    templateElement.content = contentElement;\n  },\n  getTemplateContent(templateElement) {\n    return templateElement.content;\n  },\n  setDocumentType(document, name, publicId, systemId) {\n    const doctypeNode = document.childNodes.find(node => node.nodeName === '#documentType');\n    if (doctypeNode) {\n      doctypeNode.name = name;\n      doctypeNode.publicId = publicId;\n      doctypeNode.systemId = systemId;\n    } else {\n      const node = {\n        nodeName: '#documentType',\n        name,\n        publicId,\n        systemId,\n        parentNode: null\n      };\n      defaultTreeAdapter.appendChild(document, node);\n    }\n  },\n  setDocumentMode(document, mode) {\n    document.mode = mode;\n  },\n  getDocumentMode(document) {\n    return document.mode;\n  },\n  detachNode(node) {\n    if (node.parentNode) {\n      const idx = node.parentNode.childNodes.indexOf(node);\n      node.parentNode.childNodes.splice(idx, 1);\n      node.parentNode = null;\n    }\n  },\n  insertText(parentNode, text) {\n    if (parentNode.childNodes.length > 0) {\n      const prevNode = parentNode.childNodes[parentNode.childNodes.length - 1];\n      if (defaultTreeAdapter.isTextNode(prevNode)) {\n        prevNode.value += text;\n        return;\n      }\n    }\n    defaultTreeAdapter.appendChild(parentNode, defaultTreeAdapter.createTextNode(text));\n  },\n  insertTextBefore(parentNode, text, referenceNode) {\n    const prevNode = parentNode.childNodes[parentNode.childNodes.indexOf(referenceNode) - 1];\n    if (prevNode && defaultTreeAdapter.isTextNode(prevNode)) {\n      prevNode.value += text;\n    } else {\n      defaultTreeAdapter.insertBefore(parentNode, defaultTreeAdapter.createTextNode(text), referenceNode);\n    }\n  },\n  adoptAttributes(recipient, attrs) {\n    const recipientAttrsMap = new Set(recipient.attrs.map(attr => attr.name));\n    for (let j = 0; j < attrs.length; j++) {\n      if (!recipientAttrsMap.has(attrs[j].name)) {\n        recipient.attrs.push(attrs[j]);\n      }\n    }\n  },\n  //Tree traversing\n  getFirstChild(node) {\n    return node.childNodes[0];\n  },\n  getChildNodes(node) {\n    return node.childNodes;\n  },\n  getParentNode(node) {\n    return node.parentNode;\n  },\n  getAttrList(element) {\n    return element.attrs;\n  },\n  //Node data\n  getTagName(element) {\n    return element.tagName;\n  },\n  getNamespaceURI(element) {\n    return element.namespaceURI;\n  },\n  getTextNodeContent(textNode) {\n    return textNode.value;\n  },\n  getCommentNodeContent(commentNode) {\n    return commentNode.data;\n  },\n  getDocumentTypeNodeName(doctypeNode) {\n    return doctypeNode.name;\n  },\n  getDocumentTypeNodePublicId(doctypeNode) {\n    return doctypeNode.publicId;\n  },\n  getDocumentTypeNodeSystemId(doctypeNode) {\n    return doctypeNode.systemId;\n  },\n  //Node types\n  isTextNode(node) {\n    return node.nodeName === '#text';\n  },\n  isCommentNode(node) {\n    return node.nodeName === '#comment';\n  },\n  isDocumentTypeNode(node) {\n    return node.nodeName === '#documentType';\n  },\n  isElementNode(node) {\n    return Object.prototype.hasOwnProperty.call(node, 'tagName');\n  },\n  // Source code location\n  setNodeSourceCodeLocation(node, location) {\n    node.sourceCodeLocation = location;\n  },\n  getNodeSourceCodeLocation(node) {\n    return node.sourceCodeLocation;\n  },\n  updateNodeSourceCodeLocation(node, endLocation) {\n    node.sourceCodeLocation = {\n      ...node.sourceCodeLocation,\n      ...endLocation\n    };\n  }\n};", "import { DOCUMENT_MODE } from './html.js';\n//Const\nconst VALID_DOCTYPE_NAME = 'html';\nconst VALID_SYSTEM_ID = 'about:legacy-compat';\nconst QUIRKS_MODE_SYSTEM_ID = 'http://www.ibm.com/data/dtd/v11/ibmxhtml1-transitional.dtd';\nconst QUIRKS_MODE_PUBLIC_ID_PREFIXES = ['+//silmaril//dtd html pro v0r11 19970101//', '-//as//dtd html 3.0 aswedit + extensions//', '-//advasoft ltd//dtd html 3.0 aswedit + extensions//', '-//ietf//dtd html 2.0 level 1//', '-//ietf//dtd html 2.0 level 2//', '-//ietf//dtd html 2.0 strict level 1//', '-//ietf//dtd html 2.0 strict level 2//', '-//ietf//dtd html 2.0 strict//', '-//ietf//dtd html 2.0//', '-//ietf//dtd html 2.1e//', '-//ietf//dtd html 3.0//', '-//ietf//dtd html 3.2 final//', '-//ietf//dtd html 3.2//', '-//ietf//dtd html 3//', '-//ietf//dtd html level 0//', '-//ietf//dtd html level 1//', '-//ietf//dtd html level 2//', '-//ietf//dtd html level 3//', '-//ietf//dtd html strict level 0//', '-//ietf//dtd html strict level 1//', '-//ietf//dtd html strict level 2//', '-//ietf//dtd html strict level 3//', '-//ietf//dtd html strict//', '-//ietf//dtd html//', '-//metrius//dtd metrius presentational//', '-//microsoft//dtd internet explorer 2.0 html strict//', '-//microsoft//dtd internet explorer 2.0 html//', '-//microsoft//dtd internet explorer 2.0 tables//', '-//microsoft//dtd internet explorer 3.0 html strict//', '-//microsoft//dtd internet explorer 3.0 html//', '-//microsoft//dtd internet explorer 3.0 tables//', '-//netscape comm. corp.//dtd html//', '-//netscape comm. corp.//dtd strict html//', \"-//o'reilly and associates//dtd html 2.0//\", \"-//o'reilly and associates//dtd html extended 1.0//\", \"-//o'reilly and associates//dtd html extended relaxed 1.0//\", '-//sq//dtd html 2.0 hotmetal + extensions//', '-//softquad software//dtd hotmetal pro 6.0::19990601::extensions to html 4.0//', '-//softquad//dtd hotmetal pro 4.0::19971010::extensions to html 4.0//', '-//spyglass//dtd html 2.0 extended//', '-//sun microsystems corp.//dtd hotjava html//', '-//sun microsystems corp.//dtd hotjava strict html//', '-//w3c//dtd html 3 1995-03-24//', '-//w3c//dtd html 3.2 draft//', '-//w3c//dtd html 3.2 final//', '-//w3c//dtd html 3.2//', '-//w3c//dtd html 3.2s draft//', '-//w3c//dtd html 4.0 frameset//', '-//w3c//dtd html 4.0 transitional//', '-//w3c//dtd html experimental 19960712//', '-//w3c//dtd html experimental 970421//', '-//w3c//dtd w3 html//', '-//w3o//dtd w3 html 3.0//', '-//webtechs//dtd mozilla html 2.0//', '-//webtechs//dtd mozilla html//'];\nconst QUIRKS_MODE_NO_SYSTEM_ID_PUBLIC_ID_PREFIXES = [...QUIRKS_MODE_PUBLIC_ID_PREFIXES, '-//w3c//dtd html 4.01 frameset//', '-//w3c//dtd html 4.01 transitional//'];\nconst QUIRKS_MODE_PUBLIC_IDS = new Set(['-//w3o//dtd w3 html strict 3.0//en//', '-/w3c/dtd html 4.0 transitional/en', 'html']);\nconst LIMITED_QUIRKS_PUBLIC_ID_PREFIXES = ['-//w3c//dtd xhtml 1.0 frameset//', '-//w3c//dtd xhtml 1.0 transitional//'];\nconst LIMITED_QUIRKS_WITH_SYSTEM_ID_PUBLIC_ID_PREFIXES = [...LIMITED_QUIRKS_PUBLIC_ID_PREFIXES, '-//w3c//dtd html 4.01 frameset//', '-//w3c//dtd html 4.01 transitional//'];\n//Utils\nfunction hasPrefix(publicId, prefixes) {\n  return prefixes.some(prefix => publicId.startsWith(prefix));\n}\n//API\nexport function isConforming(token) {\n  return token.name === VALID_DOCTYPE_NAME && token.publicId === null && (token.systemId === null || token.systemId === VALID_SYSTEM_ID);\n}\nexport function getDocumentMode(token) {\n  if (token.name !== VALID_DOCTYPE_NAME) {\n    return DOCUMENT_MODE.QUIRKS;\n  }\n  const {\n    systemId\n  } = token;\n  if (systemId && systemId.toLowerCase() === QUIRKS_MODE_SYSTEM_ID) {\n    return DOCUMENT_MODE.QUIRKS;\n  }\n  let {\n    publicId\n  } = token;\n  if (publicId !== null) {\n    publicId = publicId.toLowerCase();\n    if (QUIRKS_MODE_PUBLIC_IDS.has(publicId)) {\n      return DOCUMENT_MODE.QUIRKS;\n    }\n    let prefixes = systemId === null ? QUIRKS_MODE_NO_SYSTEM_ID_PUBLIC_ID_PREFIXES : QUIRKS_MODE_PUBLIC_ID_PREFIXES;\n    if (hasPrefix(publicId, prefixes)) {\n      return DOCUMENT_MODE.QUIRKS;\n    }\n    prefixes = systemId === null ? LIMITED_QUIRKS_PUBLIC_ID_PREFIXES : LIMITED_QUIRKS_WITH_SYSTEM_ID_PUBLIC_ID_PREFIXES;\n    if (hasPrefix(publicId, prefixes)) {\n      return DOCUMENT_MODE.LIMITED_QUIRKS;\n    }\n  }\n  return DOCUMENT_MODE.NO_QUIRKS;\n}", "import { TAG_ID as $, NS, ATTRS, getTagID } from './html.js';\n//MIME types\nconst MIME_TYPES = {\n  TEXT_HTML: 'text/html',\n  APPLICATION_XML: 'application/xhtml+xml'\n};\n//Attributes\nconst DEFINITION_URL_ATTR = 'definitionurl';\nconst ADJUSTED_DEFINITION_URL_ATTR = 'definitionURL';\nconst SVG_ATTRS_ADJUSTMENT_MAP = new Map(['attributeName', 'attributeType', 'baseFrequency', 'baseProfile', 'calcMode', 'clipPathUnits', 'diffuseConstant', 'edgeMode', 'filterUnits', 'glyphRef', 'gradientTransform', 'gradientUnits', 'kernelMatrix', 'kernelUnitLength', 'keyPoints', 'keySplines', 'keyTimes', 'lengthAdjust', 'limitingConeAngle', 'markerHeight', 'markerUnits', 'markerWidth', 'maskContentUnits', 'maskUnits', 'numOctaves', 'pathLength', 'patternContentUnits', 'patternTransform', 'patternUnits', 'pointsAtX', 'pointsAtY', 'pointsAtZ', 'preserveAlpha', 'preserveAspectRatio', 'primitiveUnits', 'refX', 'refY', 'repeatCount', 'repeatDur', 'requiredExtensions', 'requiredFeatures', 'specularConstant', 'specularExponent', 'spreadMethod', 'startOffset', 'stdDeviation', 'stitchTiles', 'surfaceScale', 'systemLanguage', 'tableValues', 'targetX', 'targetY', 'textLength', 'viewBox', 'viewTarget', 'xChannelSelector', 'yChannelSelector', 'zoomAndPan'].map(attr => [attr.toLowerCase(), attr]));\nconst XML_ATTRS_ADJUSTMENT_MAP = new Map([['xlink:actuate', {\n  prefix: 'xlink',\n  name: 'actuate',\n  namespace: NS.XLINK\n}], ['xlink:arcrole', {\n  prefix: 'xlink',\n  name: 'arcrole',\n  namespace: NS.XLINK\n}], ['xlink:href', {\n  prefix: 'xlink',\n  name: 'href',\n  namespace: NS.XLINK\n}], ['xlink:role', {\n  prefix: 'xlink',\n  name: 'role',\n  namespace: NS.XLINK\n}], ['xlink:show', {\n  prefix: 'xlink',\n  name: 'show',\n  namespace: NS.XLINK\n}], ['xlink:title', {\n  prefix: 'xlink',\n  name: 'title',\n  namespace: NS.XLINK\n}], ['xlink:type', {\n  prefix: 'xlink',\n  name: 'type',\n  namespace: NS.XLINK\n}], ['xml:lang', {\n  prefix: 'xml',\n  name: 'lang',\n  namespace: NS.XML\n}], ['xml:space', {\n  prefix: 'xml',\n  name: 'space',\n  namespace: NS.XML\n}], ['xmlns', {\n  prefix: '',\n  name: 'xmlns',\n  namespace: NS.XMLNS\n}], ['xmlns:xlink', {\n  prefix: 'xmlns',\n  name: 'xlink',\n  namespace: NS.XMLNS\n}]]);\n//SVG tag names adjustment map\nexport const SVG_TAG_NAMES_ADJUSTMENT_MAP = new Map(['altGlyph', 'altGlyphDef', 'altGlyphItem', 'animateColor', 'animateMotion', 'animateTransform', 'clipPath', 'feBlend', 'feColorMatrix', 'feComponentTransfer', 'feComposite', 'feConvolveMatrix', 'feDiffuseLighting', 'feDisplacementMap', 'feDistantLight', 'feFlood', 'feFuncA', 'feFuncB', 'feFuncG', 'feFuncR', 'feGaussianBlur', 'feImage', 'feMerge', 'feMergeNode', 'feMorphology', 'feOffset', 'fePointLight', 'feSpecularLighting', 'feSpotLight', 'feTile', 'feTurbulence', 'foreignObject', 'glyphRef', 'linearGradient', 'radialGradient', 'textPath'].map(tn => [tn.toLowerCase(), tn]));\n//Tags that causes exit from foreign content\nconst EXITS_FOREIGN_CONTENT = new Set([$.B, $.BIG, $.BLOCKQUOTE, $.BODY, $.BR, $.CENTER, $.CODE, $.DD, $.DIV, $.DL, $.DT, $.EM, $.EMBED, $.H1, $.H2, $.H3, $.H4, $.H5, $.H6, $.HEAD, $.HR, $.I, $.IMG, $.LI, $.LISTING, $.MENU, $.META, $.NOBR, $.OL, $.P, $.PRE, $.RUBY, $.S, $.SMALL, $.SPAN, $.STRONG, $.STRIKE, $.SUB, $.SUP, $.TABLE, $.TT, $.U, $.UL, $.VAR]);\n//Check exit from foreign content\nexport function causesExit(startTagToken) {\n  const tn = startTagToken.tagID;\n  const isFontWithAttrs = tn === $.FONT && startTagToken.attrs.some(({\n    name\n  }) => name === ATTRS.COLOR || name === ATTRS.SIZE || name === ATTRS.FACE);\n  return isFontWithAttrs || EXITS_FOREIGN_CONTENT.has(tn);\n}\n//Token adjustments\nexport function adjustTokenMathMLAttrs(token) {\n  for (let i = 0; i < token.attrs.length; i++) {\n    if (token.attrs[i].name === DEFINITION_URL_ATTR) {\n      token.attrs[i].name = ADJUSTED_DEFINITION_URL_ATTR;\n      break;\n    }\n  }\n}\nexport function adjustTokenSVGAttrs(token) {\n  for (let i = 0; i < token.attrs.length; i++) {\n    const adjustedAttrName = SVG_ATTRS_ADJUSTMENT_MAP.get(token.attrs[i].name);\n    if (adjustedAttrName != null) {\n      token.attrs[i].name = adjustedAttrName;\n    }\n  }\n}\nexport function adjustTokenXMLAttrs(token) {\n  for (let i = 0; i < token.attrs.length; i++) {\n    const adjustedAttrEntry = XML_ATTRS_ADJUSTMENT_MAP.get(token.attrs[i].name);\n    if (adjustedAttrEntry) {\n      token.attrs[i].prefix = adjustedAttrEntry.prefix;\n      token.attrs[i].name = adjustedAttrEntry.name;\n      token.attrs[i].namespace = adjustedAttrEntry.namespace;\n    }\n  }\n}\nexport function adjustTokenSVGTagName(token) {\n  const adjustedTagName = SVG_TAG_NAMES_ADJUSTMENT_MAP.get(token.tagName);\n  if (adjustedTagName != null) {\n    token.tagName = adjustedTagName;\n    token.tagID = getTagID(token.tagName);\n  }\n}\n//Integration points\nfunction isMathMLTextIntegrationPoint(tn, ns) {\n  return ns === NS.MATHML && (tn === $.MI || tn === $.MO || tn === $.MN || tn === $.MS || tn === $.MTEXT);\n}\nfunction isHtmlIntegrationPoint(tn, ns, attrs) {\n  if (ns === NS.MATHML && tn === $.ANNOTATION_XML) {\n    for (let i = 0; i < attrs.length; i++) {\n      if (attrs[i].name === ATTRS.ENCODING) {\n        const value = attrs[i].value.toLowerCase();\n        return value === MIME_TYPES.TEXT_HTML || value === MIME_TYPES.APPLICATION_XML;\n      }\n    }\n  }\n  return ns === NS.SVG && (tn === $.FOREIGN_OBJECT || tn === $.DESC || tn === $.TITLE);\n}\nexport function isIntegrationPoint(tn, ns, attrs, foreignNS) {\n  return (!foreignNS || foreignNS === NS.HTML) && isHtmlIntegrationPoint(tn, ns, attrs) || (!foreignNS || foreignNS === NS.MATHML) && isMathMLTextIntegrationPoint(tn, ns);\n}", "import { Tokenizer, TokenizerMode } from '../tokenizer/index.js';\nimport { OpenElementStack } from './open-element-stack.js';\nimport { FormattingElementList, EntryType } from './formatting-element-list.js';\nimport { defaultTreeAdapter } from '../tree-adapters/default.js';\nimport * as doctype from '../common/doctype.js';\nimport * as foreignContent from '../common/foreign-content.js';\nimport { ERR } from '../common/error-codes.js';\nimport * as unicode from '../common/unicode.js';\nimport { TAG_ID as $, TAG_NAMES as TN, NS, ATTRS, SPECIAL_ELEMENTS, DOCUMENT_MODE, NUMBERED_HEADERS, getTagID } from '../common/html.js';\nimport { TokenType, getTokenAttr } from '../common/token.js';\n//Misc constants\nconst HIDDEN_INPUT_TYPE = 'hidden';\n//Adoption agency loops iteration count\nconst AA_OUTER_LOOP_ITER = 8;\nconst AA_INNER_LOOP_ITER = 3;\n//Insertion modes\nvar InsertionMode;\n(function (InsertionMode) {\n  InsertionMode[InsertionMode[\"INITIAL\"] = 0] = \"INITIAL\";\n  InsertionMode[InsertionMode[\"BEFORE_HTML\"] = 1] = \"BEFORE_HTML\";\n  InsertionMode[InsertionMode[\"BEFORE_HEAD\"] = 2] = \"BEFORE_HEAD\";\n  InsertionMode[InsertionMode[\"IN_HEAD\"] = 3] = \"IN_HEAD\";\n  InsertionMode[InsertionMode[\"IN_HEAD_NO_SCRIPT\"] = 4] = \"IN_HEAD_NO_SCRIPT\";\n  InsertionMode[InsertionMode[\"AFTER_HEAD\"] = 5] = \"AFTER_HEAD\";\n  InsertionMode[InsertionMode[\"IN_BODY\"] = 6] = \"IN_BODY\";\n  InsertionMode[InsertionMode[\"TEXT\"] = 7] = \"TEXT\";\n  InsertionMode[InsertionMode[\"IN_TABLE\"] = 8] = \"IN_TABLE\";\n  InsertionMode[InsertionMode[\"IN_TABLE_TEXT\"] = 9] = \"IN_TABLE_TEXT\";\n  InsertionMode[InsertionMode[\"IN_CAPTION\"] = 10] = \"IN_CAPTION\";\n  InsertionMode[InsertionMode[\"IN_COLUMN_GROUP\"] = 11] = \"IN_COLUMN_GROUP\";\n  InsertionMode[InsertionMode[\"IN_TABLE_BODY\"] = 12] = \"IN_TABLE_BODY\";\n  InsertionMode[InsertionMode[\"IN_ROW\"] = 13] = \"IN_ROW\";\n  InsertionMode[InsertionMode[\"IN_CELL\"] = 14] = \"IN_CELL\";\n  InsertionMode[InsertionMode[\"IN_SELECT\"] = 15] = \"IN_SELECT\";\n  InsertionMode[InsertionMode[\"IN_SELECT_IN_TABLE\"] = 16] = \"IN_SELECT_IN_TABLE\";\n  InsertionMode[InsertionMode[\"IN_TEMPLATE\"] = 17] = \"IN_TEMPLATE\";\n  InsertionMode[InsertionMode[\"AFTER_BODY\"] = 18] = \"AFTER_BODY\";\n  InsertionMode[InsertionMode[\"IN_FRAMESET\"] = 19] = \"IN_FRAMESET\";\n  InsertionMode[InsertionMode[\"AFTER_FRAMESET\"] = 20] = \"AFTER_FRAMESET\";\n  InsertionMode[InsertionMode[\"AFTER_AFTER_BODY\"] = 21] = \"AFTER_AFTER_BODY\";\n  InsertionMode[InsertionMode[\"AFTER_AFTER_FRAMESET\"] = 22] = \"AFTER_AFTER_FRAMESET\";\n})(InsertionMode || (InsertionMode = {}));\nconst BASE_LOC = {\n  startLine: -1,\n  startCol: -1,\n  startOffset: -1,\n  endLine: -1,\n  endCol: -1,\n  endOffset: -1\n};\nconst TABLE_STRUCTURE_TAGS = new Set([$.TABLE, $.TBODY, $.TFOOT, $.THEAD, $.TR]);\nconst defaultParserOptions = {\n  scriptingEnabled: true,\n  sourceCodeLocationInfo: false,\n  treeAdapter: defaultTreeAdapter,\n  onParseError: null\n};\n//Parser\nexport class Parser {\n  constructor(options, document, /** @internal */\n  fragmentContext = null, /** @internal */\n  scriptHandler = null) {\n    this.fragmentContext = fragmentContext;\n    this.scriptHandler = scriptHandler;\n    this.currentToken = null;\n    this.stopped = false;\n    /** @internal */\n    this.insertionMode = InsertionMode.INITIAL;\n    /** @internal */\n    this.originalInsertionMode = InsertionMode.INITIAL;\n    /** @internal */\n    this.headElement = null;\n    /** @internal */\n    this.formElement = null;\n    /** Indicates that the current node is not an element in the HTML namespace */\n    this.currentNotInHTML = false;\n    /**\n     * The template insertion mode stack is maintained from the left.\n     * Ie. the topmost element will always have index 0.\n     *\n     * @internal\n     */\n    this.tmplInsertionModeStack = [];\n    /** @internal */\n    this.pendingCharacterTokens = [];\n    /** @internal */\n    this.hasNonWhitespacePendingCharacterToken = false;\n    /** @internal */\n    this.framesetOk = true;\n    /** @internal */\n    this.skipNextNewLine = false;\n    /** @internal */\n    this.fosterParentingEnabled = false;\n    this.options = {\n      ...defaultParserOptions,\n      ...options\n    };\n    this.treeAdapter = this.options.treeAdapter;\n    this.onParseError = this.options.onParseError;\n    // Always enable location info if we report parse errors.\n    if (this.onParseError) {\n      this.options.sourceCodeLocationInfo = true;\n    }\n    this.document = document !== null && document !== void 0 ? document : this.treeAdapter.createDocument();\n    this.tokenizer = new Tokenizer(this.options, this);\n    this.activeFormattingElements = new FormattingElementList(this.treeAdapter);\n    this.fragmentContextID = fragmentContext ? getTagID(this.treeAdapter.getTagName(fragmentContext)) : $.UNKNOWN;\n    this._setContextModes(fragmentContext !== null && fragmentContext !== void 0 ? fragmentContext : this.document, this.fragmentContextID);\n    this.openElements = new OpenElementStack(this.document, this.treeAdapter, this);\n  }\n  // API\n  static parse(html, options) {\n    const parser = new this(options);\n    parser.tokenizer.write(html, true);\n    return parser.document;\n  }\n  static getFragmentParser(fragmentContext, options) {\n    const opts = {\n      ...defaultParserOptions,\n      ...options\n    };\n    //NOTE: use a <template> element as the fragment context if no context element was provided,\n    //so we will parse in a \"forgiving\" manner\n    fragmentContext !== null && fragmentContext !== void 0 ? fragmentContext : fragmentContext = opts.treeAdapter.createElement(TN.TEMPLATE, NS.HTML, []);\n    //NOTE: create a fake element which will be used as the `document` for fragment parsing.\n    //This is important for jsdom, where a new `document` cannot be created. This led to\n    //fragment parsing messing with the main `document`.\n    const documentMock = opts.treeAdapter.createElement('documentmock', NS.HTML, []);\n    const parser = new this(opts, documentMock, fragmentContext);\n    if (parser.fragmentContextID === $.TEMPLATE) {\n      parser.tmplInsertionModeStack.unshift(InsertionMode.IN_TEMPLATE);\n    }\n    parser._initTokenizerForFragmentParsing();\n    parser._insertFakeRootElement();\n    parser._resetInsertionMode();\n    parser._findFormInFragmentContext();\n    return parser;\n  }\n  getFragment() {\n    const rootElement = this.treeAdapter.getFirstChild(this.document);\n    const fragment = this.treeAdapter.createDocumentFragment();\n    this._adoptNodes(rootElement, fragment);\n    return fragment;\n  }\n  //Errors\n  /** @internal */\n  _err(token, code, beforeToken) {\n    var _a;\n    if (!this.onParseError) return;\n    const loc = (_a = token.location) !== null && _a !== void 0 ? _a : BASE_LOC;\n    const err = {\n      code,\n      startLine: loc.startLine,\n      startCol: loc.startCol,\n      startOffset: loc.startOffset,\n      endLine: beforeToken ? loc.startLine : loc.endLine,\n      endCol: beforeToken ? loc.startCol : loc.endCol,\n      endOffset: beforeToken ? loc.startOffset : loc.endOffset\n    };\n    this.onParseError(err);\n  }\n  //Stack events\n  /** @internal */\n  onItemPush(node, tid, isTop) {\n    var _a, _b;\n    (_b = (_a = this.treeAdapter).onItemPush) === null || _b === void 0 ? void 0 : _b.call(_a, node);\n    if (isTop && this.openElements.stackTop > 0) this._setContextModes(node, tid);\n  }\n  /** @internal */\n  onItemPop(node, isTop) {\n    var _a, _b;\n    if (this.options.sourceCodeLocationInfo) {\n      this._setEndLocation(node, this.currentToken);\n    }\n    (_b = (_a = this.treeAdapter).onItemPop) === null || _b === void 0 ? void 0 : _b.call(_a, node, this.openElements.current);\n    if (isTop) {\n      let current;\n      let currentTagId;\n      if (this.openElements.stackTop === 0 && this.fragmentContext) {\n        current = this.fragmentContext;\n        currentTagId = this.fragmentContextID;\n      } else {\n        ({\n          current,\n          currentTagId\n        } = this.openElements);\n      }\n      this._setContextModes(current, currentTagId);\n    }\n  }\n  _setContextModes(current, tid) {\n    const isHTML = current === this.document || this.treeAdapter.getNamespaceURI(current) === NS.HTML;\n    this.currentNotInHTML = !isHTML;\n    this.tokenizer.inForeignNode = !isHTML && !this._isIntegrationPoint(tid, current);\n  }\n  /** @protected */\n  _switchToTextParsing(currentToken, nextTokenizerState) {\n    this._insertElement(currentToken, NS.HTML);\n    this.tokenizer.state = nextTokenizerState;\n    this.originalInsertionMode = this.insertionMode;\n    this.insertionMode = InsertionMode.TEXT;\n  }\n  switchToPlaintextParsing() {\n    this.insertionMode = InsertionMode.TEXT;\n    this.originalInsertionMode = InsertionMode.IN_BODY;\n    this.tokenizer.state = TokenizerMode.PLAINTEXT;\n  }\n  //Fragment parsing\n  /** @protected */\n  _getAdjustedCurrentElement() {\n    return this.openElements.stackTop === 0 && this.fragmentContext ? this.fragmentContext : this.openElements.current;\n  }\n  /** @protected */\n  _findFormInFragmentContext() {\n    let node = this.fragmentContext;\n    while (node) {\n      if (this.treeAdapter.getTagName(node) === TN.FORM) {\n        this.formElement = node;\n        break;\n      }\n      node = this.treeAdapter.getParentNode(node);\n    }\n  }\n  _initTokenizerForFragmentParsing() {\n    if (!this.fragmentContext || this.treeAdapter.getNamespaceURI(this.fragmentContext) !== NS.HTML) {\n      return;\n    }\n    switch (this.fragmentContextID) {\n      case $.TITLE:\n      case $.TEXTAREA:\n        {\n          this.tokenizer.state = TokenizerMode.RCDATA;\n          break;\n        }\n      case $.STYLE:\n      case $.XMP:\n      case $.IFRAME:\n      case $.NOEMBED:\n      case $.NOFRAMES:\n      case $.NOSCRIPT:\n        {\n          this.tokenizer.state = TokenizerMode.RAWTEXT;\n          break;\n        }\n      case $.SCRIPT:\n        {\n          this.tokenizer.state = TokenizerMode.SCRIPT_DATA;\n          break;\n        }\n      case $.PLAINTEXT:\n        {\n          this.tokenizer.state = TokenizerMode.PLAINTEXT;\n          break;\n        }\n      default:\n      // Do nothing\n    }\n  }\n  //Tree mutation\n  /** @protected */\n  _setDocumentType(token) {\n    const name = token.name || '';\n    const publicId = token.publicId || '';\n    const systemId = token.systemId || '';\n    this.treeAdapter.setDocumentType(this.document, name, publicId, systemId);\n    if (token.location) {\n      const documentChildren = this.treeAdapter.getChildNodes(this.document);\n      const docTypeNode = documentChildren.find(node => this.treeAdapter.isDocumentTypeNode(node));\n      if (docTypeNode) {\n        this.treeAdapter.setNodeSourceCodeLocation(docTypeNode, token.location);\n      }\n    }\n  }\n  /** @protected */\n  _attachElementToTree(element, location) {\n    if (this.options.sourceCodeLocationInfo) {\n      const loc = location && {\n        ...location,\n        startTag: location\n      };\n      this.treeAdapter.setNodeSourceCodeLocation(element, loc);\n    }\n    if (this._shouldFosterParentOnInsertion()) {\n      this._fosterParentElement(element);\n    } else {\n      const parent = this.openElements.currentTmplContentOrNode;\n      this.treeAdapter.appendChild(parent, element);\n    }\n  }\n  /**\n   * For self-closing tags. Add an element to the tree, but skip adding it\n   * to the stack.\n   */\n  /** @protected */\n  _appendElement(token, namespaceURI) {\n    const element = this.treeAdapter.createElement(token.tagName, namespaceURI, token.attrs);\n    this._attachElementToTree(element, token.location);\n  }\n  /** @protected */\n  _insertElement(token, namespaceURI) {\n    const element = this.treeAdapter.createElement(token.tagName, namespaceURI, token.attrs);\n    this._attachElementToTree(element, token.location);\n    this.openElements.push(element, token.tagID);\n  }\n  /** @protected */\n  _insertFakeElement(tagName, tagID) {\n    const element = this.treeAdapter.createElement(tagName, NS.HTML, []);\n    this._attachElementToTree(element, null);\n    this.openElements.push(element, tagID);\n  }\n  /** @protected */\n  _insertTemplate(token) {\n    const tmpl = this.treeAdapter.createElement(token.tagName, NS.HTML, token.attrs);\n    const content = this.treeAdapter.createDocumentFragment();\n    this.treeAdapter.setTemplateContent(tmpl, content);\n    this._attachElementToTree(tmpl, token.location);\n    this.openElements.push(tmpl, token.tagID);\n    if (this.options.sourceCodeLocationInfo) this.treeAdapter.setNodeSourceCodeLocation(content, null);\n  }\n  /** @protected */\n  _insertFakeRootElement() {\n    const element = this.treeAdapter.createElement(TN.HTML, NS.HTML, []);\n    if (this.options.sourceCodeLocationInfo) this.treeAdapter.setNodeSourceCodeLocation(element, null);\n    this.treeAdapter.appendChild(this.openElements.current, element);\n    this.openElements.push(element, $.HTML);\n  }\n  /** @protected */\n  _appendCommentNode(token, parent) {\n    const commentNode = this.treeAdapter.createCommentNode(token.data);\n    this.treeAdapter.appendChild(parent, commentNode);\n    if (this.options.sourceCodeLocationInfo) {\n      this.treeAdapter.setNodeSourceCodeLocation(commentNode, token.location);\n    }\n  }\n  /** @protected */\n  _insertCharacters(token) {\n    let parent;\n    let beforeElement;\n    if (this._shouldFosterParentOnInsertion()) {\n      ({\n        parent,\n        beforeElement\n      } = this._findFosterParentingLocation());\n      if (beforeElement) {\n        this.treeAdapter.insertTextBefore(parent, token.chars, beforeElement);\n      } else {\n        this.treeAdapter.insertText(parent, token.chars);\n      }\n    } else {\n      parent = this.openElements.currentTmplContentOrNode;\n      this.treeAdapter.insertText(parent, token.chars);\n    }\n    if (!token.location) return;\n    const siblings = this.treeAdapter.getChildNodes(parent);\n    const textNodeIdx = beforeElement ? siblings.lastIndexOf(beforeElement) : siblings.length;\n    const textNode = siblings[textNodeIdx - 1];\n    //NOTE: if we have a location assigned by another token, then just update the end position\n    const tnLoc = this.treeAdapter.getNodeSourceCodeLocation(textNode);\n    if (tnLoc) {\n      const {\n        endLine,\n        endCol,\n        endOffset\n      } = token.location;\n      this.treeAdapter.updateNodeSourceCodeLocation(textNode, {\n        endLine,\n        endCol,\n        endOffset\n      });\n    } else if (this.options.sourceCodeLocationInfo) {\n      this.treeAdapter.setNodeSourceCodeLocation(textNode, token.location);\n    }\n  }\n  /** @protected */\n  _adoptNodes(donor, recipient) {\n    for (let child = this.treeAdapter.getFirstChild(donor); child; child = this.treeAdapter.getFirstChild(donor)) {\n      this.treeAdapter.detachNode(child);\n      this.treeAdapter.appendChild(recipient, child);\n    }\n  }\n  /** @protected */\n  _setEndLocation(element, closingToken) {\n    if (this.treeAdapter.getNodeSourceCodeLocation(element) && closingToken.location) {\n      const ctLoc = closingToken.location;\n      const tn = this.treeAdapter.getTagName(element);\n      const endLoc =\n      // NOTE: For cases like <p> <p> </p> - First 'p' closes without a closing\n      // tag and for cases like <td> <p> </td> - 'p' closes without a closing tag.\n      closingToken.type === TokenType.END_TAG && tn === closingToken.tagName ? {\n        endTag: {\n          ...ctLoc\n        },\n        endLine: ctLoc.endLine,\n        endCol: ctLoc.endCol,\n        endOffset: ctLoc.endOffset\n      } : {\n        endLine: ctLoc.startLine,\n        endCol: ctLoc.startCol,\n        endOffset: ctLoc.startOffset\n      };\n      this.treeAdapter.updateNodeSourceCodeLocation(element, endLoc);\n    }\n  }\n  //Token processing\n  shouldProcessStartTagTokenInForeignContent(token) {\n    // Check that neither current === document, or ns === NS.HTML\n    if (!this.currentNotInHTML) return false;\n    let current;\n    let currentTagId;\n    if (this.openElements.stackTop === 0 && this.fragmentContext) {\n      current = this.fragmentContext;\n      currentTagId = this.fragmentContextID;\n    } else {\n      ({\n        current,\n        currentTagId\n      } = this.openElements);\n    }\n    if (token.tagID === $.SVG && this.treeAdapter.getTagName(current) === TN.ANNOTATION_XML && this.treeAdapter.getNamespaceURI(current) === NS.MATHML) {\n      return false;\n    }\n    return (\n      // Check that `current` is not an integration point for HTML or MathML elements.\n      this.tokenizer.inForeignNode ||\n      // If it _is_ an integration point, then we might have to check that it is not an HTML\n      // integration point.\n      (token.tagID === $.MGLYPH || token.tagID === $.MALIGNMARK) && !this._isIntegrationPoint(currentTagId, current, NS.HTML)\n    );\n  }\n  /** @protected */\n  _processToken(token) {\n    switch (token.type) {\n      case TokenType.CHARACTER:\n        {\n          this.onCharacter(token);\n          break;\n        }\n      case TokenType.NULL_CHARACTER:\n        {\n          this.onNullCharacter(token);\n          break;\n        }\n      case TokenType.COMMENT:\n        {\n          this.onComment(token);\n          break;\n        }\n      case TokenType.DOCTYPE:\n        {\n          this.onDoctype(token);\n          break;\n        }\n      case TokenType.START_TAG:\n        {\n          this._processStartTag(token);\n          break;\n        }\n      case TokenType.END_TAG:\n        {\n          this.onEndTag(token);\n          break;\n        }\n      case TokenType.EOF:\n        {\n          this.onEof(token);\n          break;\n        }\n      case TokenType.WHITESPACE_CHARACTER:\n        {\n          this.onWhitespaceCharacter(token);\n          break;\n        }\n    }\n  }\n  //Integration points\n  /** @protected */\n  _isIntegrationPoint(tid, element, foreignNS) {\n    const ns = this.treeAdapter.getNamespaceURI(element);\n    const attrs = this.treeAdapter.getAttrList(element);\n    return foreignContent.isIntegrationPoint(tid, ns, attrs, foreignNS);\n  }\n  //Active formatting elements reconstruction\n  /** @protected */\n  _reconstructActiveFormattingElements() {\n    const listLength = this.activeFormattingElements.entries.length;\n    if (listLength) {\n      const endIndex = this.activeFormattingElements.entries.findIndex(entry => entry.type === EntryType.Marker || this.openElements.contains(entry.element));\n      const unopenIdx = endIndex < 0 ? listLength - 1 : endIndex - 1;\n      for (let i = unopenIdx; i >= 0; i--) {\n        const entry = this.activeFormattingElements.entries[i];\n        this._insertElement(entry.token, this.treeAdapter.getNamespaceURI(entry.element));\n        entry.element = this.openElements.current;\n      }\n    }\n  }\n  //Close elements\n  /** @protected */\n  _closeTableCell() {\n    this.openElements.generateImpliedEndTags();\n    this.openElements.popUntilTableCellPopped();\n    this.activeFormattingElements.clearToLastMarker();\n    this.insertionMode = InsertionMode.IN_ROW;\n  }\n  /** @protected */\n  _closePElement() {\n    this.openElements.generateImpliedEndTagsWithExclusion($.P);\n    this.openElements.popUntilTagNamePopped($.P);\n  }\n  //Insertion modes\n  /** @protected */\n  _resetInsertionMode() {\n    for (let i = this.openElements.stackTop; i >= 0; i--) {\n      //Insertion mode reset map\n      switch (i === 0 && this.fragmentContext ? this.fragmentContextID : this.openElements.tagIDs[i]) {\n        case $.TR:\n          {\n            this.insertionMode = InsertionMode.IN_ROW;\n            return;\n          }\n        case $.TBODY:\n        case $.THEAD:\n        case $.TFOOT:\n          {\n            this.insertionMode = InsertionMode.IN_TABLE_BODY;\n            return;\n          }\n        case $.CAPTION:\n          {\n            this.insertionMode = InsertionMode.IN_CAPTION;\n            return;\n          }\n        case $.COLGROUP:\n          {\n            this.insertionMode = InsertionMode.IN_COLUMN_GROUP;\n            return;\n          }\n        case $.TABLE:\n          {\n            this.insertionMode = InsertionMode.IN_TABLE;\n            return;\n          }\n        case $.BODY:\n          {\n            this.insertionMode = InsertionMode.IN_BODY;\n            return;\n          }\n        case $.FRAMESET:\n          {\n            this.insertionMode = InsertionMode.IN_FRAMESET;\n            return;\n          }\n        case $.SELECT:\n          {\n            this._resetInsertionModeForSelect(i);\n            return;\n          }\n        case $.TEMPLATE:\n          {\n            this.insertionMode = this.tmplInsertionModeStack[0];\n            return;\n          }\n        case $.HTML:\n          {\n            this.insertionMode = this.headElement ? InsertionMode.AFTER_HEAD : InsertionMode.BEFORE_HEAD;\n            return;\n          }\n        case $.TD:\n        case $.TH:\n          {\n            if (i > 0) {\n              this.insertionMode = InsertionMode.IN_CELL;\n              return;\n            }\n            break;\n          }\n        case $.HEAD:\n          {\n            if (i > 0) {\n              this.insertionMode = InsertionMode.IN_HEAD;\n              return;\n            }\n            break;\n          }\n      }\n    }\n    this.insertionMode = InsertionMode.IN_BODY;\n  }\n  /** @protected */\n  _resetInsertionModeForSelect(selectIdx) {\n    if (selectIdx > 0) {\n      for (let i = selectIdx - 1; i > 0; i--) {\n        const tn = this.openElements.tagIDs[i];\n        if (tn === $.TEMPLATE) {\n          break;\n        } else if (tn === $.TABLE) {\n          this.insertionMode = InsertionMode.IN_SELECT_IN_TABLE;\n          return;\n        }\n      }\n    }\n    this.insertionMode = InsertionMode.IN_SELECT;\n  }\n  //Foster parenting\n  /** @protected */\n  _isElementCausesFosterParenting(tn) {\n    return TABLE_STRUCTURE_TAGS.has(tn);\n  }\n  /** @protected */\n  _shouldFosterParentOnInsertion() {\n    return this.fosterParentingEnabled && this._isElementCausesFosterParenting(this.openElements.currentTagId);\n  }\n  /** @protected */\n  _findFosterParentingLocation() {\n    for (let i = this.openElements.stackTop; i >= 0; i--) {\n      const openElement = this.openElements.items[i];\n      switch (this.openElements.tagIDs[i]) {\n        case $.TEMPLATE:\n          {\n            if (this.treeAdapter.getNamespaceURI(openElement) === NS.HTML) {\n              return {\n                parent: this.treeAdapter.getTemplateContent(openElement),\n                beforeElement: null\n              };\n            }\n            break;\n          }\n        case $.TABLE:\n          {\n            const parent = this.treeAdapter.getParentNode(openElement);\n            if (parent) {\n              return {\n                parent,\n                beforeElement: openElement\n              };\n            }\n            return {\n              parent: this.openElements.items[i - 1],\n              beforeElement: null\n            };\n          }\n        default:\n        // Do nothing\n      }\n    }\n    return {\n      parent: this.openElements.items[0],\n      beforeElement: null\n    };\n  }\n  /** @protected */\n  _fosterParentElement(element) {\n    const location = this._findFosterParentingLocation();\n    if (location.beforeElement) {\n      this.treeAdapter.insertBefore(location.parent, element, location.beforeElement);\n    } else {\n      this.treeAdapter.appendChild(location.parent, element);\n    }\n  }\n  //Special elements\n  /** @protected */\n  _isSpecialElement(element, id) {\n    const ns = this.treeAdapter.getNamespaceURI(element);\n    return SPECIAL_ELEMENTS[ns].has(id);\n  }\n  /** @internal */\n  onCharacter(token) {\n    this.skipNextNewLine = false;\n    if (this.tokenizer.inForeignNode) {\n      characterInForeignContent(this, token);\n      return;\n    }\n    switch (this.insertionMode) {\n      case InsertionMode.INITIAL:\n        {\n          tokenInInitialMode(this, token);\n          break;\n        }\n      case InsertionMode.BEFORE_HTML:\n        {\n          tokenBeforeHtml(this, token);\n          break;\n        }\n      case InsertionMode.BEFORE_HEAD:\n        {\n          tokenBeforeHead(this, token);\n          break;\n        }\n      case InsertionMode.IN_HEAD:\n        {\n          tokenInHead(this, token);\n          break;\n        }\n      case InsertionMode.IN_HEAD_NO_SCRIPT:\n        {\n          tokenInHeadNoScript(this, token);\n          break;\n        }\n      case InsertionMode.AFTER_HEAD:\n        {\n          tokenAfterHead(this, token);\n          break;\n        }\n      case InsertionMode.IN_BODY:\n      case InsertionMode.IN_CAPTION:\n      case InsertionMode.IN_CELL:\n      case InsertionMode.IN_TEMPLATE:\n        {\n          characterInBody(this, token);\n          break;\n        }\n      case InsertionMode.TEXT:\n      case InsertionMode.IN_SELECT:\n      case InsertionMode.IN_SELECT_IN_TABLE:\n        {\n          this._insertCharacters(token);\n          break;\n        }\n      case InsertionMode.IN_TABLE:\n      case InsertionMode.IN_TABLE_BODY:\n      case InsertionMode.IN_ROW:\n        {\n          characterInTable(this, token);\n          break;\n        }\n      case InsertionMode.IN_TABLE_TEXT:\n        {\n          characterInTableText(this, token);\n          break;\n        }\n      case InsertionMode.IN_COLUMN_GROUP:\n        {\n          tokenInColumnGroup(this, token);\n          break;\n        }\n      case InsertionMode.AFTER_BODY:\n        {\n          tokenAfterBody(this, token);\n          break;\n        }\n      case InsertionMode.AFTER_AFTER_BODY:\n        {\n          tokenAfterAfterBody(this, token);\n          break;\n        }\n      default:\n      // Do nothing\n    }\n  }\n  /** @internal */\n  onNullCharacter(token) {\n    this.skipNextNewLine = false;\n    if (this.tokenizer.inForeignNode) {\n      nullCharacterInForeignContent(this, token);\n      return;\n    }\n    switch (this.insertionMode) {\n      case InsertionMode.INITIAL:\n        {\n          tokenInInitialMode(this, token);\n          break;\n        }\n      case InsertionMode.BEFORE_HTML:\n        {\n          tokenBeforeHtml(this, token);\n          break;\n        }\n      case InsertionMode.BEFORE_HEAD:\n        {\n          tokenBeforeHead(this, token);\n          break;\n        }\n      case InsertionMode.IN_HEAD:\n        {\n          tokenInHead(this, token);\n          break;\n        }\n      case InsertionMode.IN_HEAD_NO_SCRIPT:\n        {\n          tokenInHeadNoScript(this, token);\n          break;\n        }\n      case InsertionMode.AFTER_HEAD:\n        {\n          tokenAfterHead(this, token);\n          break;\n        }\n      case InsertionMode.TEXT:\n        {\n          this._insertCharacters(token);\n          break;\n        }\n      case InsertionMode.IN_TABLE:\n      case InsertionMode.IN_TABLE_BODY:\n      case InsertionMode.IN_ROW:\n        {\n          characterInTable(this, token);\n          break;\n        }\n      case InsertionMode.IN_COLUMN_GROUP:\n        {\n          tokenInColumnGroup(this, token);\n          break;\n        }\n      case InsertionMode.AFTER_BODY:\n        {\n          tokenAfterBody(this, token);\n          break;\n        }\n      case InsertionMode.AFTER_AFTER_BODY:\n        {\n          tokenAfterAfterBody(this, token);\n          break;\n        }\n      default:\n      // Do nothing\n    }\n  }\n  /** @internal */\n  onComment(token) {\n    this.skipNextNewLine = false;\n    if (this.currentNotInHTML) {\n      appendComment(this, token);\n      return;\n    }\n    switch (this.insertionMode) {\n      case InsertionMode.INITIAL:\n      case InsertionMode.BEFORE_HTML:\n      case InsertionMode.BEFORE_HEAD:\n      case InsertionMode.IN_HEAD:\n      case InsertionMode.IN_HEAD_NO_SCRIPT:\n      case InsertionMode.AFTER_HEAD:\n      case InsertionMode.IN_BODY:\n      case InsertionMode.IN_TABLE:\n      case InsertionMode.IN_CAPTION:\n      case InsertionMode.IN_COLUMN_GROUP:\n      case InsertionMode.IN_TABLE_BODY:\n      case InsertionMode.IN_ROW:\n      case InsertionMode.IN_CELL:\n      case InsertionMode.IN_SELECT:\n      case InsertionMode.IN_SELECT_IN_TABLE:\n      case InsertionMode.IN_TEMPLATE:\n      case InsertionMode.IN_FRAMESET:\n      case InsertionMode.AFTER_FRAMESET:\n        {\n          appendComment(this, token);\n          break;\n        }\n      case InsertionMode.IN_TABLE_TEXT:\n        {\n          tokenInTableText(this, token);\n          break;\n        }\n      case InsertionMode.AFTER_BODY:\n        {\n          appendCommentToRootHtmlElement(this, token);\n          break;\n        }\n      case InsertionMode.AFTER_AFTER_BODY:\n      case InsertionMode.AFTER_AFTER_FRAMESET:\n        {\n          appendCommentToDocument(this, token);\n          break;\n        }\n      default:\n      // Do nothing\n    }\n  }\n  /** @internal */\n  onDoctype(token) {\n    this.skipNextNewLine = false;\n    switch (this.insertionMode) {\n      case InsertionMode.INITIAL:\n        {\n          doctypeInInitialMode(this, token);\n          break;\n        }\n      case InsertionMode.BEFORE_HEAD:\n      case InsertionMode.IN_HEAD:\n      case InsertionMode.IN_HEAD_NO_SCRIPT:\n      case InsertionMode.AFTER_HEAD:\n        {\n          this._err(token, ERR.misplacedDoctype);\n          break;\n        }\n      case InsertionMode.IN_TABLE_TEXT:\n        {\n          tokenInTableText(this, token);\n          break;\n        }\n      default:\n      // Do nothing\n    }\n  }\n  /** @internal */\n  onStartTag(token) {\n    this.skipNextNewLine = false;\n    this.currentToken = token;\n    this._processStartTag(token);\n    if (token.selfClosing && !token.ackSelfClosing) {\n      this._err(token, ERR.nonVoidHtmlElementStartTagWithTrailingSolidus);\n    }\n  }\n  /**\n   * Processes a given start tag.\n   *\n   * `onStartTag` checks if a self-closing tag was recognized. When a token\n   * is moved inbetween multiple insertion modes, this check for self-closing\n   * could lead to false positives. To avoid this, `_processStartTag` is used\n   * for nested calls.\n   *\n   * @param token The token to process.\n   * @protected\n   */\n  _processStartTag(token) {\n    if (this.shouldProcessStartTagTokenInForeignContent(token)) {\n      startTagInForeignContent(this, token);\n    } else {\n      this._startTagOutsideForeignContent(token);\n    }\n  }\n  /** @protected */\n  _startTagOutsideForeignContent(token) {\n    switch (this.insertionMode) {\n      case InsertionMode.INITIAL:\n        {\n          tokenInInitialMode(this, token);\n          break;\n        }\n      case InsertionMode.BEFORE_HTML:\n        {\n          startTagBeforeHtml(this, token);\n          break;\n        }\n      case InsertionMode.BEFORE_HEAD:\n        {\n          startTagBeforeHead(this, token);\n          break;\n        }\n      case InsertionMode.IN_HEAD:\n        {\n          startTagInHead(this, token);\n          break;\n        }\n      case InsertionMode.IN_HEAD_NO_SCRIPT:\n        {\n          startTagInHeadNoScript(this, token);\n          break;\n        }\n      case InsertionMode.AFTER_HEAD:\n        {\n          startTagAfterHead(this, token);\n          break;\n        }\n      case InsertionMode.IN_BODY:\n        {\n          startTagInBody(this, token);\n          break;\n        }\n      case InsertionMode.IN_TABLE:\n        {\n          startTagInTable(this, token);\n          break;\n        }\n      case InsertionMode.IN_TABLE_TEXT:\n        {\n          tokenInTableText(this, token);\n          break;\n        }\n      case InsertionMode.IN_CAPTION:\n        {\n          startTagInCaption(this, token);\n          break;\n        }\n      case InsertionMode.IN_COLUMN_GROUP:\n        {\n          startTagInColumnGroup(this, token);\n          break;\n        }\n      case InsertionMode.IN_TABLE_BODY:\n        {\n          startTagInTableBody(this, token);\n          break;\n        }\n      case InsertionMode.IN_ROW:\n        {\n          startTagInRow(this, token);\n          break;\n        }\n      case InsertionMode.IN_CELL:\n        {\n          startTagInCell(this, token);\n          break;\n        }\n      case InsertionMode.IN_SELECT:\n        {\n          startTagInSelect(this, token);\n          break;\n        }\n      case InsertionMode.IN_SELECT_IN_TABLE:\n        {\n          startTagInSelectInTable(this, token);\n          break;\n        }\n      case InsertionMode.IN_TEMPLATE:\n        {\n          startTagInTemplate(this, token);\n          break;\n        }\n      case InsertionMode.AFTER_BODY:\n        {\n          startTagAfterBody(this, token);\n          break;\n        }\n      case InsertionMode.IN_FRAMESET:\n        {\n          startTagInFrameset(this, token);\n          break;\n        }\n      case InsertionMode.AFTER_FRAMESET:\n        {\n          startTagAfterFrameset(this, token);\n          break;\n        }\n      case InsertionMode.AFTER_AFTER_BODY:\n        {\n          startTagAfterAfterBody(this, token);\n          break;\n        }\n      case InsertionMode.AFTER_AFTER_FRAMESET:\n        {\n          startTagAfterAfterFrameset(this, token);\n          break;\n        }\n      default:\n      // Do nothing\n    }\n  }\n  /** @internal */\n  onEndTag(token) {\n    this.skipNextNewLine = false;\n    this.currentToken = token;\n    if (this.currentNotInHTML) {\n      endTagInForeignContent(this, token);\n    } else {\n      this._endTagOutsideForeignContent(token);\n    }\n  }\n  /** @protected */\n  _endTagOutsideForeignContent(token) {\n    switch (this.insertionMode) {\n      case InsertionMode.INITIAL:\n        {\n          tokenInInitialMode(this, token);\n          break;\n        }\n      case InsertionMode.BEFORE_HTML:\n        {\n          endTagBeforeHtml(this, token);\n          break;\n        }\n      case InsertionMode.BEFORE_HEAD:\n        {\n          endTagBeforeHead(this, token);\n          break;\n        }\n      case InsertionMode.IN_HEAD:\n        {\n          endTagInHead(this, token);\n          break;\n        }\n      case InsertionMode.IN_HEAD_NO_SCRIPT:\n        {\n          endTagInHeadNoScript(this, token);\n          break;\n        }\n      case InsertionMode.AFTER_HEAD:\n        {\n          endTagAfterHead(this, token);\n          break;\n        }\n      case InsertionMode.IN_BODY:\n        {\n          endTagInBody(this, token);\n          break;\n        }\n      case InsertionMode.TEXT:\n        {\n          endTagInText(this, token);\n          break;\n        }\n      case InsertionMode.IN_TABLE:\n        {\n          endTagInTable(this, token);\n          break;\n        }\n      case InsertionMode.IN_TABLE_TEXT:\n        {\n          tokenInTableText(this, token);\n          break;\n        }\n      case InsertionMode.IN_CAPTION:\n        {\n          endTagInCaption(this, token);\n          break;\n        }\n      case InsertionMode.IN_COLUMN_GROUP:\n        {\n          endTagInColumnGroup(this, token);\n          break;\n        }\n      case InsertionMode.IN_TABLE_BODY:\n        {\n          endTagInTableBody(this, token);\n          break;\n        }\n      case InsertionMode.IN_ROW:\n        {\n          endTagInRow(this, token);\n          break;\n        }\n      case InsertionMode.IN_CELL:\n        {\n          endTagInCell(this, token);\n          break;\n        }\n      case InsertionMode.IN_SELECT:\n        {\n          endTagInSelect(this, token);\n          break;\n        }\n      case InsertionMode.IN_SELECT_IN_TABLE:\n        {\n          endTagInSelectInTable(this, token);\n          break;\n        }\n      case InsertionMode.IN_TEMPLATE:\n        {\n          endTagInTemplate(this, token);\n          break;\n        }\n      case InsertionMode.AFTER_BODY:\n        {\n          endTagAfterBody(this, token);\n          break;\n        }\n      case InsertionMode.IN_FRAMESET:\n        {\n          endTagInFrameset(this, token);\n          break;\n        }\n      case InsertionMode.AFTER_FRAMESET:\n        {\n          endTagAfterFrameset(this, token);\n          break;\n        }\n      case InsertionMode.AFTER_AFTER_BODY:\n        {\n          tokenAfterAfterBody(this, token);\n          break;\n        }\n      default:\n      // Do nothing\n    }\n  }\n  /** @internal */\n  onEof(token) {\n    switch (this.insertionMode) {\n      case InsertionMode.INITIAL:\n        {\n          tokenInInitialMode(this, token);\n          break;\n        }\n      case InsertionMode.BEFORE_HTML:\n        {\n          tokenBeforeHtml(this, token);\n          break;\n        }\n      case InsertionMode.BEFORE_HEAD:\n        {\n          tokenBeforeHead(this, token);\n          break;\n        }\n      case InsertionMode.IN_HEAD:\n        {\n          tokenInHead(this, token);\n          break;\n        }\n      case InsertionMode.IN_HEAD_NO_SCRIPT:\n        {\n          tokenInHeadNoScript(this, token);\n          break;\n        }\n      case InsertionMode.AFTER_HEAD:\n        {\n          tokenAfterHead(this, token);\n          break;\n        }\n      case InsertionMode.IN_BODY:\n      case InsertionMode.IN_TABLE:\n      case InsertionMode.IN_CAPTION:\n      case InsertionMode.IN_COLUMN_GROUP:\n      case InsertionMode.IN_TABLE_BODY:\n      case InsertionMode.IN_ROW:\n      case InsertionMode.IN_CELL:\n      case InsertionMode.IN_SELECT:\n      case InsertionMode.IN_SELECT_IN_TABLE:\n        {\n          eofInBody(this, token);\n          break;\n        }\n      case InsertionMode.TEXT:\n        {\n          eofInText(this, token);\n          break;\n        }\n      case InsertionMode.IN_TABLE_TEXT:\n        {\n          tokenInTableText(this, token);\n          break;\n        }\n      case InsertionMode.IN_TEMPLATE:\n        {\n          eofInTemplate(this, token);\n          break;\n        }\n      case InsertionMode.AFTER_BODY:\n      case InsertionMode.IN_FRAMESET:\n      case InsertionMode.AFTER_FRAMESET:\n      case InsertionMode.AFTER_AFTER_BODY:\n      case InsertionMode.AFTER_AFTER_FRAMESET:\n        {\n          stopParsing(this, token);\n          break;\n        }\n      default:\n      // Do nothing\n    }\n  }\n  /** @internal */\n  onWhitespaceCharacter(token) {\n    if (this.skipNextNewLine) {\n      this.skipNextNewLine = false;\n      if (token.chars.charCodeAt(0) === unicode.CODE_POINTS.LINE_FEED) {\n        if (token.chars.length === 1) {\n          return;\n        }\n        token.chars = token.chars.substr(1);\n      }\n    }\n    if (this.tokenizer.inForeignNode) {\n      this._insertCharacters(token);\n      return;\n    }\n    switch (this.insertionMode) {\n      case InsertionMode.IN_HEAD:\n      case InsertionMode.IN_HEAD_NO_SCRIPT:\n      case InsertionMode.AFTER_HEAD:\n      case InsertionMode.TEXT:\n      case InsertionMode.IN_COLUMN_GROUP:\n      case InsertionMode.IN_SELECT:\n      case InsertionMode.IN_SELECT_IN_TABLE:\n      case InsertionMode.IN_FRAMESET:\n      case InsertionMode.AFTER_FRAMESET:\n        {\n          this._insertCharacters(token);\n          break;\n        }\n      case InsertionMode.IN_BODY:\n      case InsertionMode.IN_CAPTION:\n      case InsertionMode.IN_CELL:\n      case InsertionMode.IN_TEMPLATE:\n      case InsertionMode.AFTER_BODY:\n      case InsertionMode.AFTER_AFTER_BODY:\n      case InsertionMode.AFTER_AFTER_FRAMESET:\n        {\n          whitespaceCharacterInBody(this, token);\n          break;\n        }\n      case InsertionMode.IN_TABLE:\n      case InsertionMode.IN_TABLE_BODY:\n      case InsertionMode.IN_ROW:\n        {\n          characterInTable(this, token);\n          break;\n        }\n      case InsertionMode.IN_TABLE_TEXT:\n        {\n          whitespaceCharacterInTableText(this, token);\n          break;\n        }\n      default:\n      // Do nothing\n    }\n  }\n}\n//Adoption agency algorithm\n//(see: http://www.whatwg.org/specs/web-apps/current-work/multipage/tree-construction.html#adoptionAgency)\n//------------------------------------------------------------------\n//Steps 5-8 of the algorithm\nfunction aaObtainFormattingElementEntry(p, token) {\n  let formattingElementEntry = p.activeFormattingElements.getElementEntryInScopeWithTagName(token.tagName);\n  if (formattingElementEntry) {\n    if (!p.openElements.contains(formattingElementEntry.element)) {\n      p.activeFormattingElements.removeEntry(formattingElementEntry);\n      formattingElementEntry = null;\n    } else if (!p.openElements.hasInScope(token.tagID)) {\n      formattingElementEntry = null;\n    }\n  } else {\n    genericEndTagInBody(p, token);\n  }\n  return formattingElementEntry;\n}\n//Steps 9 and 10 of the algorithm\nfunction aaObtainFurthestBlock(p, formattingElementEntry) {\n  let furthestBlock = null;\n  let idx = p.openElements.stackTop;\n  for (; idx >= 0; idx--) {\n    const element = p.openElements.items[idx];\n    if (element === formattingElementEntry.element) {\n      break;\n    }\n    if (p._isSpecialElement(element, p.openElements.tagIDs[idx])) {\n      furthestBlock = element;\n    }\n  }\n  if (!furthestBlock) {\n    p.openElements.shortenToLength(idx < 0 ? 0 : idx);\n    p.activeFormattingElements.removeEntry(formattingElementEntry);\n  }\n  return furthestBlock;\n}\n//Step 13 of the algorithm\nfunction aaInnerLoop(p, furthestBlock, formattingElement) {\n  let lastElement = furthestBlock;\n  let nextElement = p.openElements.getCommonAncestor(furthestBlock);\n  for (let i = 0, element = nextElement; element !== formattingElement; i++, element = nextElement) {\n    //NOTE: store the next element for the next loop iteration (it may be deleted from the stack by step 9.5)\n    nextElement = p.openElements.getCommonAncestor(element);\n    const elementEntry = p.activeFormattingElements.getElementEntry(element);\n    const counterOverflow = elementEntry && i >= AA_INNER_LOOP_ITER;\n    const shouldRemoveFromOpenElements = !elementEntry || counterOverflow;\n    if (shouldRemoveFromOpenElements) {\n      if (counterOverflow) {\n        p.activeFormattingElements.removeEntry(elementEntry);\n      }\n      p.openElements.remove(element);\n    } else {\n      element = aaRecreateElementFromEntry(p, elementEntry);\n      if (lastElement === furthestBlock) {\n        p.activeFormattingElements.bookmark = elementEntry;\n      }\n      p.treeAdapter.detachNode(lastElement);\n      p.treeAdapter.appendChild(element, lastElement);\n      lastElement = element;\n    }\n  }\n  return lastElement;\n}\n//Step 13.7 of the algorithm\nfunction aaRecreateElementFromEntry(p, elementEntry) {\n  const ns = p.treeAdapter.getNamespaceURI(elementEntry.element);\n  const newElement = p.treeAdapter.createElement(elementEntry.token.tagName, ns, elementEntry.token.attrs);\n  p.openElements.replace(elementEntry.element, newElement);\n  elementEntry.element = newElement;\n  return newElement;\n}\n//Step 14 of the algorithm\nfunction aaInsertLastNodeInCommonAncestor(p, commonAncestor, lastElement) {\n  const tn = p.treeAdapter.getTagName(commonAncestor);\n  const tid = getTagID(tn);\n  if (p._isElementCausesFosterParenting(tid)) {\n    p._fosterParentElement(lastElement);\n  } else {\n    const ns = p.treeAdapter.getNamespaceURI(commonAncestor);\n    if (tid === $.TEMPLATE && ns === NS.HTML) {\n      commonAncestor = p.treeAdapter.getTemplateContent(commonAncestor);\n    }\n    p.treeAdapter.appendChild(commonAncestor, lastElement);\n  }\n}\n//Steps 15-19 of the algorithm\nfunction aaReplaceFormattingElement(p, furthestBlock, formattingElementEntry) {\n  const ns = p.treeAdapter.getNamespaceURI(formattingElementEntry.element);\n  const {\n    token\n  } = formattingElementEntry;\n  const newElement = p.treeAdapter.createElement(token.tagName, ns, token.attrs);\n  p._adoptNodes(furthestBlock, newElement);\n  p.treeAdapter.appendChild(furthestBlock, newElement);\n  p.activeFormattingElements.insertElementAfterBookmark(newElement, token);\n  p.activeFormattingElements.removeEntry(formattingElementEntry);\n  p.openElements.remove(formattingElementEntry.element);\n  p.openElements.insertAfter(furthestBlock, newElement, token.tagID);\n}\n//Algorithm entry point\nfunction callAdoptionAgency(p, token) {\n  for (let i = 0; i < AA_OUTER_LOOP_ITER; i++) {\n    const formattingElementEntry = aaObtainFormattingElementEntry(p, token);\n    if (!formattingElementEntry) {\n      break;\n    }\n    const furthestBlock = aaObtainFurthestBlock(p, formattingElementEntry);\n    if (!furthestBlock) {\n      break;\n    }\n    p.activeFormattingElements.bookmark = formattingElementEntry;\n    const lastElement = aaInnerLoop(p, furthestBlock, formattingElementEntry.element);\n    const commonAncestor = p.openElements.getCommonAncestor(formattingElementEntry.element);\n    p.treeAdapter.detachNode(lastElement);\n    if (commonAncestor) aaInsertLastNodeInCommonAncestor(p, commonAncestor, lastElement);\n    aaReplaceFormattingElement(p, furthestBlock, formattingElementEntry);\n  }\n}\n//Generic token handlers\n//------------------------------------------------------------------\nfunction appendComment(p, token) {\n  p._appendCommentNode(token, p.openElements.currentTmplContentOrNode);\n}\nfunction appendCommentToRootHtmlElement(p, token) {\n  p._appendCommentNode(token, p.openElements.items[0]);\n}\nfunction appendCommentToDocument(p, token) {\n  p._appendCommentNode(token, p.document);\n}\nfunction stopParsing(p, token) {\n  p.stopped = true;\n  // NOTE: Set end locations for elements that remain on the open element stack.\n  if (token.location) {\n    // NOTE: If we are not in a fragment, `html` and `body` will stay on the stack.\n    // This is a problem, as we might overwrite their end position here.\n    const target = p.fragmentContext ? 0 : 2;\n    for (let i = p.openElements.stackTop; i >= target; i--) {\n      p._setEndLocation(p.openElements.items[i], token);\n    }\n    // Handle `html` and `body`\n    if (!p.fragmentContext && p.openElements.stackTop >= 0) {\n      const htmlElement = p.openElements.items[0];\n      const htmlLocation = p.treeAdapter.getNodeSourceCodeLocation(htmlElement);\n      if (htmlLocation && !htmlLocation.endTag) {\n        p._setEndLocation(htmlElement, token);\n        if (p.openElements.stackTop >= 1) {\n          const bodyElement = p.openElements.items[1];\n          const bodyLocation = p.treeAdapter.getNodeSourceCodeLocation(bodyElement);\n          if (bodyLocation && !bodyLocation.endTag) {\n            p._setEndLocation(bodyElement, token);\n          }\n        }\n      }\n    }\n  }\n}\n// The \"initial\" insertion mode\n//------------------------------------------------------------------\nfunction doctypeInInitialMode(p, token) {\n  p._setDocumentType(token);\n  const mode = token.forceQuirks ? DOCUMENT_MODE.QUIRKS : doctype.getDocumentMode(token);\n  if (!doctype.isConforming(token)) {\n    p._err(token, ERR.nonConformingDoctype);\n  }\n  p.treeAdapter.setDocumentMode(p.document, mode);\n  p.insertionMode = InsertionMode.BEFORE_HTML;\n}\nfunction tokenInInitialMode(p, token) {\n  p._err(token, ERR.missingDoctype, true);\n  p.treeAdapter.setDocumentMode(p.document, DOCUMENT_MODE.QUIRKS);\n  p.insertionMode = InsertionMode.BEFORE_HTML;\n  p._processToken(token);\n}\n// The \"before html\" insertion mode\n//------------------------------------------------------------------\nfunction startTagBeforeHtml(p, token) {\n  if (token.tagID === $.HTML) {\n    p._insertElement(token, NS.HTML);\n    p.insertionMode = InsertionMode.BEFORE_HEAD;\n  } else {\n    tokenBeforeHtml(p, token);\n  }\n}\nfunction endTagBeforeHtml(p, token) {\n  const tn = token.tagID;\n  if (tn === $.HTML || tn === $.HEAD || tn === $.BODY || tn === $.BR) {\n    tokenBeforeHtml(p, token);\n  }\n}\nfunction tokenBeforeHtml(p, token) {\n  p._insertFakeRootElement();\n  p.insertionMode = InsertionMode.BEFORE_HEAD;\n  p._processToken(token);\n}\n// The \"before head\" insertion mode\n//------------------------------------------------------------------\nfunction startTagBeforeHead(p, token) {\n  switch (token.tagID) {\n    case $.HTML:\n      {\n        startTagInBody(p, token);\n        break;\n      }\n    case $.HEAD:\n      {\n        p._insertElement(token, NS.HTML);\n        p.headElement = p.openElements.current;\n        p.insertionMode = InsertionMode.IN_HEAD;\n        break;\n      }\n    default:\n      {\n        tokenBeforeHead(p, token);\n      }\n  }\n}\nfunction endTagBeforeHead(p, token) {\n  const tn = token.tagID;\n  if (tn === $.HEAD || tn === $.BODY || tn === $.HTML || tn === $.BR) {\n    tokenBeforeHead(p, token);\n  } else {\n    p._err(token, ERR.endTagWithoutMatchingOpenElement);\n  }\n}\nfunction tokenBeforeHead(p, token) {\n  p._insertFakeElement(TN.HEAD, $.HEAD);\n  p.headElement = p.openElements.current;\n  p.insertionMode = InsertionMode.IN_HEAD;\n  p._processToken(token);\n}\n// The \"in head\" insertion mode\n//------------------------------------------------------------------\nfunction startTagInHead(p, token) {\n  switch (token.tagID) {\n    case $.HTML:\n      {\n        startTagInBody(p, token);\n        break;\n      }\n    case $.BASE:\n    case $.BASEFONT:\n    case $.BGSOUND:\n    case $.LINK:\n    case $.META:\n      {\n        p._appendElement(token, NS.HTML);\n        token.ackSelfClosing = true;\n        break;\n      }\n    case $.TITLE:\n      {\n        p._switchToTextParsing(token, TokenizerMode.RCDATA);\n        break;\n      }\n    case $.NOSCRIPT:\n      {\n        if (p.options.scriptingEnabled) {\n          p._switchToTextParsing(token, TokenizerMode.RAWTEXT);\n        } else {\n          p._insertElement(token, NS.HTML);\n          p.insertionMode = InsertionMode.IN_HEAD_NO_SCRIPT;\n        }\n        break;\n      }\n    case $.NOFRAMES:\n    case $.STYLE:\n      {\n        p._switchToTextParsing(token, TokenizerMode.RAWTEXT);\n        break;\n      }\n    case $.SCRIPT:\n      {\n        p._switchToTextParsing(token, TokenizerMode.SCRIPT_DATA);\n        break;\n      }\n    case $.TEMPLATE:\n      {\n        p._insertTemplate(token);\n        p.activeFormattingElements.insertMarker();\n        p.framesetOk = false;\n        p.insertionMode = InsertionMode.IN_TEMPLATE;\n        p.tmplInsertionModeStack.unshift(InsertionMode.IN_TEMPLATE);\n        break;\n      }\n    case $.HEAD:\n      {\n        p._err(token, ERR.misplacedStartTagForHeadElement);\n        break;\n      }\n    default:\n      {\n        tokenInHead(p, token);\n      }\n  }\n}\nfunction endTagInHead(p, token) {\n  switch (token.tagID) {\n    case $.HEAD:\n      {\n        p.openElements.pop();\n        p.insertionMode = InsertionMode.AFTER_HEAD;\n        break;\n      }\n    case $.BODY:\n    case $.BR:\n    case $.HTML:\n      {\n        tokenInHead(p, token);\n        break;\n      }\n    case $.TEMPLATE:\n      {\n        templateEndTagInHead(p, token);\n        break;\n      }\n    default:\n      {\n        p._err(token, ERR.endTagWithoutMatchingOpenElement);\n      }\n  }\n}\nfunction templateEndTagInHead(p, token) {\n  if (p.openElements.tmplCount > 0) {\n    p.openElements.generateImpliedEndTagsThoroughly();\n    if (p.openElements.currentTagId !== $.TEMPLATE) {\n      p._err(token, ERR.closingOfElementWithOpenChildElements);\n    }\n    p.openElements.popUntilTagNamePopped($.TEMPLATE);\n    p.activeFormattingElements.clearToLastMarker();\n    p.tmplInsertionModeStack.shift();\n    p._resetInsertionMode();\n  } else {\n    p._err(token, ERR.endTagWithoutMatchingOpenElement);\n  }\n}\nfunction tokenInHead(p, token) {\n  p.openElements.pop();\n  p.insertionMode = InsertionMode.AFTER_HEAD;\n  p._processToken(token);\n}\n// The \"in head no script\" insertion mode\n//------------------------------------------------------------------\nfunction startTagInHeadNoScript(p, token) {\n  switch (token.tagID) {\n    case $.HTML:\n      {\n        startTagInBody(p, token);\n        break;\n      }\n    case $.BASEFONT:\n    case $.BGSOUND:\n    case $.HEAD:\n    case $.LINK:\n    case $.META:\n    case $.NOFRAMES:\n    case $.STYLE:\n      {\n        startTagInHead(p, token);\n        break;\n      }\n    case $.NOSCRIPT:\n      {\n        p._err(token, ERR.nestedNoscriptInHead);\n        break;\n      }\n    default:\n      {\n        tokenInHeadNoScript(p, token);\n      }\n  }\n}\nfunction endTagInHeadNoScript(p, token) {\n  switch (token.tagID) {\n    case $.NOSCRIPT:\n      {\n        p.openElements.pop();\n        p.insertionMode = InsertionMode.IN_HEAD;\n        break;\n      }\n    case $.BR:\n      {\n        tokenInHeadNoScript(p, token);\n        break;\n      }\n    default:\n      {\n        p._err(token, ERR.endTagWithoutMatchingOpenElement);\n      }\n  }\n}\nfunction tokenInHeadNoScript(p, token) {\n  const errCode = token.type === TokenType.EOF ? ERR.openElementsLeftAfterEof : ERR.disallowedContentInNoscriptInHead;\n  p._err(token, errCode);\n  p.openElements.pop();\n  p.insertionMode = InsertionMode.IN_HEAD;\n  p._processToken(token);\n}\n// The \"after head\" insertion mode\n//------------------------------------------------------------------\nfunction startTagAfterHead(p, token) {\n  switch (token.tagID) {\n    case $.HTML:\n      {\n        startTagInBody(p, token);\n        break;\n      }\n    case $.BODY:\n      {\n        p._insertElement(token, NS.HTML);\n        p.framesetOk = false;\n        p.insertionMode = InsertionMode.IN_BODY;\n        break;\n      }\n    case $.FRAMESET:\n      {\n        p._insertElement(token, NS.HTML);\n        p.insertionMode = InsertionMode.IN_FRAMESET;\n        break;\n      }\n    case $.BASE:\n    case $.BASEFONT:\n    case $.BGSOUND:\n    case $.LINK:\n    case $.META:\n    case $.NOFRAMES:\n    case $.SCRIPT:\n    case $.STYLE:\n    case $.TEMPLATE:\n    case $.TITLE:\n      {\n        p._err(token, ERR.abandonedHeadElementChild);\n        p.openElements.push(p.headElement, $.HEAD);\n        startTagInHead(p, token);\n        p.openElements.remove(p.headElement);\n        break;\n      }\n    case $.HEAD:\n      {\n        p._err(token, ERR.misplacedStartTagForHeadElement);\n        break;\n      }\n    default:\n      {\n        tokenAfterHead(p, token);\n      }\n  }\n}\nfunction endTagAfterHead(p, token) {\n  switch (token.tagID) {\n    case $.BODY:\n    case $.HTML:\n    case $.BR:\n      {\n        tokenAfterHead(p, token);\n        break;\n      }\n    case $.TEMPLATE:\n      {\n        templateEndTagInHead(p, token);\n        break;\n      }\n    default:\n      {\n        p._err(token, ERR.endTagWithoutMatchingOpenElement);\n      }\n  }\n}\nfunction tokenAfterHead(p, token) {\n  p._insertFakeElement(TN.BODY, $.BODY);\n  p.insertionMode = InsertionMode.IN_BODY;\n  modeInBody(p, token);\n}\n// The \"in body\" insertion mode\n//------------------------------------------------------------------\nfunction modeInBody(p, token) {\n  switch (token.type) {\n    case TokenType.CHARACTER:\n      {\n        characterInBody(p, token);\n        break;\n      }\n    case TokenType.WHITESPACE_CHARACTER:\n      {\n        whitespaceCharacterInBody(p, token);\n        break;\n      }\n    case TokenType.COMMENT:\n      {\n        appendComment(p, token);\n        break;\n      }\n    case TokenType.START_TAG:\n      {\n        startTagInBody(p, token);\n        break;\n      }\n    case TokenType.END_TAG:\n      {\n        endTagInBody(p, token);\n        break;\n      }\n    case TokenType.EOF:\n      {\n        eofInBody(p, token);\n        break;\n      }\n    default:\n    // Do nothing\n  }\n}\nfunction whitespaceCharacterInBody(p, token) {\n  p._reconstructActiveFormattingElements();\n  p._insertCharacters(token);\n}\nfunction characterInBody(p, token) {\n  p._reconstructActiveFormattingElements();\n  p._insertCharacters(token);\n  p.framesetOk = false;\n}\nfunction htmlStartTagInBody(p, token) {\n  if (p.openElements.tmplCount === 0) {\n    p.treeAdapter.adoptAttributes(p.openElements.items[0], token.attrs);\n  }\n}\nfunction bodyStartTagInBody(p, token) {\n  const bodyElement = p.openElements.tryPeekProperlyNestedBodyElement();\n  if (bodyElement && p.openElements.tmplCount === 0) {\n    p.framesetOk = false;\n    p.treeAdapter.adoptAttributes(bodyElement, token.attrs);\n  }\n}\nfunction framesetStartTagInBody(p, token) {\n  const bodyElement = p.openElements.tryPeekProperlyNestedBodyElement();\n  if (p.framesetOk && bodyElement) {\n    p.treeAdapter.detachNode(bodyElement);\n    p.openElements.popAllUpToHtmlElement();\n    p._insertElement(token, NS.HTML);\n    p.insertionMode = InsertionMode.IN_FRAMESET;\n  }\n}\nfunction addressStartTagInBody(p, token) {\n  if (p.openElements.hasInButtonScope($.P)) {\n    p._closePElement();\n  }\n  p._insertElement(token, NS.HTML);\n}\nfunction numberedHeaderStartTagInBody(p, token) {\n  if (p.openElements.hasInButtonScope($.P)) {\n    p._closePElement();\n  }\n  if (NUMBERED_HEADERS.has(p.openElements.currentTagId)) {\n    p.openElements.pop();\n  }\n  p._insertElement(token, NS.HTML);\n}\nfunction preStartTagInBody(p, token) {\n  if (p.openElements.hasInButtonScope($.P)) {\n    p._closePElement();\n  }\n  p._insertElement(token, NS.HTML);\n  //NOTE: If the next token is a U+000A LINE FEED (LF) character token, then ignore that token and move\n  //on to the next one. (Newlines at the start of pre blocks are ignored as an authoring convenience.)\n  p.skipNextNewLine = true;\n  p.framesetOk = false;\n}\nfunction formStartTagInBody(p, token) {\n  const inTemplate = p.openElements.tmplCount > 0;\n  if (!p.formElement || inTemplate) {\n    if (p.openElements.hasInButtonScope($.P)) {\n      p._closePElement();\n    }\n    p._insertElement(token, NS.HTML);\n    if (!inTemplate) {\n      p.formElement = p.openElements.current;\n    }\n  }\n}\nfunction listItemStartTagInBody(p, token) {\n  p.framesetOk = false;\n  const tn = token.tagID;\n  for (let i = p.openElements.stackTop; i >= 0; i--) {\n    const elementId = p.openElements.tagIDs[i];\n    if (tn === $.LI && elementId === $.LI || (tn === $.DD || tn === $.DT) && (elementId === $.DD || elementId === $.DT)) {\n      p.openElements.generateImpliedEndTagsWithExclusion(elementId);\n      p.openElements.popUntilTagNamePopped(elementId);\n      break;\n    }\n    if (elementId !== $.ADDRESS && elementId !== $.DIV && elementId !== $.P && p._isSpecialElement(p.openElements.items[i], elementId)) {\n      break;\n    }\n  }\n  if (p.openElements.hasInButtonScope($.P)) {\n    p._closePElement();\n  }\n  p._insertElement(token, NS.HTML);\n}\nfunction plaintextStartTagInBody(p, token) {\n  if (p.openElements.hasInButtonScope($.P)) {\n    p._closePElement();\n  }\n  p._insertElement(token, NS.HTML);\n  p.tokenizer.state = TokenizerMode.PLAINTEXT;\n}\nfunction buttonStartTagInBody(p, token) {\n  if (p.openElements.hasInScope($.BUTTON)) {\n    p.openElements.generateImpliedEndTags();\n    p.openElements.popUntilTagNamePopped($.BUTTON);\n  }\n  p._reconstructActiveFormattingElements();\n  p._insertElement(token, NS.HTML);\n  p.framesetOk = false;\n}\nfunction aStartTagInBody(p, token) {\n  const activeElementEntry = p.activeFormattingElements.getElementEntryInScopeWithTagName(TN.A);\n  if (activeElementEntry) {\n    callAdoptionAgency(p, token);\n    p.openElements.remove(activeElementEntry.element);\n    p.activeFormattingElements.removeEntry(activeElementEntry);\n  }\n  p._reconstructActiveFormattingElements();\n  p._insertElement(token, NS.HTML);\n  p.activeFormattingElements.pushElement(p.openElements.current, token);\n}\nfunction bStartTagInBody(p, token) {\n  p._reconstructActiveFormattingElements();\n  p._insertElement(token, NS.HTML);\n  p.activeFormattingElements.pushElement(p.openElements.current, token);\n}\nfunction nobrStartTagInBody(p, token) {\n  p._reconstructActiveFormattingElements();\n  if (p.openElements.hasInScope($.NOBR)) {\n    callAdoptionAgency(p, token);\n    p._reconstructActiveFormattingElements();\n  }\n  p._insertElement(token, NS.HTML);\n  p.activeFormattingElements.pushElement(p.openElements.current, token);\n}\nfunction appletStartTagInBody(p, token) {\n  p._reconstructActiveFormattingElements();\n  p._insertElement(token, NS.HTML);\n  p.activeFormattingElements.insertMarker();\n  p.framesetOk = false;\n}\nfunction tableStartTagInBody(p, token) {\n  if (p.treeAdapter.getDocumentMode(p.document) !== DOCUMENT_MODE.QUIRKS && p.openElements.hasInButtonScope($.P)) {\n    p._closePElement();\n  }\n  p._insertElement(token, NS.HTML);\n  p.framesetOk = false;\n  p.insertionMode = InsertionMode.IN_TABLE;\n}\nfunction areaStartTagInBody(p, token) {\n  p._reconstructActiveFormattingElements();\n  p._appendElement(token, NS.HTML);\n  p.framesetOk = false;\n  token.ackSelfClosing = true;\n}\nfunction isHiddenInput(token) {\n  const inputType = getTokenAttr(token, ATTRS.TYPE);\n  return inputType != null && inputType.toLowerCase() === HIDDEN_INPUT_TYPE;\n}\nfunction inputStartTagInBody(p, token) {\n  p._reconstructActiveFormattingElements();\n  p._appendElement(token, NS.HTML);\n  if (!isHiddenInput(token)) {\n    p.framesetOk = false;\n  }\n  token.ackSelfClosing = true;\n}\nfunction paramStartTagInBody(p, token) {\n  p._appendElement(token, NS.HTML);\n  token.ackSelfClosing = true;\n}\nfunction hrStartTagInBody(p, token) {\n  if (p.openElements.hasInButtonScope($.P)) {\n    p._closePElement();\n  }\n  p._appendElement(token, NS.HTML);\n  p.framesetOk = false;\n  token.ackSelfClosing = true;\n}\nfunction imageStartTagInBody(p, token) {\n  token.tagName = TN.IMG;\n  token.tagID = $.IMG;\n  areaStartTagInBody(p, token);\n}\nfunction textareaStartTagInBody(p, token) {\n  p._insertElement(token, NS.HTML);\n  //NOTE: If the next token is a U+000A LINE FEED (LF) character token, then ignore that token and move\n  //on to the next one. (Newlines at the start of textarea elements are ignored as an authoring convenience.)\n  p.skipNextNewLine = true;\n  p.tokenizer.state = TokenizerMode.RCDATA;\n  p.originalInsertionMode = p.insertionMode;\n  p.framesetOk = false;\n  p.insertionMode = InsertionMode.TEXT;\n}\nfunction xmpStartTagInBody(p, token) {\n  if (p.openElements.hasInButtonScope($.P)) {\n    p._closePElement();\n  }\n  p._reconstructActiveFormattingElements();\n  p.framesetOk = false;\n  p._switchToTextParsing(token, TokenizerMode.RAWTEXT);\n}\nfunction iframeStartTagInBody(p, token) {\n  p.framesetOk = false;\n  p._switchToTextParsing(token, TokenizerMode.RAWTEXT);\n}\n//NOTE: here we assume that we always act as a user agent with enabled plugins/frames, so we parse\n//<noembed>/<noframes> as rawtext.\nfunction rawTextStartTagInBody(p, token) {\n  p._switchToTextParsing(token, TokenizerMode.RAWTEXT);\n}\nfunction selectStartTagInBody(p, token) {\n  p._reconstructActiveFormattingElements();\n  p._insertElement(token, NS.HTML);\n  p.framesetOk = false;\n  p.insertionMode = p.insertionMode === InsertionMode.IN_TABLE || p.insertionMode === InsertionMode.IN_CAPTION || p.insertionMode === InsertionMode.IN_TABLE_BODY || p.insertionMode === InsertionMode.IN_ROW || p.insertionMode === InsertionMode.IN_CELL ? InsertionMode.IN_SELECT_IN_TABLE : InsertionMode.IN_SELECT;\n}\nfunction optgroupStartTagInBody(p, token) {\n  if (p.openElements.currentTagId === $.OPTION) {\n    p.openElements.pop();\n  }\n  p._reconstructActiveFormattingElements();\n  p._insertElement(token, NS.HTML);\n}\nfunction rbStartTagInBody(p, token) {\n  if (p.openElements.hasInScope($.RUBY)) {\n    p.openElements.generateImpliedEndTags();\n  }\n  p._insertElement(token, NS.HTML);\n}\nfunction rtStartTagInBody(p, token) {\n  if (p.openElements.hasInScope($.RUBY)) {\n    p.openElements.generateImpliedEndTagsWithExclusion($.RTC);\n  }\n  p._insertElement(token, NS.HTML);\n}\nfunction mathStartTagInBody(p, token) {\n  p._reconstructActiveFormattingElements();\n  foreignContent.adjustTokenMathMLAttrs(token);\n  foreignContent.adjustTokenXMLAttrs(token);\n  if (token.selfClosing) {\n    p._appendElement(token, NS.MATHML);\n  } else {\n    p._insertElement(token, NS.MATHML);\n  }\n  token.ackSelfClosing = true;\n}\nfunction svgStartTagInBody(p, token) {\n  p._reconstructActiveFormattingElements();\n  foreignContent.adjustTokenSVGAttrs(token);\n  foreignContent.adjustTokenXMLAttrs(token);\n  if (token.selfClosing) {\n    p._appendElement(token, NS.SVG);\n  } else {\n    p._insertElement(token, NS.SVG);\n  }\n  token.ackSelfClosing = true;\n}\nfunction genericStartTagInBody(p, token) {\n  p._reconstructActiveFormattingElements();\n  p._insertElement(token, NS.HTML);\n}\nfunction startTagInBody(p, token) {\n  switch (token.tagID) {\n    case $.I:\n    case $.S:\n    case $.B:\n    case $.U:\n    case $.EM:\n    case $.TT:\n    case $.BIG:\n    case $.CODE:\n    case $.FONT:\n    case $.SMALL:\n    case $.STRIKE:\n    case $.STRONG:\n      {\n        bStartTagInBody(p, token);\n        break;\n      }\n    case $.A:\n      {\n        aStartTagInBody(p, token);\n        break;\n      }\n    case $.H1:\n    case $.H2:\n    case $.H3:\n    case $.H4:\n    case $.H5:\n    case $.H6:\n      {\n        numberedHeaderStartTagInBody(p, token);\n        break;\n      }\n    case $.P:\n    case $.DL:\n    case $.OL:\n    case $.UL:\n    case $.DIV:\n    case $.DIR:\n    case $.NAV:\n    case $.MAIN:\n    case $.MENU:\n    case $.ASIDE:\n    case $.CENTER:\n    case $.FIGURE:\n    case $.FOOTER:\n    case $.HEADER:\n    case $.HGROUP:\n    case $.DIALOG:\n    case $.DETAILS:\n    case $.ADDRESS:\n    case $.ARTICLE:\n    case $.SEARCH:\n    case $.SECTION:\n    case $.SUMMARY:\n    case $.FIELDSET:\n    case $.BLOCKQUOTE:\n    case $.FIGCAPTION:\n      {\n        addressStartTagInBody(p, token);\n        break;\n      }\n    case $.LI:\n    case $.DD:\n    case $.DT:\n      {\n        listItemStartTagInBody(p, token);\n        break;\n      }\n    case $.BR:\n    case $.IMG:\n    case $.WBR:\n    case $.AREA:\n    case $.EMBED:\n    case $.KEYGEN:\n      {\n        areaStartTagInBody(p, token);\n        break;\n      }\n    case $.HR:\n      {\n        hrStartTagInBody(p, token);\n        break;\n      }\n    case $.RB:\n    case $.RTC:\n      {\n        rbStartTagInBody(p, token);\n        break;\n      }\n    case $.RT:\n    case $.RP:\n      {\n        rtStartTagInBody(p, token);\n        break;\n      }\n    case $.PRE:\n    case $.LISTING:\n      {\n        preStartTagInBody(p, token);\n        break;\n      }\n    case $.XMP:\n      {\n        xmpStartTagInBody(p, token);\n        break;\n      }\n    case $.SVG:\n      {\n        svgStartTagInBody(p, token);\n        break;\n      }\n    case $.HTML:\n      {\n        htmlStartTagInBody(p, token);\n        break;\n      }\n    case $.BASE:\n    case $.LINK:\n    case $.META:\n    case $.STYLE:\n    case $.TITLE:\n    case $.SCRIPT:\n    case $.BGSOUND:\n    case $.BASEFONT:\n    case $.TEMPLATE:\n      {\n        startTagInHead(p, token);\n        break;\n      }\n    case $.BODY:\n      {\n        bodyStartTagInBody(p, token);\n        break;\n      }\n    case $.FORM:\n      {\n        formStartTagInBody(p, token);\n        break;\n      }\n    case $.NOBR:\n      {\n        nobrStartTagInBody(p, token);\n        break;\n      }\n    case $.MATH:\n      {\n        mathStartTagInBody(p, token);\n        break;\n      }\n    case $.TABLE:\n      {\n        tableStartTagInBody(p, token);\n        break;\n      }\n    case $.INPUT:\n      {\n        inputStartTagInBody(p, token);\n        break;\n      }\n    case $.PARAM:\n    case $.TRACK:\n    case $.SOURCE:\n      {\n        paramStartTagInBody(p, token);\n        break;\n      }\n    case $.IMAGE:\n      {\n        imageStartTagInBody(p, token);\n        break;\n      }\n    case $.BUTTON:\n      {\n        buttonStartTagInBody(p, token);\n        break;\n      }\n    case $.APPLET:\n    case $.OBJECT:\n    case $.MARQUEE:\n      {\n        appletStartTagInBody(p, token);\n        break;\n      }\n    case $.IFRAME:\n      {\n        iframeStartTagInBody(p, token);\n        break;\n      }\n    case $.SELECT:\n      {\n        selectStartTagInBody(p, token);\n        break;\n      }\n    case $.OPTION:\n    case $.OPTGROUP:\n      {\n        optgroupStartTagInBody(p, token);\n        break;\n      }\n    case $.NOEMBED:\n    case $.NOFRAMES:\n      {\n        rawTextStartTagInBody(p, token);\n        break;\n      }\n    case $.FRAMESET:\n      {\n        framesetStartTagInBody(p, token);\n        break;\n      }\n    case $.TEXTAREA:\n      {\n        textareaStartTagInBody(p, token);\n        break;\n      }\n    case $.NOSCRIPT:\n      {\n        if (p.options.scriptingEnabled) {\n          rawTextStartTagInBody(p, token);\n        } else {\n          genericStartTagInBody(p, token);\n        }\n        break;\n      }\n    case $.PLAINTEXT:\n      {\n        plaintextStartTagInBody(p, token);\n        break;\n      }\n    case $.COL:\n    case $.TH:\n    case $.TD:\n    case $.TR:\n    case $.HEAD:\n    case $.FRAME:\n    case $.TBODY:\n    case $.TFOOT:\n    case $.THEAD:\n    case $.CAPTION:\n    case $.COLGROUP:\n      {\n        // Ignore token\n        break;\n      }\n    default:\n      {\n        genericStartTagInBody(p, token);\n      }\n  }\n}\nfunction bodyEndTagInBody(p, token) {\n  if (p.openElements.hasInScope($.BODY)) {\n    p.insertionMode = InsertionMode.AFTER_BODY;\n    //NOTE: <body> is never popped from the stack, so we need to updated\n    //the end location explicitly.\n    if (p.options.sourceCodeLocationInfo) {\n      const bodyElement = p.openElements.tryPeekProperlyNestedBodyElement();\n      if (bodyElement) {\n        p._setEndLocation(bodyElement, token);\n      }\n    }\n  }\n}\nfunction htmlEndTagInBody(p, token) {\n  if (p.openElements.hasInScope($.BODY)) {\n    p.insertionMode = InsertionMode.AFTER_BODY;\n    endTagAfterBody(p, token);\n  }\n}\nfunction addressEndTagInBody(p, token) {\n  const tn = token.tagID;\n  if (p.openElements.hasInScope(tn)) {\n    p.openElements.generateImpliedEndTags();\n    p.openElements.popUntilTagNamePopped(tn);\n  }\n}\nfunction formEndTagInBody(p) {\n  const inTemplate = p.openElements.tmplCount > 0;\n  const {\n    formElement\n  } = p;\n  if (!inTemplate) {\n    p.formElement = null;\n  }\n  if ((formElement || inTemplate) && p.openElements.hasInScope($.FORM)) {\n    p.openElements.generateImpliedEndTags();\n    if (inTemplate) {\n      p.openElements.popUntilTagNamePopped($.FORM);\n    } else if (formElement) {\n      p.openElements.remove(formElement);\n    }\n  }\n}\nfunction pEndTagInBody(p) {\n  if (!p.openElements.hasInButtonScope($.P)) {\n    p._insertFakeElement(TN.P, $.P);\n  }\n  p._closePElement();\n}\nfunction liEndTagInBody(p) {\n  if (p.openElements.hasInListItemScope($.LI)) {\n    p.openElements.generateImpliedEndTagsWithExclusion($.LI);\n    p.openElements.popUntilTagNamePopped($.LI);\n  }\n}\nfunction ddEndTagInBody(p, token) {\n  const tn = token.tagID;\n  if (p.openElements.hasInScope(tn)) {\n    p.openElements.generateImpliedEndTagsWithExclusion(tn);\n    p.openElements.popUntilTagNamePopped(tn);\n  }\n}\nfunction numberedHeaderEndTagInBody(p) {\n  if (p.openElements.hasNumberedHeaderInScope()) {\n    p.openElements.generateImpliedEndTags();\n    p.openElements.popUntilNumberedHeaderPopped();\n  }\n}\nfunction appletEndTagInBody(p, token) {\n  const tn = token.tagID;\n  if (p.openElements.hasInScope(tn)) {\n    p.openElements.generateImpliedEndTags();\n    p.openElements.popUntilTagNamePopped(tn);\n    p.activeFormattingElements.clearToLastMarker();\n  }\n}\nfunction brEndTagInBody(p) {\n  p._reconstructActiveFormattingElements();\n  p._insertFakeElement(TN.BR, $.BR);\n  p.openElements.pop();\n  p.framesetOk = false;\n}\nfunction genericEndTagInBody(p, token) {\n  const tn = token.tagName;\n  const tid = token.tagID;\n  for (let i = p.openElements.stackTop; i > 0; i--) {\n    const element = p.openElements.items[i];\n    const elementId = p.openElements.tagIDs[i];\n    // Compare the tag name here, as the tag might not be a known tag with an ID.\n    if (tid === elementId && (tid !== $.UNKNOWN || p.treeAdapter.getTagName(element) === tn)) {\n      p.openElements.generateImpliedEndTagsWithExclusion(tid);\n      if (p.openElements.stackTop >= i) p.openElements.shortenToLength(i);\n      break;\n    }\n    if (p._isSpecialElement(element, elementId)) {\n      break;\n    }\n  }\n}\nfunction endTagInBody(p, token) {\n  switch (token.tagID) {\n    case $.A:\n    case $.B:\n    case $.I:\n    case $.S:\n    case $.U:\n    case $.EM:\n    case $.TT:\n    case $.BIG:\n    case $.CODE:\n    case $.FONT:\n    case $.NOBR:\n    case $.SMALL:\n    case $.STRIKE:\n    case $.STRONG:\n      {\n        callAdoptionAgency(p, token);\n        break;\n      }\n    case $.P:\n      {\n        pEndTagInBody(p);\n        break;\n      }\n    case $.DL:\n    case $.UL:\n    case $.OL:\n    case $.DIR:\n    case $.DIV:\n    case $.NAV:\n    case $.PRE:\n    case $.MAIN:\n    case $.MENU:\n    case $.ASIDE:\n    case $.BUTTON:\n    case $.CENTER:\n    case $.FIGURE:\n    case $.FOOTER:\n    case $.HEADER:\n    case $.HGROUP:\n    case $.DIALOG:\n    case $.ADDRESS:\n    case $.ARTICLE:\n    case $.DETAILS:\n    case $.SEARCH:\n    case $.SECTION:\n    case $.SUMMARY:\n    case $.LISTING:\n    case $.FIELDSET:\n    case $.BLOCKQUOTE:\n    case $.FIGCAPTION:\n      {\n        addressEndTagInBody(p, token);\n        break;\n      }\n    case $.LI:\n      {\n        liEndTagInBody(p);\n        break;\n      }\n    case $.DD:\n    case $.DT:\n      {\n        ddEndTagInBody(p, token);\n        break;\n      }\n    case $.H1:\n    case $.H2:\n    case $.H3:\n    case $.H4:\n    case $.H5:\n    case $.H6:\n      {\n        numberedHeaderEndTagInBody(p);\n        break;\n      }\n    case $.BR:\n      {\n        brEndTagInBody(p);\n        break;\n      }\n    case $.BODY:\n      {\n        bodyEndTagInBody(p, token);\n        break;\n      }\n    case $.HTML:\n      {\n        htmlEndTagInBody(p, token);\n        break;\n      }\n    case $.FORM:\n      {\n        formEndTagInBody(p);\n        break;\n      }\n    case $.APPLET:\n    case $.OBJECT:\n    case $.MARQUEE:\n      {\n        appletEndTagInBody(p, token);\n        break;\n      }\n    case $.TEMPLATE:\n      {\n        templateEndTagInHead(p, token);\n        break;\n      }\n    default:\n      {\n        genericEndTagInBody(p, token);\n      }\n  }\n}\nfunction eofInBody(p, token) {\n  if (p.tmplInsertionModeStack.length > 0) {\n    eofInTemplate(p, token);\n  } else {\n    stopParsing(p, token);\n  }\n}\n// The \"text\" insertion mode\n//------------------------------------------------------------------\nfunction endTagInText(p, token) {\n  var _a;\n  if (token.tagID === $.SCRIPT) {\n    (_a = p.scriptHandler) === null || _a === void 0 ? void 0 : _a.call(p, p.openElements.current);\n  }\n  p.openElements.pop();\n  p.insertionMode = p.originalInsertionMode;\n}\nfunction eofInText(p, token) {\n  p._err(token, ERR.eofInElementThatCanContainOnlyText);\n  p.openElements.pop();\n  p.insertionMode = p.originalInsertionMode;\n  p.onEof(token);\n}\n// The \"in table\" insertion mode\n//------------------------------------------------------------------\nfunction characterInTable(p, token) {\n  if (TABLE_STRUCTURE_TAGS.has(p.openElements.currentTagId)) {\n    p.pendingCharacterTokens.length = 0;\n    p.hasNonWhitespacePendingCharacterToken = false;\n    p.originalInsertionMode = p.insertionMode;\n    p.insertionMode = InsertionMode.IN_TABLE_TEXT;\n    switch (token.type) {\n      case TokenType.CHARACTER:\n        {\n          characterInTableText(p, token);\n          break;\n        }\n      case TokenType.WHITESPACE_CHARACTER:\n        {\n          whitespaceCharacterInTableText(p, token);\n          break;\n        }\n      // Ignore null\n    }\n  } else {\n    tokenInTable(p, token);\n  }\n}\nfunction captionStartTagInTable(p, token) {\n  p.openElements.clearBackToTableContext();\n  p.activeFormattingElements.insertMarker();\n  p._insertElement(token, NS.HTML);\n  p.insertionMode = InsertionMode.IN_CAPTION;\n}\nfunction colgroupStartTagInTable(p, token) {\n  p.openElements.clearBackToTableContext();\n  p._insertElement(token, NS.HTML);\n  p.insertionMode = InsertionMode.IN_COLUMN_GROUP;\n}\nfunction colStartTagInTable(p, token) {\n  p.openElements.clearBackToTableContext();\n  p._insertFakeElement(TN.COLGROUP, $.COLGROUP);\n  p.insertionMode = InsertionMode.IN_COLUMN_GROUP;\n  startTagInColumnGroup(p, token);\n}\nfunction tbodyStartTagInTable(p, token) {\n  p.openElements.clearBackToTableContext();\n  p._insertElement(token, NS.HTML);\n  p.insertionMode = InsertionMode.IN_TABLE_BODY;\n}\nfunction tdStartTagInTable(p, token) {\n  p.openElements.clearBackToTableContext();\n  p._insertFakeElement(TN.TBODY, $.TBODY);\n  p.insertionMode = InsertionMode.IN_TABLE_BODY;\n  startTagInTableBody(p, token);\n}\nfunction tableStartTagInTable(p, token) {\n  if (p.openElements.hasInTableScope($.TABLE)) {\n    p.openElements.popUntilTagNamePopped($.TABLE);\n    p._resetInsertionMode();\n    p._processStartTag(token);\n  }\n}\nfunction inputStartTagInTable(p, token) {\n  if (isHiddenInput(token)) {\n    p._appendElement(token, NS.HTML);\n  } else {\n    tokenInTable(p, token);\n  }\n  token.ackSelfClosing = true;\n}\nfunction formStartTagInTable(p, token) {\n  if (!p.formElement && p.openElements.tmplCount === 0) {\n    p._insertElement(token, NS.HTML);\n    p.formElement = p.openElements.current;\n    p.openElements.pop();\n  }\n}\nfunction startTagInTable(p, token) {\n  switch (token.tagID) {\n    case $.TD:\n    case $.TH:\n    case $.TR:\n      {\n        tdStartTagInTable(p, token);\n        break;\n      }\n    case $.STYLE:\n    case $.SCRIPT:\n    case $.TEMPLATE:\n      {\n        startTagInHead(p, token);\n        break;\n      }\n    case $.COL:\n      {\n        colStartTagInTable(p, token);\n        break;\n      }\n    case $.FORM:\n      {\n        formStartTagInTable(p, token);\n        break;\n      }\n    case $.TABLE:\n      {\n        tableStartTagInTable(p, token);\n        break;\n      }\n    case $.TBODY:\n    case $.TFOOT:\n    case $.THEAD:\n      {\n        tbodyStartTagInTable(p, token);\n        break;\n      }\n    case $.INPUT:\n      {\n        inputStartTagInTable(p, token);\n        break;\n      }\n    case $.CAPTION:\n      {\n        captionStartTagInTable(p, token);\n        break;\n      }\n    case $.COLGROUP:\n      {\n        colgroupStartTagInTable(p, token);\n        break;\n      }\n    default:\n      {\n        tokenInTable(p, token);\n      }\n  }\n}\nfunction endTagInTable(p, token) {\n  switch (token.tagID) {\n    case $.TABLE:\n      {\n        if (p.openElements.hasInTableScope($.TABLE)) {\n          p.openElements.popUntilTagNamePopped($.TABLE);\n          p._resetInsertionMode();\n        }\n        break;\n      }\n    case $.TEMPLATE:\n      {\n        templateEndTagInHead(p, token);\n        break;\n      }\n    case $.BODY:\n    case $.CAPTION:\n    case $.COL:\n    case $.COLGROUP:\n    case $.HTML:\n    case $.TBODY:\n    case $.TD:\n    case $.TFOOT:\n    case $.TH:\n    case $.THEAD:\n    case $.TR:\n      {\n        // Ignore token\n        break;\n      }\n    default:\n      {\n        tokenInTable(p, token);\n      }\n  }\n}\nfunction tokenInTable(p, token) {\n  const savedFosterParentingState = p.fosterParentingEnabled;\n  p.fosterParentingEnabled = true;\n  // Process token in `In Body` mode\n  modeInBody(p, token);\n  p.fosterParentingEnabled = savedFosterParentingState;\n}\n// The \"in table text\" insertion mode\n//------------------------------------------------------------------\nfunction whitespaceCharacterInTableText(p, token) {\n  p.pendingCharacterTokens.push(token);\n}\nfunction characterInTableText(p, token) {\n  p.pendingCharacterTokens.push(token);\n  p.hasNonWhitespacePendingCharacterToken = true;\n}\nfunction tokenInTableText(p, token) {\n  let i = 0;\n  if (p.hasNonWhitespacePendingCharacterToken) {\n    for (; i < p.pendingCharacterTokens.length; i++) {\n      tokenInTable(p, p.pendingCharacterTokens[i]);\n    }\n  } else {\n    for (; i < p.pendingCharacterTokens.length; i++) {\n      p._insertCharacters(p.pendingCharacterTokens[i]);\n    }\n  }\n  p.insertionMode = p.originalInsertionMode;\n  p._processToken(token);\n}\n// The \"in caption\" insertion mode\n//------------------------------------------------------------------\nconst TABLE_VOID_ELEMENTS = new Set([$.CAPTION, $.COL, $.COLGROUP, $.TBODY, $.TD, $.TFOOT, $.TH, $.THEAD, $.TR]);\nfunction startTagInCaption(p, token) {\n  const tn = token.tagID;\n  if (TABLE_VOID_ELEMENTS.has(tn)) {\n    if (p.openElements.hasInTableScope($.CAPTION)) {\n      p.openElements.generateImpliedEndTags();\n      p.openElements.popUntilTagNamePopped($.CAPTION);\n      p.activeFormattingElements.clearToLastMarker();\n      p.insertionMode = InsertionMode.IN_TABLE;\n      startTagInTable(p, token);\n    }\n  } else {\n    startTagInBody(p, token);\n  }\n}\nfunction endTagInCaption(p, token) {\n  const tn = token.tagID;\n  switch (tn) {\n    case $.CAPTION:\n    case $.TABLE:\n      {\n        if (p.openElements.hasInTableScope($.CAPTION)) {\n          p.openElements.generateImpliedEndTags();\n          p.openElements.popUntilTagNamePopped($.CAPTION);\n          p.activeFormattingElements.clearToLastMarker();\n          p.insertionMode = InsertionMode.IN_TABLE;\n          if (tn === $.TABLE) {\n            endTagInTable(p, token);\n          }\n        }\n        break;\n      }\n    case $.BODY:\n    case $.COL:\n    case $.COLGROUP:\n    case $.HTML:\n    case $.TBODY:\n    case $.TD:\n    case $.TFOOT:\n    case $.TH:\n    case $.THEAD:\n    case $.TR:\n      {\n        // Ignore token\n        break;\n      }\n    default:\n      {\n        endTagInBody(p, token);\n      }\n  }\n}\n// The \"in column group\" insertion mode\n//------------------------------------------------------------------\nfunction startTagInColumnGroup(p, token) {\n  switch (token.tagID) {\n    case $.HTML:\n      {\n        startTagInBody(p, token);\n        break;\n      }\n    case $.COL:\n      {\n        p._appendElement(token, NS.HTML);\n        token.ackSelfClosing = true;\n        break;\n      }\n    case $.TEMPLATE:\n      {\n        startTagInHead(p, token);\n        break;\n      }\n    default:\n      {\n        tokenInColumnGroup(p, token);\n      }\n  }\n}\nfunction endTagInColumnGroup(p, token) {\n  switch (token.tagID) {\n    case $.COLGROUP:\n      {\n        if (p.openElements.currentTagId === $.COLGROUP) {\n          p.openElements.pop();\n          p.insertionMode = InsertionMode.IN_TABLE;\n        }\n        break;\n      }\n    case $.TEMPLATE:\n      {\n        templateEndTagInHead(p, token);\n        break;\n      }\n    case $.COL:\n      {\n        // Ignore token\n        break;\n      }\n    default:\n      {\n        tokenInColumnGroup(p, token);\n      }\n  }\n}\nfunction tokenInColumnGroup(p, token) {\n  if (p.openElements.currentTagId === $.COLGROUP) {\n    p.openElements.pop();\n    p.insertionMode = InsertionMode.IN_TABLE;\n    p._processToken(token);\n  }\n}\n// The \"in table body\" insertion mode\n//------------------------------------------------------------------\nfunction startTagInTableBody(p, token) {\n  switch (token.tagID) {\n    case $.TR:\n      {\n        p.openElements.clearBackToTableBodyContext();\n        p._insertElement(token, NS.HTML);\n        p.insertionMode = InsertionMode.IN_ROW;\n        break;\n      }\n    case $.TH:\n    case $.TD:\n      {\n        p.openElements.clearBackToTableBodyContext();\n        p._insertFakeElement(TN.TR, $.TR);\n        p.insertionMode = InsertionMode.IN_ROW;\n        startTagInRow(p, token);\n        break;\n      }\n    case $.CAPTION:\n    case $.COL:\n    case $.COLGROUP:\n    case $.TBODY:\n    case $.TFOOT:\n    case $.THEAD:\n      {\n        if (p.openElements.hasTableBodyContextInTableScope()) {\n          p.openElements.clearBackToTableBodyContext();\n          p.openElements.pop();\n          p.insertionMode = InsertionMode.IN_TABLE;\n          startTagInTable(p, token);\n        }\n        break;\n      }\n    default:\n      {\n        startTagInTable(p, token);\n      }\n  }\n}\nfunction endTagInTableBody(p, token) {\n  const tn = token.tagID;\n  switch (token.tagID) {\n    case $.TBODY:\n    case $.TFOOT:\n    case $.THEAD:\n      {\n        if (p.openElements.hasInTableScope(tn)) {\n          p.openElements.clearBackToTableBodyContext();\n          p.openElements.pop();\n          p.insertionMode = InsertionMode.IN_TABLE;\n        }\n        break;\n      }\n    case $.TABLE:\n      {\n        if (p.openElements.hasTableBodyContextInTableScope()) {\n          p.openElements.clearBackToTableBodyContext();\n          p.openElements.pop();\n          p.insertionMode = InsertionMode.IN_TABLE;\n          endTagInTable(p, token);\n        }\n        break;\n      }\n    case $.BODY:\n    case $.CAPTION:\n    case $.COL:\n    case $.COLGROUP:\n    case $.HTML:\n    case $.TD:\n    case $.TH:\n    case $.TR:\n      {\n        // Ignore token\n        break;\n      }\n    default:\n      {\n        endTagInTable(p, token);\n      }\n  }\n}\n// The \"in row\" insertion mode\n//------------------------------------------------------------------\nfunction startTagInRow(p, token) {\n  switch (token.tagID) {\n    case $.TH:\n    case $.TD:\n      {\n        p.openElements.clearBackToTableRowContext();\n        p._insertElement(token, NS.HTML);\n        p.insertionMode = InsertionMode.IN_CELL;\n        p.activeFormattingElements.insertMarker();\n        break;\n      }\n    case $.CAPTION:\n    case $.COL:\n    case $.COLGROUP:\n    case $.TBODY:\n    case $.TFOOT:\n    case $.THEAD:\n    case $.TR:\n      {\n        if (p.openElements.hasInTableScope($.TR)) {\n          p.openElements.clearBackToTableRowContext();\n          p.openElements.pop();\n          p.insertionMode = InsertionMode.IN_TABLE_BODY;\n          startTagInTableBody(p, token);\n        }\n        break;\n      }\n    default:\n      {\n        startTagInTable(p, token);\n      }\n  }\n}\nfunction endTagInRow(p, token) {\n  switch (token.tagID) {\n    case $.TR:\n      {\n        if (p.openElements.hasInTableScope($.TR)) {\n          p.openElements.clearBackToTableRowContext();\n          p.openElements.pop();\n          p.insertionMode = InsertionMode.IN_TABLE_BODY;\n        }\n        break;\n      }\n    case $.TABLE:\n      {\n        if (p.openElements.hasInTableScope($.TR)) {\n          p.openElements.clearBackToTableRowContext();\n          p.openElements.pop();\n          p.insertionMode = InsertionMode.IN_TABLE_BODY;\n          endTagInTableBody(p, token);\n        }\n        break;\n      }\n    case $.TBODY:\n    case $.TFOOT:\n    case $.THEAD:\n      {\n        if (p.openElements.hasInTableScope(token.tagID) || p.openElements.hasInTableScope($.TR)) {\n          p.openElements.clearBackToTableRowContext();\n          p.openElements.pop();\n          p.insertionMode = InsertionMode.IN_TABLE_BODY;\n          endTagInTableBody(p, token);\n        }\n        break;\n      }\n    case $.BODY:\n    case $.CAPTION:\n    case $.COL:\n    case $.COLGROUP:\n    case $.HTML:\n    case $.TD:\n    case $.TH:\n      {\n        // Ignore end tag\n        break;\n      }\n    default:\n      {\n        endTagInTable(p, token);\n      }\n  }\n}\n// The \"in cell\" insertion mode\n//------------------------------------------------------------------\nfunction startTagInCell(p, token) {\n  const tn = token.tagID;\n  if (TABLE_VOID_ELEMENTS.has(tn)) {\n    if (p.openElements.hasInTableScope($.TD) || p.openElements.hasInTableScope($.TH)) {\n      p._closeTableCell();\n      startTagInRow(p, token);\n    }\n  } else {\n    startTagInBody(p, token);\n  }\n}\nfunction endTagInCell(p, token) {\n  const tn = token.tagID;\n  switch (tn) {\n    case $.TD:\n    case $.TH:\n      {\n        if (p.openElements.hasInTableScope(tn)) {\n          p.openElements.generateImpliedEndTags();\n          p.openElements.popUntilTagNamePopped(tn);\n          p.activeFormattingElements.clearToLastMarker();\n          p.insertionMode = InsertionMode.IN_ROW;\n        }\n        break;\n      }\n    case $.TABLE:\n    case $.TBODY:\n    case $.TFOOT:\n    case $.THEAD:\n    case $.TR:\n      {\n        if (p.openElements.hasInTableScope(tn)) {\n          p._closeTableCell();\n          endTagInRow(p, token);\n        }\n        break;\n      }\n    case $.BODY:\n    case $.CAPTION:\n    case $.COL:\n    case $.COLGROUP:\n    case $.HTML:\n      {\n        // Ignore token\n        break;\n      }\n    default:\n      {\n        endTagInBody(p, token);\n      }\n  }\n}\n// The \"in select\" insertion mode\n//------------------------------------------------------------------\nfunction startTagInSelect(p, token) {\n  switch (token.tagID) {\n    case $.HTML:\n      {\n        startTagInBody(p, token);\n        break;\n      }\n    case $.OPTION:\n      {\n        if (p.openElements.currentTagId === $.OPTION) {\n          p.openElements.pop();\n        }\n        p._insertElement(token, NS.HTML);\n        break;\n      }\n    case $.OPTGROUP:\n      {\n        if (p.openElements.currentTagId === $.OPTION) {\n          p.openElements.pop();\n        }\n        if (p.openElements.currentTagId === $.OPTGROUP) {\n          p.openElements.pop();\n        }\n        p._insertElement(token, NS.HTML);\n        break;\n      }\n    case $.HR:\n      {\n        if (p.openElements.currentTagId === $.OPTION) {\n          p.openElements.pop();\n        }\n        if (p.openElements.currentTagId === $.OPTGROUP) {\n          p.openElements.pop();\n        }\n        p._appendElement(token, NS.HTML);\n        token.ackSelfClosing = true;\n        break;\n      }\n    case $.INPUT:\n    case $.KEYGEN:\n    case $.TEXTAREA:\n    case $.SELECT:\n      {\n        if (p.openElements.hasInSelectScope($.SELECT)) {\n          p.openElements.popUntilTagNamePopped($.SELECT);\n          p._resetInsertionMode();\n          if (token.tagID !== $.SELECT) {\n            p._processStartTag(token);\n          }\n        }\n        break;\n      }\n    case $.SCRIPT:\n    case $.TEMPLATE:\n      {\n        startTagInHead(p, token);\n        break;\n      }\n    default:\n    // Do nothing\n  }\n}\nfunction endTagInSelect(p, token) {\n  switch (token.tagID) {\n    case $.OPTGROUP:\n      {\n        if (p.openElements.stackTop > 0 && p.openElements.currentTagId === $.OPTION && p.openElements.tagIDs[p.openElements.stackTop - 1] === $.OPTGROUP) {\n          p.openElements.pop();\n        }\n        if (p.openElements.currentTagId === $.OPTGROUP) {\n          p.openElements.pop();\n        }\n        break;\n      }\n    case $.OPTION:\n      {\n        if (p.openElements.currentTagId === $.OPTION) {\n          p.openElements.pop();\n        }\n        break;\n      }\n    case $.SELECT:\n      {\n        if (p.openElements.hasInSelectScope($.SELECT)) {\n          p.openElements.popUntilTagNamePopped($.SELECT);\n          p._resetInsertionMode();\n        }\n        break;\n      }\n    case $.TEMPLATE:\n      {\n        templateEndTagInHead(p, token);\n        break;\n      }\n    default:\n    // Do nothing\n  }\n}\n// The \"in select in table\" insertion mode\n//------------------------------------------------------------------\nfunction startTagInSelectInTable(p, token) {\n  const tn = token.tagID;\n  if (tn === $.CAPTION || tn === $.TABLE || tn === $.TBODY || tn === $.TFOOT || tn === $.THEAD || tn === $.TR || tn === $.TD || tn === $.TH) {\n    p.openElements.popUntilTagNamePopped($.SELECT);\n    p._resetInsertionMode();\n    p._processStartTag(token);\n  } else {\n    startTagInSelect(p, token);\n  }\n}\nfunction endTagInSelectInTable(p, token) {\n  const tn = token.tagID;\n  if (tn === $.CAPTION || tn === $.TABLE || tn === $.TBODY || tn === $.TFOOT || tn === $.THEAD || tn === $.TR || tn === $.TD || tn === $.TH) {\n    if (p.openElements.hasInTableScope(tn)) {\n      p.openElements.popUntilTagNamePopped($.SELECT);\n      p._resetInsertionMode();\n      p.onEndTag(token);\n    }\n  } else {\n    endTagInSelect(p, token);\n  }\n}\n// The \"in template\" insertion mode\n//------------------------------------------------------------------\nfunction startTagInTemplate(p, token) {\n  switch (token.tagID) {\n    // First, handle tags that can start without a mode change\n    case $.BASE:\n    case $.BASEFONT:\n    case $.BGSOUND:\n    case $.LINK:\n    case $.META:\n    case $.NOFRAMES:\n    case $.SCRIPT:\n    case $.STYLE:\n    case $.TEMPLATE:\n    case $.TITLE:\n      {\n        startTagInHead(p, token);\n        break;\n      }\n    // Re-process the token in the appropriate mode\n    case $.CAPTION:\n    case $.COLGROUP:\n    case $.TBODY:\n    case $.TFOOT:\n    case $.THEAD:\n      {\n        p.tmplInsertionModeStack[0] = InsertionMode.IN_TABLE;\n        p.insertionMode = InsertionMode.IN_TABLE;\n        startTagInTable(p, token);\n        break;\n      }\n    case $.COL:\n      {\n        p.tmplInsertionModeStack[0] = InsertionMode.IN_COLUMN_GROUP;\n        p.insertionMode = InsertionMode.IN_COLUMN_GROUP;\n        startTagInColumnGroup(p, token);\n        break;\n      }\n    case $.TR:\n      {\n        p.tmplInsertionModeStack[0] = InsertionMode.IN_TABLE_BODY;\n        p.insertionMode = InsertionMode.IN_TABLE_BODY;\n        startTagInTableBody(p, token);\n        break;\n      }\n    case $.TD:\n    case $.TH:\n      {\n        p.tmplInsertionModeStack[0] = InsertionMode.IN_ROW;\n        p.insertionMode = InsertionMode.IN_ROW;\n        startTagInRow(p, token);\n        break;\n      }\n    default:\n      {\n        p.tmplInsertionModeStack[0] = InsertionMode.IN_BODY;\n        p.insertionMode = InsertionMode.IN_BODY;\n        startTagInBody(p, token);\n      }\n  }\n}\nfunction endTagInTemplate(p, token) {\n  if (token.tagID === $.TEMPLATE) {\n    templateEndTagInHead(p, token);\n  }\n}\nfunction eofInTemplate(p, token) {\n  if (p.openElements.tmplCount > 0) {\n    p.openElements.popUntilTagNamePopped($.TEMPLATE);\n    p.activeFormattingElements.clearToLastMarker();\n    p.tmplInsertionModeStack.shift();\n    p._resetInsertionMode();\n    p.onEof(token);\n  } else {\n    stopParsing(p, token);\n  }\n}\n// The \"after body\" insertion mode\n//------------------------------------------------------------------\nfunction startTagAfterBody(p, token) {\n  if (token.tagID === $.HTML) {\n    startTagInBody(p, token);\n  } else {\n    tokenAfterBody(p, token);\n  }\n}\nfunction endTagAfterBody(p, token) {\n  var _a;\n  if (token.tagID === $.HTML) {\n    if (!p.fragmentContext) {\n      p.insertionMode = InsertionMode.AFTER_AFTER_BODY;\n    }\n    //NOTE: <html> is never popped from the stack, so we need to updated\n    //the end location explicitly.\n    if (p.options.sourceCodeLocationInfo && p.openElements.tagIDs[0] === $.HTML) {\n      p._setEndLocation(p.openElements.items[0], token);\n      // Update the body element, if it doesn't have an end tag\n      const bodyElement = p.openElements.items[1];\n      if (bodyElement && !((_a = p.treeAdapter.getNodeSourceCodeLocation(bodyElement)) === null || _a === void 0 ? void 0 : _a.endTag)) {\n        p._setEndLocation(bodyElement, token);\n      }\n    }\n  } else {\n    tokenAfterBody(p, token);\n  }\n}\nfunction tokenAfterBody(p, token) {\n  p.insertionMode = InsertionMode.IN_BODY;\n  modeInBody(p, token);\n}\n// The \"in frameset\" insertion mode\n//------------------------------------------------------------------\nfunction startTagInFrameset(p, token) {\n  switch (token.tagID) {\n    case $.HTML:\n      {\n        startTagInBody(p, token);\n        break;\n      }\n    case $.FRAMESET:\n      {\n        p._insertElement(token, NS.HTML);\n        break;\n      }\n    case $.FRAME:\n      {\n        p._appendElement(token, NS.HTML);\n        token.ackSelfClosing = true;\n        break;\n      }\n    case $.NOFRAMES:\n      {\n        startTagInHead(p, token);\n        break;\n      }\n    default:\n    // Do nothing\n  }\n}\nfunction endTagInFrameset(p, token) {\n  if (token.tagID === $.FRAMESET && !p.openElements.isRootHtmlElementCurrent()) {\n    p.openElements.pop();\n    if (!p.fragmentContext && p.openElements.currentTagId !== $.FRAMESET) {\n      p.insertionMode = InsertionMode.AFTER_FRAMESET;\n    }\n  }\n}\n// The \"after frameset\" insertion mode\n//------------------------------------------------------------------\nfunction startTagAfterFrameset(p, token) {\n  switch (token.tagID) {\n    case $.HTML:\n      {\n        startTagInBody(p, token);\n        break;\n      }\n    case $.NOFRAMES:\n      {\n        startTagInHead(p, token);\n        break;\n      }\n    default:\n    // Do nothing\n  }\n}\nfunction endTagAfterFrameset(p, token) {\n  if (token.tagID === $.HTML) {\n    p.insertionMode = InsertionMode.AFTER_AFTER_FRAMESET;\n  }\n}\n// The \"after after body\" insertion mode\n//------------------------------------------------------------------\nfunction startTagAfterAfterBody(p, token) {\n  if (token.tagID === $.HTML) {\n    startTagInBody(p, token);\n  } else {\n    tokenAfterAfterBody(p, token);\n  }\n}\nfunction tokenAfterAfterBody(p, token) {\n  p.insertionMode = InsertionMode.IN_BODY;\n  modeInBody(p, token);\n}\n// The \"after after frameset\" insertion mode\n//------------------------------------------------------------------\nfunction startTagAfterAfterFrameset(p, token) {\n  switch (token.tagID) {\n    case $.HTML:\n      {\n        startTagInBody(p, token);\n        break;\n      }\n    case $.NOFRAMES:\n      {\n        startTagInHead(p, token);\n        break;\n      }\n    default:\n    // Do nothing\n  }\n}\n// The rules for parsing tokens in foreign content\n//------------------------------------------------------------------\nfunction nullCharacterInForeignContent(p, token) {\n  token.chars = unicode.REPLACEMENT_CHARACTER;\n  p._insertCharacters(token);\n}\nfunction characterInForeignContent(p, token) {\n  p._insertCharacters(token);\n  p.framesetOk = false;\n}\nfunction popUntilHtmlOrIntegrationPoint(p) {\n  while (p.treeAdapter.getNamespaceURI(p.openElements.current) !== NS.HTML && !p._isIntegrationPoint(p.openElements.currentTagId, p.openElements.current)) {\n    p.openElements.pop();\n  }\n}\nfunction startTagInForeignContent(p, token) {\n  if (foreignContent.causesExit(token)) {\n    popUntilHtmlOrIntegrationPoint(p);\n    p._startTagOutsideForeignContent(token);\n  } else {\n    const current = p._getAdjustedCurrentElement();\n    const currentNs = p.treeAdapter.getNamespaceURI(current);\n    if (currentNs === NS.MATHML) {\n      foreignContent.adjustTokenMathMLAttrs(token);\n    } else if (currentNs === NS.SVG) {\n      foreignContent.adjustTokenSVGTagName(token);\n      foreignContent.adjustTokenSVGAttrs(token);\n    }\n    foreignContent.adjustTokenXMLAttrs(token);\n    if (token.selfClosing) {\n      p._appendElement(token, currentNs);\n    } else {\n      p._insertElement(token, currentNs);\n    }\n    token.ackSelfClosing = true;\n  }\n}\nfunction endTagInForeignContent(p, token) {\n  if (token.tagID === $.P || token.tagID === $.BR) {\n    popUntilHtmlOrIntegrationPoint(p);\n    p._endTagOutsideForeignContent(token);\n    return;\n  }\n  for (let i = p.openElements.stackTop; i > 0; i--) {\n    const element = p.openElements.items[i];\n    if (p.treeAdapter.getNamespaceURI(element) === NS.HTML) {\n      p._endTagOutsideForeignContent(token);\n      break;\n    }\n    const tagName = p.treeAdapter.getTagName(element);\n    if (tagName.toLowerCase() === token.tagName) {\n      //NOTE: update the token tag name for `_setEndLocation`.\n      token.tagName = tagName;\n      p.openElements.shortenToLength(i);\n      break;\n    }\n  }\n}", "import { TAG_NAMES as $, NS, hasUnescapedText } from '../common/html.js';\nimport { escapeText, escapeAttribute } from 'entities/lib/escape.js';\nimport { defaultTreeAdapter } from '../tree-adapters/default.js';\n// Sets\nconst VOID_ELEMENTS = new Set([$.AREA, $.BASE, $.BASEFONT, $.BGSOUND, $.BR, $.COL, $.EMBED, $.FRAME, $.HR, $.IMG, $.INPUT, $.KEYGEN, $.LINK, $.META, $.PARAM, $.SOURCE, $.TRACK, $.WBR]);\nfunction isVoidElement(node, options) {\n  return options.treeAdapter.isElementNode(node) && options.treeAdapter.getNamespaceURI(node) === NS.HTML && VOID_ELEMENTS.has(options.treeAdapter.getTagName(node));\n}\nconst defaultOpts = {\n  treeAdapter: defaultTreeAdapter,\n  scriptingEnabled: true\n};\n/**\n * Serializes an AST node to an HTML string.\n *\n * @example\n *\n * ```js\n * const parse5 = require('parse5');\n *\n * const document = parse5.parse('<!DOCTYPE html><html><head></head><body>Hi there!</body></html>');\n *\n * // Serializes a document.\n * const html = parse5.serialize(document);\n *\n * // Serializes the <html> element content.\n * const str = parse5.serialize(document.childNodes[1]);\n *\n * console.log(str); //> '<head></head><body>Hi there!</body>'\n * ```\n *\n * @param node Node to serialize.\n * @param options Serialization options.\n */\nexport function serialize(node, options) {\n  const opts = {\n    ...defaultOpts,\n    ...options\n  };\n  if (isVoidElement(node, opts)) {\n    return '';\n  }\n  return serializeChildNodes(node, opts);\n}\n/**\n * Serializes an AST element node to an HTML string, including the element node.\n *\n * @example\n *\n * ```js\n * const parse5 = require('parse5');\n *\n * const document = parse5.parseFragment('<div>Hello, <b>world</b>!</div>');\n *\n * // Serializes the <div> element.\n * const str = parse5.serializeOuter(document.childNodes[0]);\n *\n * console.log(str); //> '<div>Hello, <b>world</b>!</div>'\n * ```\n *\n * @param node Node to serialize.\n * @param options Serialization options.\n */\nexport function serializeOuter(node, options) {\n  const opts = {\n    ...defaultOpts,\n    ...options\n  };\n  return serializeNode(node, opts);\n}\nfunction serializeChildNodes(parentNode, options) {\n  let html = '';\n  // Get container of the child nodes\n  const container = options.treeAdapter.isElementNode(parentNode) && options.treeAdapter.getTagName(parentNode) === $.TEMPLATE && options.treeAdapter.getNamespaceURI(parentNode) === NS.HTML ? options.treeAdapter.getTemplateContent(parentNode) : parentNode;\n  const childNodes = options.treeAdapter.getChildNodes(container);\n  if (childNodes) {\n    for (const currentNode of childNodes) {\n      html += serializeNode(currentNode, options);\n    }\n  }\n  return html;\n}\nfunction serializeNode(node, options) {\n  if (options.treeAdapter.isElementNode(node)) {\n    return serializeElement(node, options);\n  }\n  if (options.treeAdapter.isTextNode(node)) {\n    return serializeTextNode(node, options);\n  }\n  if (options.treeAdapter.isCommentNode(node)) {\n    return serializeCommentNode(node, options);\n  }\n  if (options.treeAdapter.isDocumentTypeNode(node)) {\n    return serializeDocumentTypeNode(node, options);\n  }\n  // Return an empty string for unknown nodes\n  return '';\n}\nfunction serializeElement(node, options) {\n  const tn = options.treeAdapter.getTagName(node);\n  return `<${tn}${serializeAttributes(node, options)}>${isVoidElement(node, options) ? '' : `${serializeChildNodes(node, options)}</${tn}>`}`;\n}\nfunction serializeAttributes(node, {\n  treeAdapter\n}) {\n  let html = '';\n  for (const attr of treeAdapter.getAttrList(node)) {\n    html += ' ';\n    if (attr.namespace) {\n      switch (attr.namespace) {\n        case NS.XML:\n          {\n            html += `xml:${attr.name}`;\n            break;\n          }\n        case NS.XMLNS:\n          {\n            if (attr.name !== 'xmlns') {\n              html += 'xmlns:';\n            }\n            html += attr.name;\n            break;\n          }\n        case NS.XLINK:\n          {\n            html += `xlink:${attr.name}`;\n            break;\n          }\n        default:\n          {\n            html += `${attr.prefix}:${attr.name}`;\n          }\n      }\n    } else {\n      html += attr.name;\n    }\n    html += `=\"${escapeAttribute(attr.value)}\"`;\n  }\n  return html;\n}\nfunction serializeTextNode(node, options) {\n  const {\n    treeAdapter\n  } = options;\n  const content = treeAdapter.getTextNodeContent(node);\n  const parent = treeAdapter.getParentNode(node);\n  const parentTn = parent && treeAdapter.isElementNode(parent) && treeAdapter.getTagName(parent);\n  return parentTn && treeAdapter.getNamespaceURI(parent) === NS.HTML && hasUnescapedText(parentTn, options.scriptingEnabled) ? content : escapeText(content);\n}\nfunction serializeCommentNode(node, {\n  treeAdapter\n}) {\n  return `<!--${treeAdapter.getCommentNodeContent(node)}-->`;\n}\nfunction serializeDocumentTypeNode(node, {\n  treeAdapter\n}) {\n  return `<!DOCTYPE ${treeAdapter.getDocumentTypeNodeName(node)}>`;\n}", "import { Parser } from './parser/index.js';\nexport { defaultTreeAdapter } from './tree-adapters/default.js';\nexport { /** @internal */Parser } from './parser/index.js';\nexport { serialize, serializeOuter } from './serializer/index.js';\nexport { ERR as ErrorCodes } from './common/error-codes.js';\n/** @internal */\nexport * as foreignContent from './common/foreign-content.js';\nexport * as html from './common/html.js';\nexport * as Token from './common/token.js';\n/** @internal */\nexport { Tokenizer, TokenizerMode } from './tokenizer/index.js';\n// Shorthands\n/**\n * Parses an HTML string.\n *\n * @param html Input HTML string.\n * @param options Parsing options.\n * @returns Document\n *\n * @example\n *\n * ```js\n * const parse5 = require('parse5');\n *\n * const document = parse5.parse('<!DOCTYPE html><html><head></head><body>Hi there!</body></html>');\n *\n * console.log(document.childNodes[1].tagName); //> 'html'\n *```\n */\nexport function parse(html, options) {\n  return Parser.parse(html, options);\n}\nexport function parseFragment(fragmentContext, html, options) {\n  if (typeof fragmentContext === 'string') {\n    options = html;\n    html = fragmentContext;\n    fragmentContext = null;\n  }\n  const parser = Parser.getFragmentParser(fragmentContext, options);\n  parser.tokenizer.write(html, true);\n  return parser.getFragment();\n}", "import { html } from 'parse5';\nimport { Element, Document, ProcessingInstruction, Comment, Text, isDirective, isText, isComment, isTag } from 'domhandler';\nfunction enquoteDoctypeId(id) {\n  const quote = id.includes('\"') ? \"'\" : '\"';\n  return quote + id + quote;\n}\n/** @internal */\nexport function serializeDoctypeContent(name, publicId, systemId) {\n  let str = '!DOCTYPE ';\n  if (name) {\n    str += name;\n  }\n  if (publicId) {\n    str += ` PUBLIC ${enquoteDoctypeId(publicId)}`;\n  } else if (systemId) {\n    str += ' SYSTEM';\n  }\n  if (systemId) {\n    str += ` ${enquoteDoctypeId(systemId)}`;\n  }\n  return str;\n}\nexport const adapter = {\n  // Re-exports from domhandler\n  isCommentNode: isComment,\n  isElementNode: isTag,\n  isTextNode: isText,\n  //Node construction\n  createDocument() {\n    const node = new Document([]);\n    node['x-mode'] = html.DOCUMENT_MODE.NO_QUIRKS;\n    return node;\n  },\n  createDocumentFragment() {\n    return new Document([]);\n  },\n  createElement(tagName, namespaceURI, attrs) {\n    const attribs = Object.create(null);\n    const attribsNamespace = Object.create(null);\n    const attribsPrefix = Object.create(null);\n    for (let i = 0; i < attrs.length; i++) {\n      const attrName = attrs[i].name;\n      attribs[attrName] = attrs[i].value;\n      attribsNamespace[attrName] = attrs[i].namespace;\n      attribsPrefix[attrName] = attrs[i].prefix;\n    }\n    const node = new Element(tagName, attribs, []);\n    node.namespace = namespaceURI;\n    node['x-attribsNamespace'] = attribsNamespace;\n    node['x-attribsPrefix'] = attribsPrefix;\n    return node;\n  },\n  createCommentNode(data) {\n    return new Comment(data);\n  },\n  createTextNode(value) {\n    return new Text(value);\n  },\n  //Tree mutation\n  appendChild(parentNode, newNode) {\n    const prev = parentNode.children[parentNode.children.length - 1];\n    if (prev) {\n      prev.next = newNode;\n      newNode.prev = prev;\n    }\n    parentNode.children.push(newNode);\n    newNode.parent = parentNode;\n  },\n  insertBefore(parentNode, newNode, referenceNode) {\n    const insertionIdx = parentNode.children.indexOf(referenceNode);\n    const {\n      prev\n    } = referenceNode;\n    if (prev) {\n      prev.next = newNode;\n      newNode.prev = prev;\n    }\n    referenceNode.prev = newNode;\n    newNode.next = referenceNode;\n    parentNode.children.splice(insertionIdx, 0, newNode);\n    newNode.parent = parentNode;\n  },\n  setTemplateContent(templateElement, contentElement) {\n    adapter.appendChild(templateElement, contentElement);\n  },\n  getTemplateContent(templateElement) {\n    return templateElement.children[0];\n  },\n  setDocumentType(document, name, publicId, systemId) {\n    const data = serializeDoctypeContent(name, publicId, systemId);\n    let doctypeNode = document.children.find(node => isDirective(node) && node.name === '!doctype');\n    if (doctypeNode) {\n      doctypeNode.data = data !== null && data !== void 0 ? data : null;\n    } else {\n      doctypeNode = new ProcessingInstruction('!doctype', data);\n      adapter.appendChild(document, doctypeNode);\n    }\n    doctypeNode['x-name'] = name;\n    doctypeNode['x-publicId'] = publicId;\n    doctypeNode['x-systemId'] = systemId;\n  },\n  setDocumentMode(document, mode) {\n    document['x-mode'] = mode;\n  },\n  getDocumentMode(document) {\n    return document['x-mode'];\n  },\n  detachNode(node) {\n    if (node.parent) {\n      const idx = node.parent.children.indexOf(node);\n      const {\n        prev,\n        next\n      } = node;\n      node.prev = null;\n      node.next = null;\n      if (prev) {\n        prev.next = next;\n      }\n      if (next) {\n        next.prev = prev;\n      }\n      node.parent.children.splice(idx, 1);\n      node.parent = null;\n    }\n  },\n  insertText(parentNode, text) {\n    const lastChild = parentNode.children[parentNode.children.length - 1];\n    if (lastChild && isText(lastChild)) {\n      lastChild.data += text;\n    } else {\n      adapter.appendChild(parentNode, adapter.createTextNode(text));\n    }\n  },\n  insertTextBefore(parentNode, text, referenceNode) {\n    const prevNode = parentNode.children[parentNode.children.indexOf(referenceNode) - 1];\n    if (prevNode && isText(prevNode)) {\n      prevNode.data += text;\n    } else {\n      adapter.insertBefore(parentNode, adapter.createTextNode(text), referenceNode);\n    }\n  },\n  adoptAttributes(recipient, attrs) {\n    for (let i = 0; i < attrs.length; i++) {\n      const attrName = attrs[i].name;\n      if (recipient.attribs[attrName] === undefined) {\n        recipient.attribs[attrName] = attrs[i].value;\n        recipient['x-attribsNamespace'][attrName] = attrs[i].namespace;\n        recipient['x-attribsPrefix'][attrName] = attrs[i].prefix;\n      }\n    }\n  },\n  //Tree traversing\n  getFirstChild(node) {\n    return node.children[0];\n  },\n  getChildNodes(node) {\n    return node.children;\n  },\n  getParentNode(node) {\n    return node.parent;\n  },\n  getAttrList(element) {\n    return element.attributes;\n  },\n  //Node data\n  getTagName(element) {\n    return element.name;\n  },\n  getNamespaceURI(element) {\n    return element.namespace;\n  },\n  getTextNodeContent(textNode) {\n    return textNode.data;\n  },\n  getCommentNodeContent(commentNode) {\n    return commentNode.data;\n  },\n  getDocumentTypeNodeName(doctypeNode) {\n    var _a;\n    return (_a = doctypeNode['x-name']) !== null && _a !== void 0 ? _a : '';\n  },\n  getDocumentTypeNodePublicId(doctypeNode) {\n    var _a;\n    return (_a = doctypeNode['x-publicId']) !== null && _a !== void 0 ? _a : '';\n  },\n  getDocumentTypeNodeSystemId(doctypeNode) {\n    var _a;\n    return (_a = doctypeNode['x-systemId']) !== null && _a !== void 0 ? _a : '';\n  },\n  //Node types\n  isDocumentTypeNode(node) {\n    return isDirective(node) && node.name === '!doctype';\n  },\n  // Source code location\n  setNodeSourceCodeLocation(node, location) {\n    if (location) {\n      node.startIndex = location.startOffset;\n      node.endIndex = location.endOffset;\n    }\n    node.sourceCodeLocation = location;\n  },\n  getNodeSourceCodeLocation(node) {\n    return node.sourceCodeLocation;\n  },\n  updateNodeSourceCodeLocation(node, endLocation) {\n    if (endLocation.endOffset != null) node.endIndex = endLocation.endOffset;\n    node.sourceCodeLocation = {\n      ...node.sourceCodeLocation,\n      ...endLocation\n    };\n  }\n};", "import { isDocument } from 'domhandler';\nimport { parse as parseDocument, parseFragment, serializeOuter } from 'parse5';\nimport { adapter as htmlparser2Adapter } from 'parse5-htmlparser2-tree-adapter';\n/**\n * Parse the content with `parse5` in the context of the given `ParentNode`.\n *\n * @param content - The content to parse.\n * @param options - A set of options to use to parse.\n * @param isDocument - Whether to parse the content as a full HTML document.\n * @param context - The context in which to parse the content.\n * @returns The parsed content.\n */\nexport function parseWithParse5(content, options, isDocument, context) {\n  var _a;\n  (_a = options.treeAdapter) !== null && _a !== void 0 ? _a : options.treeAdapter = htmlparser2Adapter;\n  if (options.scriptingEnabled !== false) {\n    options.scriptingEnabled = true;\n  }\n  return isDocument ? parseDocument(content, options) : parseFragment(context, content, options);\n}\nconst renderOpts = {\n  treeAdapter: htmlparser2Adapter\n};\n/**\n * Renders the given DOM tree with `parse5` and returns the result as a string.\n *\n * @param dom - The DOM tree to render.\n * @returns The rendered document.\n */\nexport function renderWithParse5(dom) {\n  /*\n   * `dom-serializer` passes over the special \"root\" node and renders the\n   * node's children in its place. To mimic this behavior with `parse5`, an\n   * equivalent operation must be applied to the input array.\n   */\n  const nodes = 'length' in dom ? dom : [dom];\n  for (let index = 0; index < nodes.length; index += 1) {\n    const node = nodes[index];\n    if (isDocument(node)) {\n      Array.prototype.splice.call(nodes, index, 1, ...node.children);\n    }\n  }\n  let result = '';\n  for (let index = 0; index < nodes.length; index += 1) {\n    const node = nodes[index];\n    result += serializeOuter(node, renderOpts);\n  }\n  return result;\n}\n", "import { EntityDecoder, DecodingMode, htmlDecodeTree, xmlDecodeTree } from \"entities/lib/decode.js\";\nvar CharCodes;\n(function (CharCodes) {\n  CharCodes[CharCodes[\"Tab\"] = 9] = \"Tab\";\n  CharCodes[CharCodes[\"NewLine\"] = 10] = \"NewLine\";\n  CharCodes[CharCodes[\"FormFeed\"] = 12] = \"FormFeed\";\n  CharCodes[CharCodes[\"CarriageReturn\"] = 13] = \"CarriageReturn\";\n  CharCodes[CharCodes[\"Space\"] = 32] = \"Space\";\n  CharCodes[CharCodes[\"ExclamationMark\"] = 33] = \"ExclamationMark\";\n  CharCodes[CharCodes[\"Number\"] = 35] = \"Number\";\n  CharCodes[CharCodes[\"Amp\"] = 38] = \"Amp\";\n  CharCodes[CharCodes[\"SingleQuote\"] = 39] = \"SingleQuote\";\n  CharCodes[CharCodes[\"DoubleQuote\"] = 34] = \"DoubleQuote\";\n  CharCodes[CharCodes[\"Dash\"] = 45] = \"Dash\";\n  CharCodes[CharCodes[\"Slash\"] = 47] = \"Slash\";\n  CharCodes[CharCodes[\"Zero\"] = 48] = \"Zero\";\n  CharCodes[CharCodes[\"Nine\"] = 57] = \"Nine\";\n  CharCodes[CharCodes[\"Semi\"] = 59] = \"Semi\";\n  CharCodes[CharCodes[\"Lt\"] = 60] = \"Lt\";\n  CharCodes[CharCodes[\"Eq\"] = 61] = \"Eq\";\n  CharCodes[CharCodes[\"Gt\"] = 62] = \"Gt\";\n  CharCodes[CharCodes[\"Questionmark\"] = 63] = \"Questionmark\";\n  CharCodes[CharCodes[\"UpperA\"] = 65] = \"UpperA\";\n  CharCodes[CharCodes[\"LowerA\"] = 97] = \"LowerA\";\n  CharCodes[CharCodes[\"UpperF\"] = 70] = \"UpperF\";\n  CharCodes[CharCodes[\"LowerF\"] = 102] = \"LowerF\";\n  CharCodes[CharCodes[\"UpperZ\"] = 90] = \"UpperZ\";\n  CharCodes[CharCodes[\"LowerZ\"] = 122] = \"LowerZ\";\n  CharCodes[CharCodes[\"LowerX\"] = 120] = \"LowerX\";\n  CharCodes[CharCodes[\"OpeningSquareBracket\"] = 91] = \"OpeningSquareBracket\";\n})(CharCodes || (CharCodes = {}));\n/** All the states the tokenizer can be in. */\nvar State;\n(function (State) {\n  State[State[\"Text\"] = 1] = \"Text\";\n  State[State[\"BeforeTagName\"] = 2] = \"BeforeTagName\";\n  State[State[\"InTagName\"] = 3] = \"InTagName\";\n  State[State[\"InSelfClosingTag\"] = 4] = \"InSelfClosingTag\";\n  State[State[\"BeforeClosingTagName\"] = 5] = \"BeforeClosingTagName\";\n  State[State[\"InClosingTagName\"] = 6] = \"InClosingTagName\";\n  State[State[\"AfterClosingTagName\"] = 7] = \"AfterClosingTagName\";\n  // Attributes\n  State[State[\"BeforeAttributeName\"] = 8] = \"BeforeAttributeName\";\n  State[State[\"InAttributeName\"] = 9] = \"InAttributeName\";\n  State[State[\"AfterAttributeName\"] = 10] = \"AfterAttributeName\";\n  State[State[\"BeforeAttributeValue\"] = 11] = \"BeforeAttributeValue\";\n  State[State[\"InAttributeValueDq\"] = 12] = \"InAttributeValueDq\";\n  State[State[\"InAttributeValueSq\"] = 13] = \"InAttributeValueSq\";\n  State[State[\"InAttributeValueNq\"] = 14] = \"InAttributeValueNq\";\n  // Declarations\n  State[State[\"BeforeDeclaration\"] = 15] = \"BeforeDeclaration\";\n  State[State[\"InDeclaration\"] = 16] = \"InDeclaration\";\n  // Processing instructions\n  State[State[\"InProcessingInstruction\"] = 17] = \"InProcessingInstruction\";\n  // Comments & CDATA\n  State[State[\"BeforeComment\"] = 18] = \"BeforeComment\";\n  State[State[\"CDATASequence\"] = 19] = \"CDATASequence\";\n  State[State[\"InSpecialComment\"] = 20] = \"InSpecialComment\";\n  State[State[\"InCommentLike\"] = 21] = \"InCommentLike\";\n  // Special tags\n  State[State[\"BeforeSpecialS\"] = 22] = \"BeforeSpecialS\";\n  State[State[\"BeforeSpecialT\"] = 23] = \"BeforeSpecialT\";\n  State[State[\"SpecialStartSequence\"] = 24] = \"SpecialStartSequence\";\n  State[State[\"InSpecialTag\"] = 25] = \"InSpecialTag\";\n  State[State[\"InEntity\"] = 26] = \"InEntity\";\n})(State || (State = {}));\nfunction isWhitespace(c) {\n  return c === CharCodes.Space || c === CharCodes.NewLine || c === CharCodes.Tab || c === CharCodes.FormFeed || c === CharCodes.CarriageReturn;\n}\nfunction isEndOfTagSection(c) {\n  return c === CharCodes.Slash || c === CharCodes.Gt || isWhitespace(c);\n}\nfunction isASCIIAlpha(c) {\n  return c >= CharCodes.LowerA && c <= CharCodes.LowerZ || c >= CharCodes.UpperA && c <= CharCodes.UpperZ;\n}\nexport var QuoteType;\n(function (QuoteType) {\n  QuoteType[QuoteType[\"NoValue\"] = 0] = \"NoValue\";\n  QuoteType[QuoteType[\"Unquoted\"] = 1] = \"Unquoted\";\n  QuoteType[QuoteType[\"Single\"] = 2] = \"Single\";\n  QuoteType[QuoteType[\"Double\"] = 3] = \"Double\";\n})(QuoteType || (QuoteType = {}));\n/**\n * Sequences used to match longer strings.\n *\n * We don't have `Script`, `Style`, or `Title` here. Instead, we re-use the *End\n * sequences with an increased offset.\n */\nconst Sequences = {\n  Cdata: new Uint8Array([0x43, 0x44, 0x41, 0x54, 0x41, 0x5b]),\n  // CDATA[\n  CdataEnd: new Uint8Array([0x5d, 0x5d, 0x3e]),\n  // ]]>\n  CommentEnd: new Uint8Array([0x2d, 0x2d, 0x3e]),\n  // `-->`\n  ScriptEnd: new Uint8Array([0x3c, 0x2f, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74]),\n  // `</script`\n  StyleEnd: new Uint8Array([0x3c, 0x2f, 0x73, 0x74, 0x79, 0x6c, 0x65]),\n  // `</style`\n  TitleEnd: new Uint8Array([0x3c, 0x2f, 0x74, 0x69, 0x74, 0x6c, 0x65]),\n  // `</title`\n  TextareaEnd: new Uint8Array([0x3c, 0x2f, 0x74, 0x65, 0x78, 0x74, 0x61, 0x72, 0x65, 0x61]) // `</textarea`\n};\nexport default class Tokenizer {\n  constructor({\n    xmlMode = false,\n    decodeEntities = true\n  }, cbs) {\n    this.cbs = cbs;\n    /** The current state the tokenizer is in. */\n    this.state = State.Text;\n    /** The read buffer. */\n    this.buffer = \"\";\n    /** The beginning of the section that is currently being read. */\n    this.sectionStart = 0;\n    /** The index within the buffer that we are currently looking at. */\n    this.index = 0;\n    /** The start of the last entity. */\n    this.entityStart = 0;\n    /** Some behavior, eg. when decoding entities, is done while we are in another state. This keeps track of the other state type. */\n    this.baseState = State.Text;\n    /** For special parsing behavior inside of script and style tags. */\n    this.isSpecial = false;\n    /** Indicates whether the tokenizer has been paused. */\n    this.running = true;\n    /** The offset of the current buffer. */\n    this.offset = 0;\n    this.currentSequence = undefined;\n    this.sequenceIndex = 0;\n    this.xmlMode = xmlMode;\n    this.decodeEntities = decodeEntities;\n    this.entityDecoder = new EntityDecoder(xmlMode ? xmlDecodeTree : htmlDecodeTree, (cp, consumed) => this.emitCodePoint(cp, consumed));\n  }\n  reset() {\n    this.state = State.Text;\n    this.buffer = \"\";\n    this.sectionStart = 0;\n    this.index = 0;\n    this.baseState = State.Text;\n    this.currentSequence = undefined;\n    this.running = true;\n    this.offset = 0;\n  }\n  write(chunk) {\n    this.offset += this.buffer.length;\n    this.buffer = chunk;\n    this.parse();\n  }\n  end() {\n    if (this.running) this.finish();\n  }\n  pause() {\n    this.running = false;\n  }\n  resume() {\n    this.running = true;\n    if (this.index < this.buffer.length + this.offset) {\n      this.parse();\n    }\n  }\n  stateText(c) {\n    if (c === CharCodes.Lt || !this.decodeEntities && this.fastForwardTo(CharCodes.Lt)) {\n      if (this.index > this.sectionStart) {\n        this.cbs.ontext(this.sectionStart, this.index);\n      }\n      this.state = State.BeforeTagName;\n      this.sectionStart = this.index;\n    } else if (this.decodeEntities && c === CharCodes.Amp) {\n      this.startEntity();\n    }\n  }\n  stateSpecialStartSequence(c) {\n    const isEnd = this.sequenceIndex === this.currentSequence.length;\n    const isMatch = isEnd ?\n    // If we are at the end of the sequence, make sure the tag name has ended\n    isEndOfTagSection(c) :\n    // Otherwise, do a case-insensitive comparison\n    (c | 0x20) === this.currentSequence[this.sequenceIndex];\n    if (!isMatch) {\n      this.isSpecial = false;\n    } else if (!isEnd) {\n      this.sequenceIndex++;\n      return;\n    }\n    this.sequenceIndex = 0;\n    this.state = State.InTagName;\n    this.stateInTagName(c);\n  }\n  /** Look for an end tag. For <title> tags, also decode entities. */\n  stateInSpecialTag(c) {\n    if (this.sequenceIndex === this.currentSequence.length) {\n      if (c === CharCodes.Gt || isWhitespace(c)) {\n        const endOfText = this.index - this.currentSequence.length;\n        if (this.sectionStart < endOfText) {\n          // Spoof the index so that reported locations match up.\n          const actualIndex = this.index;\n          this.index = endOfText;\n          this.cbs.ontext(this.sectionStart, endOfText);\n          this.index = actualIndex;\n        }\n        this.isSpecial = false;\n        this.sectionStart = endOfText + 2; // Skip over the `</`\n        this.stateInClosingTagName(c);\n        return; // We are done; skip the rest of the function.\n      }\n      this.sequenceIndex = 0;\n    }\n    if ((c | 0x20) === this.currentSequence[this.sequenceIndex]) {\n      this.sequenceIndex += 1;\n    } else if (this.sequenceIndex === 0) {\n      if (this.currentSequence === Sequences.TitleEnd) {\n        // We have to parse entities in <title> tags.\n        if (this.decodeEntities && c === CharCodes.Amp) {\n          this.startEntity();\n        }\n      } else if (this.fastForwardTo(CharCodes.Lt)) {\n        // Outside of <title> tags, we can fast-forward.\n        this.sequenceIndex = 1;\n      }\n    } else {\n      // If we see a `<`, set the sequence index to 1; useful for eg. `<</script>`.\n      this.sequenceIndex = Number(c === CharCodes.Lt);\n    }\n  }\n  stateCDATASequence(c) {\n    if (c === Sequences.Cdata[this.sequenceIndex]) {\n      if (++this.sequenceIndex === Sequences.Cdata.length) {\n        this.state = State.InCommentLike;\n        this.currentSequence = Sequences.CdataEnd;\n        this.sequenceIndex = 0;\n        this.sectionStart = this.index + 1;\n      }\n    } else {\n      this.sequenceIndex = 0;\n      this.state = State.InDeclaration;\n      this.stateInDeclaration(c); // Reconsume the character\n    }\n  }\n  /**\n   * When we wait for one specific character, we can speed things up\n   * by skipping through the buffer until we find it.\n   *\n   * @returns Whether the character was found.\n   */\n  fastForwardTo(c) {\n    while (++this.index < this.buffer.length + this.offset) {\n      if (this.buffer.charCodeAt(this.index - this.offset) === c) {\n        return true;\n      }\n    }\n    /*\n     * We increment the index at the end of the `parse` loop,\n     * so set it to `buffer.length - 1` here.\n     *\n     * TODO: Refactor `parse` to increment index before calling states.\n     */\n    this.index = this.buffer.length + this.offset - 1;\n    return false;\n  }\n  /**\n   * Comments and CDATA end with `-->` and `]]>`.\n   *\n   * Their common qualities are:\n   * - Their end sequences have a distinct character they start with.\n   * - That character is then repeated, so we have to check multiple repeats.\n   * - All characters but the start character of the sequence can be skipped.\n   */\n  stateInCommentLike(c) {\n    if (c === this.currentSequence[this.sequenceIndex]) {\n      if (++this.sequenceIndex === this.currentSequence.length) {\n        if (this.currentSequence === Sequences.CdataEnd) {\n          this.cbs.oncdata(this.sectionStart, this.index, 2);\n        } else {\n          this.cbs.oncomment(this.sectionStart, this.index, 2);\n        }\n        this.sequenceIndex = 0;\n        this.sectionStart = this.index + 1;\n        this.state = State.Text;\n      }\n    } else if (this.sequenceIndex === 0) {\n      // Fast-forward to the first character of the sequence\n      if (this.fastForwardTo(this.currentSequence[0])) {\n        this.sequenceIndex = 1;\n      }\n    } else if (c !== this.currentSequence[this.sequenceIndex - 1]) {\n      // Allow long sequences, eg. --->, ]]]>\n      this.sequenceIndex = 0;\n    }\n  }\n  /**\n   * HTML only allows ASCII alpha characters (a-z and A-Z) at the beginning of a tag name.\n   *\n   * XML allows a lot more characters here (@see https://www.w3.org/TR/REC-xml/#NT-NameStartChar).\n   * We allow anything that wouldn't end the tag.\n   */\n  isTagStartChar(c) {\n    return this.xmlMode ? !isEndOfTagSection(c) : isASCIIAlpha(c);\n  }\n  startSpecial(sequence, offset) {\n    this.isSpecial = true;\n    this.currentSequence = sequence;\n    this.sequenceIndex = offset;\n    this.state = State.SpecialStartSequence;\n  }\n  stateBeforeTagName(c) {\n    if (c === CharCodes.ExclamationMark) {\n      this.state = State.BeforeDeclaration;\n      this.sectionStart = this.index + 1;\n    } else if (c === CharCodes.Questionmark) {\n      this.state = State.InProcessingInstruction;\n      this.sectionStart = this.index + 1;\n    } else if (this.isTagStartChar(c)) {\n      const lower = c | 0x20;\n      this.sectionStart = this.index;\n      if (this.xmlMode) {\n        this.state = State.InTagName;\n      } else if (lower === Sequences.ScriptEnd[2]) {\n        this.state = State.BeforeSpecialS;\n      } else if (lower === Sequences.TitleEnd[2]) {\n        this.state = State.BeforeSpecialT;\n      } else {\n        this.state = State.InTagName;\n      }\n    } else if (c === CharCodes.Slash) {\n      this.state = State.BeforeClosingTagName;\n    } else {\n      this.state = State.Text;\n      this.stateText(c);\n    }\n  }\n  stateInTagName(c) {\n    if (isEndOfTagSection(c)) {\n      this.cbs.onopentagname(this.sectionStart, this.index);\n      this.sectionStart = -1;\n      this.state = State.BeforeAttributeName;\n      this.stateBeforeAttributeName(c);\n    }\n  }\n  stateBeforeClosingTagName(c) {\n    if (isWhitespace(c)) {\n      // Ignore\n    } else if (c === CharCodes.Gt) {\n      this.state = State.Text;\n    } else {\n      this.state = this.isTagStartChar(c) ? State.InClosingTagName : State.InSpecialComment;\n      this.sectionStart = this.index;\n    }\n  }\n  stateInClosingTagName(c) {\n    if (c === CharCodes.Gt || isWhitespace(c)) {\n      this.cbs.onclosetag(this.sectionStart, this.index);\n      this.sectionStart = -1;\n      this.state = State.AfterClosingTagName;\n      this.stateAfterClosingTagName(c);\n    }\n  }\n  stateAfterClosingTagName(c) {\n    // Skip everything until \">\"\n    if (c === CharCodes.Gt || this.fastForwardTo(CharCodes.Gt)) {\n      this.state = State.Text;\n      this.sectionStart = this.index + 1;\n    }\n  }\n  stateBeforeAttributeName(c) {\n    if (c === CharCodes.Gt) {\n      this.cbs.onopentagend(this.index);\n      if (this.isSpecial) {\n        this.state = State.InSpecialTag;\n        this.sequenceIndex = 0;\n      } else {\n        this.state = State.Text;\n      }\n      this.sectionStart = this.index + 1;\n    } else if (c === CharCodes.Slash) {\n      this.state = State.InSelfClosingTag;\n    } else if (!isWhitespace(c)) {\n      this.state = State.InAttributeName;\n      this.sectionStart = this.index;\n    }\n  }\n  stateInSelfClosingTag(c) {\n    if (c === CharCodes.Gt) {\n      this.cbs.onselfclosingtag(this.index);\n      this.state = State.Text;\n      this.sectionStart = this.index + 1;\n      this.isSpecial = false; // Reset special state, in case of self-closing special tags\n    } else if (!isWhitespace(c)) {\n      this.state = State.BeforeAttributeName;\n      this.stateBeforeAttributeName(c);\n    }\n  }\n  stateInAttributeName(c) {\n    if (c === CharCodes.Eq || isEndOfTagSection(c)) {\n      this.cbs.onattribname(this.sectionStart, this.index);\n      this.sectionStart = this.index;\n      this.state = State.AfterAttributeName;\n      this.stateAfterAttributeName(c);\n    }\n  }\n  stateAfterAttributeName(c) {\n    if (c === CharCodes.Eq) {\n      this.state = State.BeforeAttributeValue;\n    } else if (c === CharCodes.Slash || c === CharCodes.Gt) {\n      this.cbs.onattribend(QuoteType.NoValue, this.sectionStart);\n      this.sectionStart = -1;\n      this.state = State.BeforeAttributeName;\n      this.stateBeforeAttributeName(c);\n    } else if (!isWhitespace(c)) {\n      this.cbs.onattribend(QuoteType.NoValue, this.sectionStart);\n      this.state = State.InAttributeName;\n      this.sectionStart = this.index;\n    }\n  }\n  stateBeforeAttributeValue(c) {\n    if (c === CharCodes.DoubleQuote) {\n      this.state = State.InAttributeValueDq;\n      this.sectionStart = this.index + 1;\n    } else if (c === CharCodes.SingleQuote) {\n      this.state = State.InAttributeValueSq;\n      this.sectionStart = this.index + 1;\n    } else if (!isWhitespace(c)) {\n      this.sectionStart = this.index;\n      this.state = State.InAttributeValueNq;\n      this.stateInAttributeValueNoQuotes(c); // Reconsume token\n    }\n  }\n  handleInAttributeValue(c, quote) {\n    if (c === quote || !this.decodeEntities && this.fastForwardTo(quote)) {\n      this.cbs.onattribdata(this.sectionStart, this.index);\n      this.sectionStart = -1;\n      this.cbs.onattribend(quote === CharCodes.DoubleQuote ? QuoteType.Double : QuoteType.Single, this.index + 1);\n      this.state = State.BeforeAttributeName;\n    } else if (this.decodeEntities && c === CharCodes.Amp) {\n      this.startEntity();\n    }\n  }\n  stateInAttributeValueDoubleQuotes(c) {\n    this.handleInAttributeValue(c, CharCodes.DoubleQuote);\n  }\n  stateInAttributeValueSingleQuotes(c) {\n    this.handleInAttributeValue(c, CharCodes.SingleQuote);\n  }\n  stateInAttributeValueNoQuotes(c) {\n    if (isWhitespace(c) || c === CharCodes.Gt) {\n      this.cbs.onattribdata(this.sectionStart, this.index);\n      this.sectionStart = -1;\n      this.cbs.onattribend(QuoteType.Unquoted, this.index);\n      this.state = State.BeforeAttributeName;\n      this.stateBeforeAttributeName(c);\n    } else if (this.decodeEntities && c === CharCodes.Amp) {\n      this.startEntity();\n    }\n  }\n  stateBeforeDeclaration(c) {\n    if (c === CharCodes.OpeningSquareBracket) {\n      this.state = State.CDATASequence;\n      this.sequenceIndex = 0;\n    } else {\n      this.state = c === CharCodes.Dash ? State.BeforeComment : State.InDeclaration;\n    }\n  }\n  stateInDeclaration(c) {\n    if (c === CharCodes.Gt || this.fastForwardTo(CharCodes.Gt)) {\n      this.cbs.ondeclaration(this.sectionStart, this.index);\n      this.state = State.Text;\n      this.sectionStart = this.index + 1;\n    }\n  }\n  stateInProcessingInstruction(c) {\n    if (c === CharCodes.Gt || this.fastForwardTo(CharCodes.Gt)) {\n      this.cbs.onprocessinginstruction(this.sectionStart, this.index);\n      this.state = State.Text;\n      this.sectionStart = this.index + 1;\n    }\n  }\n  stateBeforeComment(c) {\n    if (c === CharCodes.Dash) {\n      this.state = State.InCommentLike;\n      this.currentSequence = Sequences.CommentEnd;\n      // Allow short comments (eg. <!-->)\n      this.sequenceIndex = 2;\n      this.sectionStart = this.index + 1;\n    } else {\n      this.state = State.InDeclaration;\n    }\n  }\n  stateInSpecialComment(c) {\n    if (c === CharCodes.Gt || this.fastForwardTo(CharCodes.Gt)) {\n      this.cbs.oncomment(this.sectionStart, this.index, 0);\n      this.state = State.Text;\n      this.sectionStart = this.index + 1;\n    }\n  }\n  stateBeforeSpecialS(c) {\n    const lower = c | 0x20;\n    if (lower === Sequences.ScriptEnd[3]) {\n      this.startSpecial(Sequences.ScriptEnd, 4);\n    } else if (lower === Sequences.StyleEnd[3]) {\n      this.startSpecial(Sequences.StyleEnd, 4);\n    } else {\n      this.state = State.InTagName;\n      this.stateInTagName(c); // Consume the token again\n    }\n  }\n  stateBeforeSpecialT(c) {\n    const lower = c | 0x20;\n    if (lower === Sequences.TitleEnd[3]) {\n      this.startSpecial(Sequences.TitleEnd, 4);\n    } else if (lower === Sequences.TextareaEnd[3]) {\n      this.startSpecial(Sequences.TextareaEnd, 4);\n    } else {\n      this.state = State.InTagName;\n      this.stateInTagName(c); // Consume the token again\n    }\n  }\n  startEntity() {\n    this.baseState = this.state;\n    this.state = State.InEntity;\n    this.entityStart = this.index;\n    this.entityDecoder.startEntity(this.xmlMode ? DecodingMode.Strict : this.baseState === State.Text || this.baseState === State.InSpecialTag ? DecodingMode.Legacy : DecodingMode.Attribute);\n  }\n  stateInEntity() {\n    const length = this.entityDecoder.write(this.buffer, this.index - this.offset);\n    // If `length` is positive, we are done with the entity.\n    if (length >= 0) {\n      this.state = this.baseState;\n      if (length === 0) {\n        this.index = this.entityStart;\n      }\n    } else {\n      // Mark buffer as consumed.\n      this.index = this.offset + this.buffer.length - 1;\n    }\n  }\n  /**\n   * Remove data that has already been consumed from the buffer.\n   */\n  cleanup() {\n    // If we are inside of text or attributes, emit what we already have.\n    if (this.running && this.sectionStart !== this.index) {\n      if (this.state === State.Text || this.state === State.InSpecialTag && this.sequenceIndex === 0) {\n        this.cbs.ontext(this.sectionStart, this.index);\n        this.sectionStart = this.index;\n      } else if (this.state === State.InAttributeValueDq || this.state === State.InAttributeValueSq || this.state === State.InAttributeValueNq) {\n        this.cbs.onattribdata(this.sectionStart, this.index);\n        this.sectionStart = this.index;\n      }\n    }\n  }\n  shouldContinue() {\n    return this.index < this.buffer.length + this.offset && this.running;\n  }\n  /**\n   * Iterates through the buffer, calling the function corresponding to the current state.\n   *\n   * States that are more likely to be hit are higher up, as a performance improvement.\n   */\n  parse() {\n    while (this.shouldContinue()) {\n      const c = this.buffer.charCodeAt(this.index - this.offset);\n      switch (this.state) {\n        case State.Text:\n          {\n            this.stateText(c);\n            break;\n          }\n        case State.SpecialStartSequence:\n          {\n            this.stateSpecialStartSequence(c);\n            break;\n          }\n        case State.InSpecialTag:\n          {\n            this.stateInSpecialTag(c);\n            break;\n          }\n        case State.CDATASequence:\n          {\n            this.stateCDATASequence(c);\n            break;\n          }\n        case State.InAttributeValueDq:\n          {\n            this.stateInAttributeValueDoubleQuotes(c);\n            break;\n          }\n        case State.InAttributeName:\n          {\n            this.stateInAttributeName(c);\n            break;\n          }\n        case State.InCommentLike:\n          {\n            this.stateInCommentLike(c);\n            break;\n          }\n        case State.InSpecialComment:\n          {\n            this.stateInSpecialComment(c);\n            break;\n          }\n        case State.BeforeAttributeName:\n          {\n            this.stateBeforeAttributeName(c);\n            break;\n          }\n        case State.InTagName:\n          {\n            this.stateInTagName(c);\n            break;\n          }\n        case State.InClosingTagName:\n          {\n            this.stateInClosingTagName(c);\n            break;\n          }\n        case State.BeforeTagName:\n          {\n            this.stateBeforeTagName(c);\n            break;\n          }\n        case State.AfterAttributeName:\n          {\n            this.stateAfterAttributeName(c);\n            break;\n          }\n        case State.InAttributeValueSq:\n          {\n            this.stateInAttributeValueSingleQuotes(c);\n            break;\n          }\n        case State.BeforeAttributeValue:\n          {\n            this.stateBeforeAttributeValue(c);\n            break;\n          }\n        case State.BeforeClosingTagName:\n          {\n            this.stateBeforeClosingTagName(c);\n            break;\n          }\n        case State.AfterClosingTagName:\n          {\n            this.stateAfterClosingTagName(c);\n            break;\n          }\n        case State.BeforeSpecialS:\n          {\n            this.stateBeforeSpecialS(c);\n            break;\n          }\n        case State.BeforeSpecialT:\n          {\n            this.stateBeforeSpecialT(c);\n            break;\n          }\n        case State.InAttributeValueNq:\n          {\n            this.stateInAttributeValueNoQuotes(c);\n            break;\n          }\n        case State.InSelfClosingTag:\n          {\n            this.stateInSelfClosingTag(c);\n            break;\n          }\n        case State.InDeclaration:\n          {\n            this.stateInDeclaration(c);\n            break;\n          }\n        case State.BeforeDeclaration:\n          {\n            this.stateBeforeDeclaration(c);\n            break;\n          }\n        case State.BeforeComment:\n          {\n            this.stateBeforeComment(c);\n            break;\n          }\n        case State.InProcessingInstruction:\n          {\n            this.stateInProcessingInstruction(c);\n            break;\n          }\n        case State.InEntity:\n          {\n            this.stateInEntity();\n            break;\n          }\n      }\n      this.index++;\n    }\n    this.cleanup();\n  }\n  finish() {\n    if (this.state === State.InEntity) {\n      this.entityDecoder.end();\n      this.state = this.baseState;\n    }\n    this.handleTrailingData();\n    this.cbs.onend();\n  }\n  /** Handle any trailing data. */\n  handleTrailingData() {\n    const endIndex = this.buffer.length + this.offset;\n    // If there is no remaining data, we are done.\n    if (this.sectionStart >= endIndex) {\n      return;\n    }\n    if (this.state === State.InCommentLike) {\n      if (this.currentSequence === Sequences.CdataEnd) {\n        this.cbs.oncdata(this.sectionStart, endIndex, 0);\n      } else {\n        this.cbs.oncomment(this.sectionStart, endIndex, 0);\n      }\n    } else if (this.state === State.InTagName || this.state === State.BeforeAttributeName || this.state === State.BeforeAttributeValue || this.state === State.AfterAttributeName || this.state === State.InAttributeName || this.state === State.InAttributeValueSq || this.state === State.InAttributeValueDq || this.state === State.InAttributeValueNq || this.state === State.InClosingTagName) {\n      /*\n       * If we are currently in an opening or closing tag, us not calling the\n       * respective callback signals that the tag should be ignored.\n       */\n    } else {\n      this.cbs.ontext(this.sectionStart, endIndex);\n    }\n  }\n  emitCodePoint(cp, consumed) {\n    if (this.baseState !== State.Text && this.baseState !== State.InSpecialTag) {\n      if (this.sectionStart < this.entityStart) {\n        this.cbs.onattribdata(this.sectionStart, this.entityStart);\n      }\n      this.sectionStart = this.entityStart + consumed;\n      this.index = this.sectionStart - 1;\n      this.cbs.onattribentity(cp);\n    } else {\n      if (this.sectionStart < this.entityStart) {\n        this.cbs.ontext(this.sectionStart, this.entityStart);\n      }\n      this.sectionStart = this.entityStart + consumed;\n      this.index = this.sectionStart - 1;\n      this.cbs.ontextentity(cp, this.sectionStart);\n    }\n  }\n}\n", "import Tokenizer, { QuoteType } from \"./Tokenizer.js\";\nimport { fromCodePoint } from \"entities/lib/decode.js\";\nconst formTags = new Set([\"input\", \"option\", \"optgroup\", \"select\", \"button\", \"datalist\", \"textarea\"]);\nconst pTag = new Set([\"p\"]);\nconst tableSectionTags = new Set([\"thead\", \"tbody\"]);\nconst ddtTags = new Set([\"dd\", \"dt\"]);\nconst rtpTags = new Set([\"rt\", \"rp\"]);\nconst openImpliesClose = new Map([[\"tr\", new Set([\"tr\", \"th\", \"td\"])], [\"th\", new Set([\"th\"])], [\"td\", new Set([\"thead\", \"th\", \"td\"])], [\"body\", new Set([\"head\", \"link\", \"script\"])], [\"li\", new Set([\"li\"])], [\"p\", pTag], [\"h1\", pTag], [\"h2\", pTag], [\"h3\", pTag], [\"h4\", pTag], [\"h5\", pTag], [\"h6\", pTag], [\"select\", formTags], [\"input\", formTags], [\"output\", formTags], [\"button\", formTags], [\"datalist\", formTags], [\"textarea\", formTags], [\"option\", new Set([\"option\"])], [\"optgroup\", new Set([\"optgroup\", \"option\"])], [\"dd\", ddtTags], [\"dt\", ddtTags], [\"address\", pTag], [\"article\", pTag], [\"aside\", pTag], [\"blockquote\", pTag], [\"details\", pTag], [\"div\", pTag], [\"dl\", pTag], [\"fieldset\", pTag], [\"figcaption\", pTag], [\"figure\", pTag], [\"footer\", pTag], [\"form\", pTag], [\"header\", pTag], [\"hr\", pTag], [\"main\", pTag], [\"nav\", pTag], [\"ol\", pTag], [\"pre\", pTag], [\"section\", pTag], [\"table\", pTag], [\"ul\", pTag], [\"rt\", rtpTags], [\"rp\", rtpTags], [\"tbody\", tableSectionTags], [\"tfoot\", tableSectionTags]]);\nconst voidElements = new Set([\"area\", \"base\", \"basefont\", \"br\", \"col\", \"command\", \"embed\", \"frame\", \"hr\", \"img\", \"input\", \"isindex\", \"keygen\", \"link\", \"meta\", \"param\", \"source\", \"track\", \"wbr\"]);\nconst foreignContextElements = new Set([\"math\", \"svg\"]);\nconst htmlIntegrationElements = new Set([\"mi\", \"mo\", \"mn\", \"ms\", \"mtext\", \"annotation-xml\", \"foreignobject\", \"desc\", \"title\"]);\nconst reNameEnd = /\\s|\\//;\nexport class Parser {\n  constructor(cbs, options = {}) {\n    var _a, _b, _c, _d, _e, _f;\n    this.options = options;\n    /** The start index of the last event. */\n    this.startIndex = 0;\n    /** The end index of the last event. */\n    this.endIndex = 0;\n    /**\n     * Store the start index of the current open tag,\n     * so we can update the start index for attributes.\n     */\n    this.openTagStart = 0;\n    this.tagname = \"\";\n    this.attribname = \"\";\n    this.attribvalue = \"\";\n    this.attribs = null;\n    this.stack = [];\n    this.buffers = [];\n    this.bufferOffset = 0;\n    /** The index of the last written buffer. Used when resuming after a `pause()`. */\n    this.writeIndex = 0;\n    /** Indicates whether the parser has finished running / `.end` has been called. */\n    this.ended = false;\n    this.cbs = cbs !== null && cbs !== void 0 ? cbs : {};\n    this.htmlMode = !this.options.xmlMode;\n    this.lowerCaseTagNames = (_a = options.lowerCaseTags) !== null && _a !== void 0 ? _a : this.htmlMode;\n    this.lowerCaseAttributeNames = (_b = options.lowerCaseAttributeNames) !== null && _b !== void 0 ? _b : this.htmlMode;\n    this.recognizeSelfClosing = (_c = options.recognizeSelfClosing) !== null && _c !== void 0 ? _c : !this.htmlMode;\n    this.tokenizer = new ((_d = options.Tokenizer) !== null && _d !== void 0 ? _d : Tokenizer)(this.options, this);\n    this.foreignContext = [!this.htmlMode];\n    (_f = (_e = this.cbs).onparserinit) === null || _f === void 0 ? void 0 : _f.call(_e, this);\n  }\n  // Tokenizer event handlers\n  /** @internal */\n  ontext(start, endIndex) {\n    var _a, _b;\n    const data = this.getSlice(start, endIndex);\n    this.endIndex = endIndex - 1;\n    (_b = (_a = this.cbs).ontext) === null || _b === void 0 ? void 0 : _b.call(_a, data);\n    this.startIndex = endIndex;\n  }\n  /** @internal */\n  ontextentity(cp, endIndex) {\n    var _a, _b;\n    this.endIndex = endIndex - 1;\n    (_b = (_a = this.cbs).ontext) === null || _b === void 0 ? void 0 : _b.call(_a, fromCodePoint(cp));\n    this.startIndex = endIndex;\n  }\n  /**\n   * Checks if the current tag is a void element. Override this if you want\n   * to specify your own additional void elements.\n   */\n  isVoidElement(name) {\n    return this.htmlMode && voidElements.has(name);\n  }\n  /** @internal */\n  onopentagname(start, endIndex) {\n    this.endIndex = endIndex;\n    let name = this.getSlice(start, endIndex);\n    if (this.lowerCaseTagNames) {\n      name = name.toLowerCase();\n    }\n    this.emitOpenTag(name);\n  }\n  emitOpenTag(name) {\n    var _a, _b, _c, _d;\n    this.openTagStart = this.startIndex;\n    this.tagname = name;\n    const impliesClose = this.htmlMode && openImpliesClose.get(name);\n    if (impliesClose) {\n      while (this.stack.length > 0 && impliesClose.has(this.stack[0])) {\n        const element = this.stack.shift();\n        (_b = (_a = this.cbs).onclosetag) === null || _b === void 0 ? void 0 : _b.call(_a, element, true);\n      }\n    }\n    if (!this.isVoidElement(name)) {\n      this.stack.unshift(name);\n      if (this.htmlMode) {\n        if (foreignContextElements.has(name)) {\n          this.foreignContext.unshift(true);\n        } else if (htmlIntegrationElements.has(name)) {\n          this.foreignContext.unshift(false);\n        }\n      }\n    }\n    (_d = (_c = this.cbs).onopentagname) === null || _d === void 0 ? void 0 : _d.call(_c, name);\n    if (this.cbs.onopentag) this.attribs = {};\n  }\n  endOpenTag(isImplied) {\n    var _a, _b;\n    this.startIndex = this.openTagStart;\n    if (this.attribs) {\n      (_b = (_a = this.cbs).onopentag) === null || _b === void 0 ? void 0 : _b.call(_a, this.tagname, this.attribs, isImplied);\n      this.attribs = null;\n    }\n    if (this.cbs.onclosetag && this.isVoidElement(this.tagname)) {\n      this.cbs.onclosetag(this.tagname, true);\n    }\n    this.tagname = \"\";\n  }\n  /** @internal */\n  onopentagend(endIndex) {\n    this.endIndex = endIndex;\n    this.endOpenTag(false);\n    // Set `startIndex` for next node\n    this.startIndex = endIndex + 1;\n  }\n  /** @internal */\n  onclosetag(start, endIndex) {\n    var _a, _b, _c, _d, _e, _f, _g, _h;\n    this.endIndex = endIndex;\n    let name = this.getSlice(start, endIndex);\n    if (this.lowerCaseTagNames) {\n      name = name.toLowerCase();\n    }\n    if (this.htmlMode && (foreignContextElements.has(name) || htmlIntegrationElements.has(name))) {\n      this.foreignContext.shift();\n    }\n    if (!this.isVoidElement(name)) {\n      const pos = this.stack.indexOf(name);\n      if (pos !== -1) {\n        for (let index = 0; index <= pos; index++) {\n          const element = this.stack.shift();\n          // We know the stack has sufficient elements.\n          (_b = (_a = this.cbs).onclosetag) === null || _b === void 0 ? void 0 : _b.call(_a, element, index !== pos);\n        }\n      } else if (this.htmlMode && name === \"p\") {\n        // Implicit open before close\n        this.emitOpenTag(\"p\");\n        this.closeCurrentTag(true);\n      }\n    } else if (this.htmlMode && name === \"br\") {\n      // We can't use `emitOpenTag` for implicit open, as `br` would be implicitly closed.\n      (_d = (_c = this.cbs).onopentagname) === null || _d === void 0 ? void 0 : _d.call(_c, \"br\");\n      (_f = (_e = this.cbs).onopentag) === null || _f === void 0 ? void 0 : _f.call(_e, \"br\", {}, true);\n      (_h = (_g = this.cbs).onclosetag) === null || _h === void 0 ? void 0 : _h.call(_g, \"br\", false);\n    }\n    // Set `startIndex` for next node\n    this.startIndex = endIndex + 1;\n  }\n  /** @internal */\n  onselfclosingtag(endIndex) {\n    this.endIndex = endIndex;\n    if (this.recognizeSelfClosing || this.foreignContext[0]) {\n      this.closeCurrentTag(false);\n      // Set `startIndex` for next node\n      this.startIndex = endIndex + 1;\n    } else {\n      // Ignore the fact that the tag is self-closing.\n      this.onopentagend(endIndex);\n    }\n  }\n  closeCurrentTag(isOpenImplied) {\n    var _a, _b;\n    const name = this.tagname;\n    this.endOpenTag(isOpenImplied);\n    // Self-closing tags will be on the top of the stack\n    if (this.stack[0] === name) {\n      // If the opening tag isn't implied, the closing tag has to be implied.\n      (_b = (_a = this.cbs).onclosetag) === null || _b === void 0 ? void 0 : _b.call(_a, name, !isOpenImplied);\n      this.stack.shift();\n    }\n  }\n  /** @internal */\n  onattribname(start, endIndex) {\n    this.startIndex = start;\n    const name = this.getSlice(start, endIndex);\n    this.attribname = this.lowerCaseAttributeNames ? name.toLowerCase() : name;\n  }\n  /** @internal */\n  onattribdata(start, endIndex) {\n    this.attribvalue += this.getSlice(start, endIndex);\n  }\n  /** @internal */\n  onattribentity(cp) {\n    this.attribvalue += fromCodePoint(cp);\n  }\n  /** @internal */\n  onattribend(quote, endIndex) {\n    var _a, _b;\n    this.endIndex = endIndex;\n    (_b = (_a = this.cbs).onattribute) === null || _b === void 0 ? void 0 : _b.call(_a, this.attribname, this.attribvalue, quote === QuoteType.Double ? '\"' : quote === QuoteType.Single ? \"'\" : quote === QuoteType.NoValue ? undefined : null);\n    if (this.attribs && !Object.prototype.hasOwnProperty.call(this.attribs, this.attribname)) {\n      this.attribs[this.attribname] = this.attribvalue;\n    }\n    this.attribvalue = \"\";\n  }\n  getInstructionName(value) {\n    const index = value.search(reNameEnd);\n    let name = index < 0 ? value : value.substr(0, index);\n    if (this.lowerCaseTagNames) {\n      name = name.toLowerCase();\n    }\n    return name;\n  }\n  /** @internal */\n  ondeclaration(start, endIndex) {\n    this.endIndex = endIndex;\n    const value = this.getSlice(start, endIndex);\n    if (this.cbs.onprocessinginstruction) {\n      const name = this.getInstructionName(value);\n      this.cbs.onprocessinginstruction(`!${name}`, `!${value}`);\n    }\n    // Set `startIndex` for next node\n    this.startIndex = endIndex + 1;\n  }\n  /** @internal */\n  onprocessinginstruction(start, endIndex) {\n    this.endIndex = endIndex;\n    const value = this.getSlice(start, endIndex);\n    if (this.cbs.onprocessinginstruction) {\n      const name = this.getInstructionName(value);\n      this.cbs.onprocessinginstruction(`?${name}`, `?${value}`);\n    }\n    // Set `startIndex` for next node\n    this.startIndex = endIndex + 1;\n  }\n  /** @internal */\n  oncomment(start, endIndex, offset) {\n    var _a, _b, _c, _d;\n    this.endIndex = endIndex;\n    (_b = (_a = this.cbs).oncomment) === null || _b === void 0 ? void 0 : _b.call(_a, this.getSlice(start, endIndex - offset));\n    (_d = (_c = this.cbs).oncommentend) === null || _d === void 0 ? void 0 : _d.call(_c);\n    // Set `startIndex` for next node\n    this.startIndex = endIndex + 1;\n  }\n  /** @internal */\n  oncdata(start, endIndex, offset) {\n    var _a, _b, _c, _d, _e, _f, _g, _h, _j, _k;\n    this.endIndex = endIndex;\n    const value = this.getSlice(start, endIndex - offset);\n    if (!this.htmlMode || this.options.recognizeCDATA) {\n      (_b = (_a = this.cbs).oncdatastart) === null || _b === void 0 ? void 0 : _b.call(_a);\n      (_d = (_c = this.cbs).ontext) === null || _d === void 0 ? void 0 : _d.call(_c, value);\n      (_f = (_e = this.cbs).oncdataend) === null || _f === void 0 ? void 0 : _f.call(_e);\n    } else {\n      (_h = (_g = this.cbs).oncomment) === null || _h === void 0 ? void 0 : _h.call(_g, `[CDATA[${value}]]`);\n      (_k = (_j = this.cbs).oncommentend) === null || _k === void 0 ? void 0 : _k.call(_j);\n    }\n    // Set `startIndex` for next node\n    this.startIndex = endIndex + 1;\n  }\n  /** @internal */\n  onend() {\n    var _a, _b;\n    if (this.cbs.onclosetag) {\n      // Set the end index for all remaining tags\n      this.endIndex = this.startIndex;\n      for (let index = 0; index < this.stack.length; index++) {\n        this.cbs.onclosetag(this.stack[index], true);\n      }\n    }\n    (_b = (_a = this.cbs).onend) === null || _b === void 0 ? void 0 : _b.call(_a);\n  }\n  /**\n   * Resets the parser to a blank state, ready to parse a new HTML document\n   */\n  reset() {\n    var _a, _b, _c, _d;\n    (_b = (_a = this.cbs).onreset) === null || _b === void 0 ? void 0 : _b.call(_a);\n    this.tokenizer.reset();\n    this.tagname = \"\";\n    this.attribname = \"\";\n    this.attribs = null;\n    this.stack.length = 0;\n    this.startIndex = 0;\n    this.endIndex = 0;\n    (_d = (_c = this.cbs).onparserinit) === null || _d === void 0 ? void 0 : _d.call(_c, this);\n    this.buffers.length = 0;\n    this.foreignContext.length = 0;\n    this.foreignContext.unshift(!this.htmlMode);\n    this.bufferOffset = 0;\n    this.writeIndex = 0;\n    this.ended = false;\n  }\n  /**\n   * Resets the parser, then parses a complete document and\n   * pushes it to the handler.\n   *\n   * @param data Document to parse.\n   */\n  parseComplete(data) {\n    this.reset();\n    this.end(data);\n  }\n  getSlice(start, end) {\n    while (start - this.bufferOffset >= this.buffers[0].length) {\n      this.shiftBuffer();\n    }\n    let slice = this.buffers[0].slice(start - this.bufferOffset, end - this.bufferOffset);\n    while (end - this.bufferOffset > this.buffers[0].length) {\n      this.shiftBuffer();\n      slice += this.buffers[0].slice(0, end - this.bufferOffset);\n    }\n    return slice;\n  }\n  shiftBuffer() {\n    this.bufferOffset += this.buffers[0].length;\n    this.writeIndex--;\n    this.buffers.shift();\n  }\n  /**\n   * Parses a chunk of data and calls the corresponding callbacks.\n   *\n   * @param chunk Chunk to parse.\n   */\n  write(chunk) {\n    var _a, _b;\n    if (this.ended) {\n      (_b = (_a = this.cbs).onerror) === null || _b === void 0 ? void 0 : _b.call(_a, new Error(\".write() after done!\"));\n      return;\n    }\n    this.buffers.push(chunk);\n    if (this.tokenizer.running) {\n      this.tokenizer.write(chunk);\n      this.writeIndex++;\n    }\n  }\n  /**\n   * Parses the end of the buffer and clears the stack, calls onend.\n   *\n   * @param chunk Optional final chunk to parse.\n   */\n  end(chunk) {\n    var _a, _b;\n    if (this.ended) {\n      (_b = (_a = this.cbs).onerror) === null || _b === void 0 ? void 0 : _b.call(_a, new Error(\".end() after done!\"));\n      return;\n    }\n    if (chunk) this.write(chunk);\n    this.ended = true;\n    this.tokenizer.end();\n  }\n  /**\n   * Pauses parsing. The parser won't emit events until `resume` is called.\n   */\n  pause() {\n    this.tokenizer.pause();\n  }\n  /**\n   * Resumes parsing after `pause` was called.\n   */\n  resume() {\n    this.tokenizer.resume();\n    while (this.tokenizer.running && this.writeIndex < this.buffers.length) {\n      this.tokenizer.write(this.buffers[this.writeIndex++]);\n    }\n    if (this.ended) this.tokenizer.end();\n  }\n  /**\n   * Alias of `write`, for backwards compatibility.\n   *\n   * @param chunk Chunk to parse.\n   * @deprecated\n   */\n  parseChunk(chunk) {\n    this.write(chunk);\n  }\n  /**\n   * Alias of `end`, for backwards compatibility.\n   *\n   * @param chunk Optional final chunk to parse.\n   * @deprecated\n   */\n  done(chunk) {\n    this.end(chunk);\n  }\n}\n", "import { Parser } from \"./Parser.js\";\nexport { Parser } from \"./Parser.js\";\nimport { DomHandler } from \"domhandler\";\nexport { DomHandler,\n// Old name for DomHandler\nDomHandler as DefaultHandler } from \"domhandler\";\n// Helper methods\n/**\n * Parses the data, returns the resulting document.\n *\n * @param data The data that should be parsed.\n * @param options Optional options for the parser and DOM handler.\n */\nexport function parseDocument(data, options) {\n  const handler = new DomHandler(undefined, options);\n  new Parser(handler, options).end(data);\n  return handler.root;\n}\n/**\n * Parses data, returns an array of the root nodes.\n *\n * Note that the root nodes still have a `Document` node as their parent.\n * Use `parseDocument` to get the `Document` node instead.\n *\n * @param data The data that should be parsed.\n * @param options Optional options for the parser and DOM handler.\n * @deprecated Use `parseDocument` instead.\n */\nexport function parseDOM(data, options) {\n  return parseDocument(data, options).children;\n}\n/**\n * Creates a parser instance, with an attached DOM handler.\n *\n * @param callback A callback that will be called once parsing has been completed, with the resulting document.\n * @param options Optional options for the parser and DOM handler.\n * @param elementCallback An optional callback that will be called every time a tag has been completed inside of the DOM.\n */\nexport function createDocumentStream(callback, options, elementCallback) {\n  const handler = new DomHandler(error => callback(error, handler.root), options, elementCallback);\n  return new Parser(handler, options);\n}\n/**\n * Creates a parser instance, with an attached DOM handler.\n *\n * @param callback A callback that will be called once parsing has been completed, with an array of root nodes.\n * @param options Optional options for the parser and DOM handler.\n * @param elementCallback An optional callback that will be called every time a tag has been completed inside of the DOM.\n * @deprecated Use `createDocumentStream` instead.\n */\nexport function createDomStream(callback, options, elementCallback) {\n  const handler = new DomHandler(callback, options, elementCallback);\n  return new Parser(handler, options);\n}\nexport { default as Tokenizer, QuoteType } from \"./Tokenizer.js\";\n/*\n * All of the following exports exist for backwards-compatibility.\n * They should probably be removed eventually.\n */\nexport * as ElementType from \"domelementtype\";\nimport { getFeed } from \"domutils\";\nexport { getFeed } from \"domutils\";\nconst parseFeedDefaultOptions = {\n  xmlMode: true\n};\n/**\n * Parse a feed.\n *\n * @param feed The feed that should be parsed, as a string.\n * @param options Optionally, options for parsing. When using this, you should set `xmlMode` to `true`.\n */\nexport function parseFeed(feed, options = parseFeedDefaultOptions) {\n  return getFeed(parseDOM(feed, options));\n}\nexport * as DomUtils from \"domutils\";\n", "import { getLoad } from './load.js';\nimport { getParse } from './parse.js';\nimport { renderWithParse5, parseWithParse5 } from './parsers/parse5-adapter.js';\nimport renderWithHtmlparser2 from 'dom-serializer';\nimport { parseDocument as parseWithHtmlparser2 } from 'htmlparser2';\nconst parse = getParse((content, options, isDocument, context) => options._useHtmlParser2 ? parseWithHtmlparser2(content, options) : parseWithParse5(content, options, isDocument, context));\n// Duplicate docs due to https://github.com/TypeStrong/typedoc/issues/1616\n/**\n * Create a querying function, bound to a document created from the provided\n * markup.\n *\n * Note that similar to web browser contexts, this operation may introduce\n * `<html>`, `<head>`, and `<body>` elements; set `isDocument` to `false` to\n * switch to fragment mode and disable this.\n *\n * @category Loading\n * @param content - Markup to be loaded.\n * @param options - Options for the created instance.\n * @param isDocument - Allows parser to be switched to fragment mode.\n * @returns The loaded document.\n * @see {@link https://cheerio.js.org#loading} for additional usage information.\n */\nexport const load = getLoad(parse, (dom, options) => options._useHtmlParser2 ? renderWithHtmlparser2(dom, options) : renderWithParse5(dom));\n"],
  "mappings": "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",
  "names": ["trueFunc", "esm_exports", "isTag", "ElementType", "parent", "prev", "next", "data", "Text", "Comment", "children", "_a", "CDATA", "isTag", "clone", "data", "Text", "Comment", "text", "CDATA", "parent", "_a", "CharCodes", "BinTrieFlags", "EntityDecoderState", "DecodingMode", "end", "_a", "index", "next", "map", "escape", "data", "EntityLevel", "EncodingMode", "val", "attributes", "_a", "data", "node", "isTag", "parent", "siblings", "prev", "next", "_a", "isTag", "prev", "next", "parent", "isTag", "isTag", "data", "DocumentPosition", "siblings", "_a", "children", "href", "prop", "val", "defaultOpts", "render", "data", "next", "map", "CharacterCodes", "_a", "isTag", "prop", "val", "data", "end", "index", "filter", "find", "is", "SelectorType", "AttributeAction", "subselects", "getName", "data", "import_boolbase", "import_boolbase", "isTraversal", "_a", "next", "data", "adapter", "attr", "boolbase", "_a", "parse", "import_boolbase", "boolbase", "index", "parse", "import_boolbase", "next", "adapter", "parent", "text", "contains", "boolbase", "siblings", "adapter", "elem", "siblings", "import_boolbase", "next", "adapter", "boolbase", "siblings", "compileToken", "isTraversal", "next", "compileToken", "_a", "data", "adapter", "parent", "next", "compileToken", "elem", "siblings", "compile", "next", "data", "adapter", "parent", "isTraversal", "_a", "first", "boolbase", "esm_exports", "_a", "compile", "select", "adapter", "boolbase", "boolbase", "s", "filter", "data", "is", "filter", "data", "isTag", "_a", "root", "find", "esm_exports", "find", "_a", "fn", "nextElem", "next", "is", "parent", "isTag", "val", "filter", "root", "end", "contents", "append", "html", "prepend", "text", "parse", "isDocument", "root", "parent", "clone", "parent", "_a", "prev", "next", "append", "children", "prepend", "wrap", "isTag", "siblings", "index", "html", "text", "Text", "root", "prop", "val", "isTag", "stringify", "parse", "data", "isTag", "_a", "val", "extract", "_a", "map", "$", "root", "parse", "render", "load", "isDocument", "content", "options", "root", "CODE_POINTS", "ERR", "TokenType", "NS", "ATTRS", "DOCUMENT_MODE", "TAG_NAMES", "TAG_ID", "_a", "State", "isAsciiAlphaNumeric", "isWhitespace", "_a", "EntryType", "entry", "data", "text", "attr", "attr", "InsertionMode", "html", "_a", "parent", "siblings", "defaultOpts", "defaultOpts", "html", "attr", "parent", "parse", "html", "isTag", "data", "Comment", "Text", "prev", "next", "text", "_a", "isDocument", "_a", "parse", "index", "CharCodes", "State", "isWhitespace", "QuoteType", "Tokenizer", "Parser", "_a", "Tokenizer", "data", "index", "end", "slice", "data", "Parser", "parse", "isDocument"]
}
